<?xml version="1.0" encoding="UTF-8"?>
<blocks>
  <block id="8447c4879970f03c99a2bec36a05c141" category="summary">Trident の REST API を使用する場合は、 REST エンドポイントを直接使用できます。</block>
  <block id="a0ebcf8495639418ba9d4b85dbb67b8b" category="doc">Astra Trident REST API</block>
  <block id="319c1a7b5479ffa2a028b658ad5b7033" category="inline-link-macro">tridentctl コマンドとオプション</block>
  <block id="d7c9226cc31c5b12ee3114bc7014c075" category="paragraph">これは、 Kubernetes 以外の環境で、 Astra Trident をスタンドアロンバイナリとして使用する高度なインストールに役立ちます。</block>
  <block id="ff307287df4629ad827fba73568b9a58" category="paragraph">セキュリティを強化するために、 Astra Trident の「 RE ST API 」は、ポッド内で実行される場合のデフォルトで localhost に制限されています。この動作を変更するには、ポッド構成で Astra Trident の「 -address 」引数を設定する必要があります。</block>
  <block id="8b3c7aa88e751573c842f17535525f19" category="paragraph">API は次のように機能します。</block>
  <block id="7528035a93ee69cedb1dbddb2f0bfcc8" category="section-title">取得</block>
  <block id="2fab7aa97b6a2cfae6563e72aac5161e" category="list-text">get&lt;trident-address&gt;/trident/v1/&lt;object-type&gt;: そのタイプのすべてのオブジェクトを一覧表示します。</block>
  <block id="c34156b367bae1b376f09b89d3be7992" category="list-text">get&lt;trident-address&gt;/trident/v1/&lt; オブジェクトタイプ &gt;/&lt; オブジェクト名 &gt;: 名前付きオブジェクトの詳細を取得します。</block>
  <block id="a02439ec229d8be0e74b0c1602392310" category="section-title">投稿（ Post ）</block>
  <block id="6692e2cd6834e6b9b2151799cac2a9f8" category="paragraph">'POST &lt;trident-address&gt;/trident/v1/&lt;object-type&gt;` ：指定した型のオブジェクトを作成します。</block>
  <block id="ce87eb03803d5633c163541464e9e7f2" category="inline-link-macro">tridentctl コマンドとオプション</block>
  <block id="3d2bacacf0178e742d5abb2abc32d431" category="list-text">オブジェクトを作成するには JSON 構成が必要です。各オブジェクトタイプの仕様については、を参照してください <block ref="e87a326653960de9774fcc58ee9fa490" category="inline-link-macro-rx"></block>。</block>
  <block id="5b2f45c3d098b61927afda859c9144f8" category="list-text">オブジェクトがすでに存在する場合、動作は一定ではありません。バックエンドが既存のオブジェクトを更新しますが、それ以外のすべてのオブジェクトタイプで処理が失敗します。</block>
  <block id="32f68a60cef40faedbc6af20298c1a1e" category="section-title">削除</block>
  <block id="ecfc51243c8c28fc234ff87f1f9ddb88" category="paragraph">`D eleet&lt;trident-address&gt;/trident/v1/&lt; オブジェクトタイプ &gt;/&lt; オブジェクト名 &gt;` ：名前付きリソースを削除します。</block>
  <block id="80e4e3d3203325fb6aeb139614fd09f3" category="admonition">バックエンドまたはストレージクラスに関連付けられているボリュームは削除されず、削除されません。詳細については、を参照してください <block ref="e87a326653960de9774fcc58ee9fa490" category="inline-link-macro-rx"></block>。</block>
  <block id="ce94b1f7df7a6a05a559b66f96eff1cc" category="paragraph">これらの API の呼び出し方法の例については 'debug(d`) フラグを渡してください詳細については、を参照してください <block ref="e87a326653960de9774fcc58ee9fa490" category="inline-link-macro-rx"></block>。</block>
  <block id="a1582c89f8e85f372306a05848eafb68" category="summary">ネットアップのストレージ製品ポートフォリオは、 Kubernetes クラスタのさまざまな要素と統合され、高度なデータ管理機能を提供して、 Kubernetes 環境の機能、機能、パフォーマンス、可用性を強化します。</block>
  <block id="9944b094c4079f770fabc4ae629feb0f" category="doc">ネットアップの製品が Kubernetes と統合されます</block>
  <block id="3cce5f3eaf76e098ba8e28f7bbba3f92" category="section-title">アストラ</block>
  <block id="293b14f82e58fc3efc27bf18185a38c8" category="paragraph"><block ref="35a6b548833df39b8bbc748563b1938b" category="inline-link-rx"></block> Kubernetes 上で実行される大量のデータコンテナ化ワークロードを、パブリッククラウドとオンプレミスの間で簡単に管理、保護、移動できます。Astra は、ネットアップの実績のある拡張可能なストレージポートフォリオから、パブリッククラウドとオンプレミスに提供される Trident を使用して、永続的なコンテナストレージをプロビジョニングし、提供します。また、 Snapshot 、バックアップとリストア、アクティビティログ、アクティブクローニングによるデータ保護、ディザスタ / データリカバリ、データ監査、 Kubernetes ワークロードの移行のユースケースなど、アプリケーションに対応した高度なデータ管理機能も豊富に搭載されています。</block>
  <block id="253b40ae359ba25b56231803430c4873" category="section-title">ONTAP</block>
  <block id="51fd2fc669e51c6870f1148623240f69" category="paragraph">ONTAP は、あらゆるアプリケーションに高度なデータ管理機能を提供する、ネットアップのマルチプロトコルユニファイドストレージオペレーティングシステムです。ONTAP システムには、オールフラッシュ、ハイブリッド、オール HDD のいずれかの構成が採用されており、自社開発のハードウェア（ FAS と AFF ）、ノーブランド製品（ ONTAP Select ）、クラウドのみ（ Cloud Volumes ONTAP ）など、さまざまな導入モデルが用意されています。</block>
  <block id="cbb7697b4f6f189240d043ff70ca133c" category="admonition">Trident は、上記の ONTAP 導入モデルをすべてサポートしています。</block>
  <block id="117bdbda976fe8b3212bc3b6327a0a1b" category="section-title">Cloud Volumes ONTAP</block>
  <block id="5c04ffbd0c110bf7b37d6b95eb756b75" category="paragraph"><block ref="700b45b9fca207b66f675c8d5dfb073b" category="inline-link-rx"></block> は、クラウドで ONTAP データ管理ソフトウェアを実行するソフトウェア型ストレージアプライアンスです。Cloud Volumes ONTAP は、本番ワークロード、ディザスタリカバリ、 DevOps 、ファイル共有、データベース管理に使用できます。ストレージ効率、高可用性、データレプリケーション、データ階層化、アプリケーションの整合性を提供することで、エンタープライズストレージをクラウドに拡張します。</block>
  <block id="4d82a1ec1af02725042c8c785564ee7a" category="section-title">NetApp ONTAP 対応の Amazon FSX</block>
  <block id="04452ff4732608f62e53d20e4b8f4c92" category="paragraph"><block ref="6a2736fcbb5755dd03d114a5153506eb" category="inline-link-rx"></block> は、 NetApp ONTAP ストレージ・オペレーティング・システムを搭載したファイル・システムの起動と実行を可能にする、フルマネージドの AWS サービスです。FSX for ONTAP を使用すると、お客様は使い慣れたネットアップの機能、パフォーマンス、管理機能を活用しながら、 AWS にデータを格納する際のシンプルさ、即応性、セキュリティ、拡張性を活用できます。FSX for ONTAP は、 ONTAP のファイルシステム機能と管理 API の多くをサポートしています。</block>
  <block id="27bb76bfb1e4f9966c31f5042348cd1e" category="section-title">Element ソフトウェア</block>
  <block id="231afe47f3f37d3808096b36c28b4ded" category="inline-link">要素（ Element ）</block>
  <block id="1fdf61a8f946268990d8e15dd9069a6d" category="paragraph"><block ref="eca39b018af81e7b5c8e71b5b4aa3790" category="inline-link-rx"></block> ストレージ管理者は、パフォーマンスを保証し、ストレージの設置面積を合理化することで、ワークロードを統合できます。Element と API を組み合わせることでストレージ管理のあらゆる要素を自動化できるため、ストレージ管理者は少ない労力で多くの作業を行うことができます。</block>
  <block id="08edd2123939d5309dced149763a50ee" category="section-title">NetApp HCI</block>
  <block id="25f221cc63a7e1fa55b05c29420a72a2" category="paragraph"><block ref="2841e7defe3939e68d83d007d1ad666b" category="inline-link-rx"></block> 日常業務を自動化し、インフラ管理者がより重要な業務に集中できるようにすることで、データセンターの管理と拡張を簡易化します。</block>
  <block id="be17f8b9c728a6cb61cad5a2609b3888" category="paragraph">NetApp HCI は Trident によって完全にサポートされています。Trident では、コンテナ化されたアプリケーション用のストレージデバイスを、基盤となる NetApp HCI ストレージプラットフォームに直接プロビジョニングして管理できます。</block>
  <block id="b146010b35b21e2354c084cf6d1d2a5d" category="section-title">SANtricity</block>
  <block id="6161e6c043d51e8eea03494bff7fc57b" category="paragraph">ネットアップの E シリーズと EF シリーズのストレージプラットフォームでは、を使用します<block ref="01c1197ee4ca6d1b24476d1f7b6bc83e" category="inline-link-rx"></block> 可用性とパフォーマンスに優れた堅牢なストレージを提供し、あらゆる規模のアプリケーションにストレージサービスを提供できるようにするためのオペレーティングシステム。</block>
  <block id="9589e472cb7c5e0d01ca15ecca72de0d" category="paragraph">Trident では、製品ポートフォリオ全体で SANtricity ボリュームを作成、管理できます。</block>
  <block id="7450cfde7058dc5e1f7909d0280fd7ae" category="section-title">Azure NetApp Files の特長</block>
  <block id="29e7ab00082418141d470583a19c28d3" category="paragraph"><block ref="2384314bcd106c8062815b2ed789c4ad" category="inline-link-rx"></block> は、ネットアップが提供するエンタープライズクラスの Azure ファイル共有サービスです。要件がきわめて厳しいファイルベースのワークロードも、ネットアップが提供するパフォーマンスと充実のデータ管理機能を使用して、 Azure でネイティブに実行できます。</block>
  <block id="06021ba1ee96f1a3a57b50001fc7244c" category="section-title">Cloud Volumes Service for AWS</block>
  <block id="962483cc436ac01febcdca57fff4735f" category="inline-link">NetApp Cloud Volumes Service for AWS</block>
  <block id="9cd398e3307ca354d12d0f47aca4f913" category="paragraph"><block ref="a105e3d261515148b2a94b7605496120" category="inline-link-rx"></block> は、 NFS や SMB 経由で NAS ボリュームにオールフラッシュのパフォーマンスを提供する、クラウドネイティブのファイルサービスです。このサービスを使用すると、従来型アプリケーションを含むあらゆるワークロードを AWS クラウドで実行できます。フルマネージドサービスを提供し、ハイパフォーマンス、瞬時のクローニング、データ保護、 Elastic Container Service （ ECS ）インスタンスへのセキュアなアクセスを提供します。</block>
  <block id="b0cee72642f5457a71ddd0b49efb6d93" category="section-title">Cloud Volumes Service for Google Cloud</block>
  <block id="a3b5183ae6f5c3f1d6644448f795b5cb" category="inline-link">NetApp Cloud Volumes Service for Google Cloud</block>
  <block id="a1515efe69d0ac9d979af2bdfc068934" category="paragraph"><block ref="68704f3321dd8ca7029c03c29da7736a" category="inline-link-rx"></block> は、 NFS や SMB 経由で NAS ボリュームにオールフラッシュのパフォーマンスを提供する、クラウドネイティブのファイルサービスです。このサービスを使用すると、従来型アプリケーションを含むあらゆるワークロードを GCP クラウドで実行できます。フルマネージドサービスを提供し、一貫したハイパフォーマンス、瞬時のクローニング、データ保護、 Google Compute Engine （ GCE ）インスタンスへのセキュアなアクセスを実現します。</block>
  <block id="5ee08ab883e000ce6b739dbb0b6ff376" category="summary">Kubernetes システムの構成要素の詳細をご確認ください。</block>
  <block id="607ae6360b32f1bd6e559e915d414fab" category="doc">Kubernetes の概念</block>
  <block id="d60f0fff1c23a02458849862f593357e" category="inline-link">Kubernetes システム</block>
  <block id="a7018a5fd7b610274c7786aa5402e64d" category="paragraph">のコンポーネントの詳細については、を参照してください<block ref="f01a74527fa0343e793eb393c9d4809a" category="inline-link-rx"></block>。</block>
  <block id="7d4fab76513c90b603a722620cde60fe" category="doc">コマンドラインオプション</block>
  <block id="8db7df66ab1d7ab5f1dc947acdb5fae4" category="section-title">ロギング</block>
  <block id="7e2a14542a2613424ad88206fd2dd9aa" category="list-text">--debug: デバッグ出力をイネーブルにします。</block>
  <block id="55e727716c7f623987be58e50732c01e" category="list-text">-loglevel &lt;level&gt;` ：ロギングレベルを設定します（ debug 、 info 、 warn 、 error 、 fatal ）。デフォルトは info です。</block>
  <block id="30136395f01879792198317c11831ea4" category="section-title">Kubernetes</block>
  <block id="5700f5ae190580b01f6ed6c031668336" category="list-text">`-k8s_pod `: Kubernetes サポートを有効にするには ' このオプションまたは -k8s_api_server を使用しますこれを設定すると、 Trident はポッドの Kubernetes サービスアカウントのクレデンシャルを使用して API サーバに接続します。これは、サービスアカウントが有効になっている Kubernetes クラスタで Trident がポッドとして実行されている場合にのみ機能します。</block>
  <block id="24095e7ef85031e99914e2c5298a7ded" category="list-text">`-k8s_api_server &lt;insecure -address ： insecure -port&gt;`: このオプションまたは -k8s_pod を使用して Kubernetes サポートを有効にしますTrident を指定すると、セキュアでないアドレスとポートを使用して Kubernetes API サーバに接続されます。これにより、 Trident をポッドの外部に導入することができますが、サポートされるのは API サーバへのセキュアでない接続だけです。セキュアに接続するには、「 -k8s_pod 」オプションを使用してポッドに Trident を導入します。</block>
  <block id="9d77217a2dfe50f2575ced46f5e661d8" category="list-text">`-k8s_config_path&lt;file&gt;`: 必須。このパスを KubeConfig ファイルに指定する必要があります。</block>
  <block id="c5fd214cdd0d2b3b4272e73b022ba5c2" category="section-title">Docker です</block>
  <block id="1e071a3d810132af1c9f8f6a03ca5609" category="list-text">`-volume_driver &lt;name&gt;` ： Docker プラグインを登録するときに使用するドライバ名。デフォルトは 'NetApp' です</block>
  <block id="dfbbfd6bbf6bc798d1cbe8895d1cff22" category="list-text">`-ddriver_port &lt;port-number&gt;`: このポートでは 'UNIX ドメインソケットではなくリッスンします</block>
  <block id="3874d7b8c9196001f8bfe4c49f43b323" category="list-text">`-config &lt;file&gt;`: 必須。このパスをバックエンド構成ファイルに指定する必要があります。</block>
  <block id="50780f47f6839d47d60bc4555ee00c3f" category="section-title">REST</block>
  <block id="bfffd3cb0560af555e57dd6bad52a9be" category="list-text">`-address &lt;ip-or -host&gt;` ： Trident の REST サーバがリスンするアドレスを指定します。デフォルトは localhost です。localhost で聞いて Kubernetes ポッド内で実行しているときに、 REST インターフェイスにポッド外から直接アクセスすることはできません。ポッドの IP アドレスから REST インターフェイスにアクセスできるようにするには、「 -address 」を使用します。</block>
  <block id="049ad2e7bef322af60013bbdd35ebbe7" category="list-text">`-port &lt;port-number&gt;` ： Trident の REST サーバがリスンするポートを指定します。デフォルトは 8000 です。</block>
  <block id="188cb756fe8659cb2caf27ca6d1446b4" category="list-text">`-rest`: REST インタフェースを有効にしますデフォルトは true です。</block>
  <block id="afe272beb780ad53d441c342bf1c8c77" category="summary">Trident へのシンプルなアクセスを提供するコマンドラインユーティリティである tridentctl の詳細を確認できます。</block>
  <block id="7358b1fd077fa65f88fff87888fd2547" category="inline-link">Trident インストーラバンドル</block>
  <block id="4e49f66de2e2dc43c25555fe50639334" category="paragraph">。<block ref="5a856e83aada9750fe5389f8da94335b" category="inline-link-rx"></block> Astra Trident へのシンプルなアクセスを提供するコマンドラインユーティリティ「 tridentctl 」が含まれています。十分な権限を持つ Kubernetes ユーザは、このロールを使用して Astra Trident をインストールしたり、 Astra Trident ポッドが含まれるネームスペースを直接管理したりできます。</block>
  <block id="8ca34267f11cb69ea424bc0320f0e295" category="paragraph">使用方法については 'tridentctl --help' を実行してください</block>
  <block id="2dd878ee55d738aa02e6b0b162d45708" category="paragraph">使用可能なコマンド：</block>
  <block id="4386bd8da14af923cbb7ac011ffc048e" category="list-text">`create` ： Astra Trident にリソースを追加します。</block>
  <block id="f40f9a4cf242d0355aaf8d9e06617436" category="list-text">「削除」 : Astra Trident から 1 つ以上のリソースを削除します。</block>
  <block id="94b75e236d78fe800d1d32acc3882789" category="list-text">「 GET 」： Astra Trident から 1 つ以上のリソースを取得します。</block>
  <block id="bc9ef80dceea04796c6218fe96e05b30" category="list-text">「 help 」：任意のコマンドに関するヘルプ。</block>
  <block id="f5421bf790b945f508fa1b9f223318e5" category="list-text">`imag`: Astra Trident が必要とするコンテナイメージのテーブルを印刷しなさい。</block>
  <block id="40e65170f778aaa7f4ab7f645b3bb3df" category="list-text">import` ：既存のリソースを Astra Trident にインポートします。</block>
  <block id="a824e587817131e2052a450803b2d97c" category="list-text">install` ： Astra Trident をインストールします。</block>
  <block id="c90c365a06ede3139cad79d4e55673ee" category="list-text">logs` ： Astra Trident からログを印刷します。</block>
  <block id="e5c5ad2be68f58e910aa42a9fcc98141" category="list-text">'send': Astra Trident からリソースを送信します</block>
  <block id="3166458a066b2d14394e408f1f8fed84" category="list-text">uninstall: Astra Trident をアンインストールします。</block>
  <block id="8c8fcf9d4df8bd54d26dc748cc4bac55" category="list-text">`update` ： Astra Trident のリソースを変更します。</block>
  <block id="042aeda3cc45bf1f53a0e74660dbd924" category="list-text">アップグレード： Astra Trident のリソースをアップグレードします。</block>
  <block id="d014c15bf0496b645d02caf1704932f7" category="list-text">'ve rsion ： Astra Trident のバージョンを印刷します。</block>
  <block id="1c90ba5cf3791b6148c7887a696911ec" category="paragraph">フラグ：</block>
  <block id="568cd496b6bde641a886745edfa59ae7" category="list-text">`-d, --debug`: デバッグ出力。</block>
  <block id="fe27ec35afa597521f9616f18c32e556" category="list-text">`-h, --help` ： tridentctl のヘルプ。</block>
  <block id="874377d6c0baee9e8e842c8abf13d28c" category="list-text">`n,--namespace string`: Astra Trident 配備の名前空間。</block>
  <block id="463b413ea9e7764a789f3e987cb06fc8" category="list-text">`-o ,--output string`: 出力形式。JSON の 1 つ | yaml | name | wide | ps （デフォルト）。</block>
  <block id="85c5338e138fc6d122a579f7a07040bf" category="list-text">`s'--server string`: Astra Trident REST インタフェースのアドレス / ポート。</block>
  <block id="76ea0bebb3c22822b4f0dd9c9fd021c5" category="section-title">作成</block>
  <block id="b8d486e9285b25b72d6efad05e41de4d" category="paragraph">create コマンドを実行して 'Astra Trident にリソースを追加できます</block>
  <block id="6d5c7e6905e460d1fba1f2dd1c0d2a8a" category="paragraph">利用可能なオプション : backend`: Astra Trident にバックエンドを追加します。</block>
  <block id="099af53f601532dbd31e0ea99ffdeb64" category="section-title">削除</block>
  <block id="0d847e459450017616b8ab50b372ad2e" category="paragraph">「削除」コマンドを実行すると、 Astra Trident から 1 つ以上のリソースを削除できます。</block>
  <block id="16713f316b7cce82385c040efc32ac83" category="paragraph">使用可能なオプション：</block>
  <block id="417f8bf14ed5852917d189612c7d163c" category="list-text">backend`: Astra Trident から 1 つ以上のストレージバックエンドを削除します。</block>
  <block id="cafc31fff08c0637f779500b7840fe1e" category="list-text">'node`: Astra Trident から 1 つ以上の CSI ノードを削除します。</block>
  <block id="4896fd245b78ab9b7d044375c1fce85e" category="list-text">'Snapshot` ： Astra Trident から 1 つ以上のボリュームスナップショットを削除します。</block>
  <block id="cef6b6bb7932e7450e35eafc3d986f18" category="list-text">'torageclas' ： Astra Trident から 1 つ以上のストレージクラスを削除します</block>
  <block id="14eeaf8d1da512153855b759185ee129" category="list-text">'volume` ： Astra Trident から 1 つ以上のストレージボリュームを削除します</block>
  <block id="b5eda0a74558a342cf659187f06f746f" category="section-title">取得</block>
  <block id="c7a7a677647f05a4032891d4aef5bed5" category="paragraph">get コマンドを実行すると 'Astra Trident から 1 つ以上のリソースを取得できます</block>
  <block id="2dd609bd837a41363817262fd314b0be" category="list-text">backend`: Astra Trident から 1 つ以上のストレージバックエンドを取得します。</block>
  <block id="ad4ba4a1b0612fa67f4386330ac00e9d" category="list-text">'Snapshot` ： Astra Trident から 1 つ以上のスナップショットを取得します。</block>
  <block id="5385ccfb9fd8a07e53dc1a6ac58a101d" category="list-text">「 torageclass 」： Astra Trident から 1 つ以上のストレージクラスを取得します。</block>
  <block id="060da5b15e6fb7129c04e18b3d96c702" category="list-text">'volume`: Astra Trident から 1 つ以上のボリュームを取得します</block>
  <block id="59b514174bffe4ae402b3d63aad79fe0" category="section-title">イメージ</block>
  <block id="16ca0a361439e1f936eaa5c919443b10" category="paragraph">「 images 」フラグを実行すると、 Astra Trident が必要とするコンテナイメージのテーブルを印刷できます。</block>
  <block id="1008ac4609cab9210ae758ff8fee8127" category="paragraph">flags:*`-h, --help`: イメージのヘルプ。*`-v ,--k8s-version string`: Kubernetes クラスタのセマンティックバージョン。</block>
  <block id="f6c534966bc7687e0c87134d025f8837" category="section-title">ボリュームをインポートします</block>
  <block id="df5ec83145dcd824f8daf85d89e5dd8a" category="paragraph">import volume コマンドを実行して、既存のボリュームを Astra Trident にインポートできます。</block>
  <block id="ccf1bb29ef5562c033962d35014005e9" category="paragraph">エイリアス : volume 'v</block>
  <block id="48c7ae9a5466415a6b9666ad86746640" category="list-text">`-f ,--filename string`: YAML または JSON PVC ファイルへのパス。</block>
  <block id="1bb2af29a08ab6ea9414a8656234b8c6" category="list-text">`-h, --help` ：ボリュームのヘルプ。</block>
  <block id="0ad393d5c23749c23f3855220b55375a" category="list-text">``-- 管理なし `: PV/PVC のみを作成しますボリュームのライフサイクル管理を想定しないでください。</block>
  <block id="19ad89bc3e3c9d7ef68b89523eff1987" category="section-title">をインストールします</block>
  <block id="42ddf993417d9568ca6a057fe55f9c63" category="paragraph">"install" フラグを実行して、 Astra Trident をインストールできます。</block>
  <block id="d14ef114d140fec912921e8447a4dd25" category="list-text">`--autosupport-image string` ： AutoSupport Telemetry のコンテナイメージ（デフォルトは「 NetApp/trident autosupport ： 20.07.0 」）。</block>
  <block id="fbd7cc4267716ab9206612c6dcaa206e" category="list-text">`-- autosupport - proxy string` : AutoSupport Telemetry を送信するためのプロキシのアドレス / ポート。</block>
  <block id="8bb3d6751910d39b8c964e90434b79db" category="list-text">`--csI`: CSI Trident をインストールします (Kubernetes 1.13 のみをオーバーライドしますが、機能ゲートが必要です ) 。</block>
  <block id="778cbd0cbbd73953bc965ad29269803c" category="list-text">`--enable-node-prep : 必要なパッケージをノードにインストールしようとします</block>
  <block id="23945a1dd08f0fb29fc1b73a02a2f48d" category="list-text">``--generate-custom-yaml `: インストールしないで YAML ファイルを生成します。</block>
  <block id="351ac43ddb05bc31fb7aa4d76c9098ed" category="list-text">`-h, --help`: インストールのヘルプ。</block>
  <block id="3b825e283b9b4452c1ef223373ad950d" category="list-text">`-- image-registry string : 内部イメージレジストリのアドレス / ポート。</block>
  <block id="ba7224837b2ded4b5b295c1012fcc2c0" category="list-text">`--k8s-timeout duration`: すべての Kubernetes 操作のタイムアウト ( デフォルトは 3m0s)</block>
  <block id="6018142252ad7b87dc139b3235ff4fd3" category="list-text">`-- kubbelet-dir string`: kubelet の内部状態のホストの場所 ( デフォルトは /var/lib/kubbelet") 。</block>
  <block id="e36f8ff54239eb329caf981624e29cb9" category="list-text">`--log-format string`: Astra Trident のログ形式 (text,JSON] ( デフォルトは "text") 。</block>
  <block id="75f452bd493d8727bcf31563cc9106b4" category="list-text">`--pv string`: Astra Trident が使用するレガシー PV の名前は、存在しないことを確認します ( デフォルトは "trident") 。</block>
  <block id="ba2a8d0773dc83972c406043a789e4dd" category="list-text">`--pvc string`: Astra Trident が使用する従来の PVC の名前は、存在しないことを確認します ( デフォルトは "trident") 。</block>
  <block id="6c99958eae5167b3baa561e4f7ee33f1" category="list-text">`--silence -autosupport` ： AutoSupport バンドルを自動的にネットアップに送信しないでください ( デフォルトは true) 。</block>
  <block id="77c96d54825d934e8abaadbc0049935d" category="list-text">`-- silent` : インストール中のほとんどの出力を無効にしなさい。</block>
  <block id="daeedc3203fdc6c1fb8dfe70e2381ed3" category="list-text">`--trident-image string`: インストールする Astra Trident イメージ。</block>
  <block id="9a7a8500c6fa970d6879b522c3e33437" category="list-text">`--use-custom-yaml `: setup ディレクトリに存在する既存の YAML ファイルを使用します。</block>
  <block id="bbf23448d408765a1240d287ed41ceff" category="list-text">`--use-ipv6` ： Astra Trident のコミュニケーションに IPv6 を使用します。</block>
  <block id="2165e4fa5bddb65a31f6a0c495c2fa37" category="section-title">ログ</block>
  <block id="501416d02a886c81e8849b2f400e28a3" category="paragraph">"logs" フラグを実行して、 Astra Trident からログを印刷することができます。</block>
  <block id="be8607b2dc354b7010b1464ac140fc1b" category="list-text">`-a, --archive: 特に指定がない限り ' すべてのログを含むサポート・アーカイブを作成します</block>
  <block id="d8d07479f4d5c7f0ef2b0f51407f070c" category="list-text">`-h, --help`: ログのヘルプ。</block>
  <block id="f925a9593a051a85d10acec74988d84f" category="list-text">`-l, --log string`: アストラトライデントログを表示します。trident | auto | trident-operator | all （デフォルトは「 auto 」）のいずれかです。</block>
  <block id="d8a224d86fa21c6c564987d0848bf681" category="list-text">`-- ノード文字列 : ノードポッドログの収集元となる Kubernetes ノード名</block>
  <block id="a335d03b82ae4916c848dd419432f477" category="list-text">`-p, --previous `: 以前のコンテナインスタンスのログが存在する場合は、そのログを取得します。</block>
  <block id="d7d7c214e32f71943c71783fa9d5fb55" category="list-text">`-- sidecars` : sidecar コンテナのログを取得します</block>
  <block id="2541d938b0a58946090d7abdde0d3890" category="section-title">送信</block>
  <block id="3121026e841bd19d147c54ac43e423c0" category="paragraph">'end' コマンドを実行して 'Astra Trident からリソースを送信できます</block>
  <block id="9ce1e94be8ccb1612967a7e2cbe69a6f" category="paragraph">利用可能なオプション： AutoSupport ： AutoSupport アーカイブをネットアップに送信します。</block>
  <block id="fe98497efedbe156ecc4b953aea77e07" category="section-title">をアンインストールします</block>
  <block id="e980a564a92aa568234d9757a591756b" category="paragraph">uninstall フラグを実行して 'Astra Trident をアンインストールできます</block>
  <block id="dcb0c76edbe301ede057149da76bf89b" category="paragraph">flags:*`-h, --help`: アンインストールのヘルプ。*`--silent`: アンインストール中のほとんどの出力を無効にします。</block>
  <block id="3ac340832f29c11538fbe2d6f75e8bcc" category="section-title">更新</block>
  <block id="328865de703bbe034177e6eb51dc3d28" category="paragraph">「 update 」コマンドを実行して、 Astra Trident のリソースを変更できます。</block>
  <block id="8680f448b33371bcb4778563a93f4702" category="paragraph">利用可能なオプション : backend`: Astra Trident のバックエンドを更新します。</block>
  <block id="ae26b3d8e556703291282149e3ae894f" category="section-title">アップグレード</block>
  <block id="87911de7a0bc3ff821f75ab303a0edc0" category="paragraph">'upgrade' コマンドを実行して 'Astra Trident のリソースをアップグレードできます</block>
  <block id="70cc5172db10ac60dd0b32e57285e85c" category="paragraph">使用可能なオプション : volume 'NFS/iSCSI から CSI に 1 つ以上の永続ボリュームをアップグレードします</block>
  <block id="2af72f100c356273d46284f6fd1dfc08" category="section-title">バージョン</block>
  <block id="9867997bba4e250bad7411d19fce3905" category="paragraph">「 rsion 」フラグを実行して、「 tridentctl 」のバージョンと Trident サービスを実行して印刷できます。</block>
  <block id="800f73959f4b721c78f4651c6b4b2052" category="paragraph">flags:*`--client`: クライアントバージョンのみ ( サーバは不要 )*`-h, --help`: バージョンのヘルプ。</block>
  <block id="04333ff788951193122a833ecd614950" category="summary">Kubernetes と Trident 、 Trident とストレージ、 Kubernetes とストレージの関係を決定するリソースオブジェクトがいくつかあります。これらのオブジェクトの中には Kubernetes で管理されるものと Trident で管理されるものがあります。</block>
  <block id="da1e63dd673a1932cebb48b6a81bbbb1" category="doc">Kubernetes オブジェクトと Trident オブジェクト</block>
  <block id="d107eefb0ce66911b186b03b9e9c337e" category="paragraph">リソースオブジェクトの読み取りと書き込みを行うことで、 REST API を使用して Kubernetes や Trident を操作できます。Kubernetes と Trident 、 Trident とストレージ、 Kubernetes とストレージの関係を決定するリソースオブジェクトがいくつかあります。これらのオブジェクトの中には Kubernetes で管理されるものと Trident で管理されるものがあります。</block>
  <block id="62499e0de79c4d07c7915a36f9faa0d8" category="section-title">オブジェクトは相互にどのように相互作用しますか。</block>
  <block id="b9ea565816618011ca591fc191fe5e63" category="paragraph">おそらく、オブジェクト、その目的、操作方法を理解する最も簡単な方法は、 Kubernetes ユーザからのストレージ要求を 1 回だけ処理することです。</block>
  <block id="ec7d6500a82a56ee8f5fff02eafa7af7" category="list-text">ユーザーは、「 PersistentVolumeClaim 」を作成して、特定のサイズの新しい「 PersistentVolume 」を、管理者が以前に設定した Kubernetes の「 torageClass 」から要求します。</block>
  <block id="6b25cc026b6f29464d3fce0f6ec67805" category="list-text">Kubernetes の「 torageClass 」は、 Trident をプロビジョニングツールとして識別し、要求されたクラスのボリュームのプロビジョニング方法を Trident に指示するパラメータを含んでいます。</block>
  <block id="5b078d6b19593ee6c55f428e2c85faa7" category="list-text">Trident は、対応する「 Backends 」と「 toragePools 」を識別する同じ名前の「 S torageClass 」を参照します。この名前は、このクラスのボリュームのプロビジョニングに使用できます。</block>
  <block id="ff099186f912c7abb21bcf68690c98d7" category="list-text">Trident は、対応するバックエンドにストレージをプロビジョニングし、 2 つのオブジェクトを作成します。 Kubernetes では、「 PersistentVolume 」とは、ボリュームを検索、マウント、処理する方法を Kubernetes に伝える「 PersistentVolume 」と、「 PersistentVolume 」と実際のストレージの関係を保持する Trident 内のボリュームです。</block>
  <block id="6d2ae40bc02e88464563ae42ae22d54c" category="list-text">Kubernetes は 'PersistentVolumeClaim を新しい 'PersistentVolume' にバインドしますPersistentVolume が実行される任意のホストに PersistentVolume をマウントする 'PersistentVolumeClaim を含むポッド。</block>
  <block id="490c1b0e3a604c81abb3db1b778ec07b" category="list-text">ユーザーは、 Trident を指す「 VolumeSnapshotClass 」を使用して、既存の PVC の「 VolumeSnapshot 」を作成します。</block>
  <block id="9f4e11d34d158ebd365226367c8b15d9" category="list-text">Trident が PVC に関連付けられているボリュームを特定し、バックエンドにボリュームの Snapshot を作成します。また ' スナップショットの識別方法を Kubernetes に指示する 'VolumeSnapshotContent' も作成します</block>
  <block id="c6a606bdd6882cd42de13f2ba3614285" category="list-text">ユーザーは 'VolumeSnapshot' をソースとして使用して 'PersistentVolumeClaim を作成できます</block>
  <block id="8ecb92f33c033b00fcf3c18e59c4b177" category="list-text">Trident は必要なスナップショットを識別し、「 PersistentVolume 」と「 Volume 」の作成に関連する一連のステップを実行します。</block>
  <block id="428895404a5e57e01a138a5df672d0fc" category="inline-link">永続ボリューム</block>
  <block id="173423532ed9a565a05f32db2c8f8172" category="admonition">Kubernetes オブジェクトの詳細については、を参照することを強く推奨します<block ref="92dc8ed82beb7484ab6097a3e91b0deb" category="inline-link-rx"></block> Kubernetes のドキュメントのセクション。</block>
  <block id="e21ffd3da11b6c6deee412bfb8695e30" category="section-title">Kubernetes PersistentVolumeClaim オブジェクト</block>
  <block id="794a32773794ee6c545794c065d1a88b" category="paragraph">Kubernetes の「 PersistentVolumeClaim 」オブジェクトは、 Kubernetes クラスタユーザが作成したストレージの要求です。</block>
  <block id="43cf8e1465c61efc8b1b9bf71aa9931c" category="paragraph">Trident では、標準仕様に加えて、バックエンド構成で設定したデフォルト設定を上書きする場合に、ボリューム固有の次のアノテーションを指定できます。</block>
  <block id="55f6611cb342565cf0f5002400f53a95" category="cell">アノテーション</block>
  <block id="1527fede1d561a899313c8cb3eb1e7bf" category="cell">ボリュームオプション</block>
  <block id="db8a0bbeae97b94338c1b7a61e2a1ec3" category="cell">サポートされているドライバ</block>
  <block id="f3780100617165ed98557e3a6d2be72d" category="cell">trident.netapp.io/fileSystem</block>
  <block id="44d4d4eb1f08d8eb29766160086f61dd" category="cell">ファイルシステム</block>
  <block id="59c54cb66816513690f886c6cbd45d7e" category="cell">ONTAP-SAN 、 solidfire-san-SAN 、 eseries-iscsi 、 ONTAP-SAN-エコノミー の 2 つのシステムがあります</block>
  <block id="979f70bf9da982ee97ac075df4f048c3" category="cell">trident.netapp.io/cloneFromPVC</block>
  <block id="b4ead50a5ca4f307f7d61da7763ad204" category="cell">cloneSourceVolume の実行中です</block>
  <block id="a056535de687a7e3ba370fa531941d0e" category="cell">ONTAPNAS 、 ONTAPSAN 、 solidfire-san-SAN 、 aws -cvs 、 azure-netapp-files 、 GCP-cvs 、 ONTAP-SAN エコノミー</block>
  <block id="46ec89aa5290ead7b514dd5182caa0a7" category="cell">trident.netapp.io/splitOnClone</block>
  <block id="58c1c86186ef8de4f6e12d8f3aed8b64" category="cell">splitOnClone</block>
  <block id="80f05e749a4f524e8c8a05fa19d5df0e" category="cell">ONTAP - NAS 、 ONTAP - SAN</block>
  <block id="d6f010e4b4bf9748dcaa34feb70188ce" category="cell">trident.netapp.io/protocol</block>
  <block id="81788ba0d7d02d81c063dbca621ba11b" category="cell">プロトコル</block>
  <block id="100b8cad7cf2a56f6df78f171f97a1ec" category="cell">任意</block>
  <block id="e9898504ff0569325d48acaee7e9ced9" category="cell">trident.netapp.io/exportPolicy</block>
  <block id="647ce4e5394e2e595e46b4fc50a628e9" category="cell">エクスポートポリシー</block>
  <block id="61396290e72fa7d707996351c8815bd6" category="cell">ONTAPNAS 、 ONTAPNAS エコノミー、 ONTAP-NAS-flexgroup</block>
  <block id="2902d12b1fe6d9ef5bd1a3474f2356e9" category="cell">trident.netapp.io/snapshotPolicy</block>
  <block id="0a236e7685e50a59df980d0a30929d6c" category="cell">Snapshot ポリシー</block>
  <block id="7f3bf2672240703dc69740ce11443cf2" category="cell">ONTAPNAS 、 ONTAPNAS エコノミー、 ONTAP-NAS-flexgroup 、 ONTAP-SAN</block>
  <block id="6224177007fc13e9e0d3789985ed165a" category="cell">trident.netapp.io/snapshotReserve</block>
  <block id="bb0d75280f9b683f2f1f0767fd0aff9b" category="cell">Snapshot リザーブ</block>
  <block id="3419db347ff8e06397e8a611be353848" category="cell">ONTAP-NAS 、 ONTAP-NAS-flexgroup 、 ONTAP-SAN 、 AWS- CVS 、 GCP-cvs</block>
  <block id="1cb43054bed661d8c8457ddbb43e1b1b" category="cell">trident.netapp.io/snapshotDirectory</block>
  <block id="1ae33c448502ac3d326593aee304c21f" category="cell">snapshotDirectory の略</block>
  <block id="ec1739ebad429a70f25efc292c347f8e" category="cell">trident.netapp.io/unixPermissions</block>
  <block id="c005e78d4bd808038335c32dd84cf7da" category="cell">unixPermissions</block>
  <block id="69d900d222446aab8591b45a7363c9e7" category="cell">trident.netapp.io/blockSize</block>
  <block id="480d1b61a0432d1319f7504a3d7318dd" category="cell">ブロックサイズ</block>
  <block id="c0d2a793e71b152662b3e8cd2da00620" category="cell">solidfire - SAN</block>
  <block id="fc5f8320f80474f09bdd1e3c3849123e" category="paragraph">作成された PV に「削除」再利用ポリシーがある場合、 Trident は PV が解放されると（つまり、ユーザーが PVC を削除したときに）、 PV と元のボリュームの両方を削除します。削除操作が失敗した場合、 Trident は PV をマークします。そのような状態で操作が成功するか、 PV が手動で削除されるまで、定期的に再試行します。PV が「 + Retain + 」ポリシーを使用している場合、 Trident はそのポリシーを無視し、管理者が Kubernetes とバックエンドからクリーンアップすると想定します。これにより、ボリュームを削除する前にバックアップまたは検査を行うことができます。PV を削除しても、原因 Trident で元のボリュームが削除されないことに注意してください。REST API (tridentctl') を使用して削除してください。</block>
  <block id="5dad99bb31feaed11fecbe29cf682e51" category="paragraph">Trident では CSI 仕様を使用したボリュームスナップショットの作成がサポートされています。ボリュームスナップショットを作成し、それをデータソースとして使用して既存の PVC のクローンを作成できます。これにより、 PVS のポイントインタイムコピーを Kubernetes にスナップショットの形で公開できます。作成した Snapshot を使用して新しい PVS を作成できます。「 +On-Demand Volume Snapshots + 」を見て、これがどのように機能するかを確認してください。</block>
  <block id="2553df6c9f03b727070656d38019ad3e" category="paragraph">Trident には ' クローン作成用の cloneFromPVC' および 'plitOnClone' 注釈も用意されていますCSI 実装（ Kubernetes 1.13 以前）を使用しなくても、または Kubernetes リリースがベータ版のボリュームスナップショット（ Kubernetes 1.16 以前）をサポートしていない場合は、これらのアノテーションを使用して PVC のクローンを作成できます。Trident 19.10 は、 PVC からのクローニングの CSI ワークフローをサポートしていることに注意してください。</block>
  <block id="91adc865e5be78d779fd6aa38481ca58" category="admonition">CSI Trident では 'cloneFromPVC' および 'plitOnClone' 注釈を使用できますまた ' 従来の CSI 以外のフロントエンドも使用できます</block>
  <block id="96e0288ecc3c91f97de46420e70a4f8f" category="paragraph">例 : ユーザがすでに「 m ysql 」という PVC を持っている場合、ユーザは「 trident.netapp.io/cloneFromPVC: mysql 」などの注釈を使用して「 m ysqlclone 」という新しい PVC を作成できます。このアノテーションセットを使用すると、 Trident はボリュームをゼロからプロビジョニングするのではなく、 MySQL PVC に対応するボリュームのクローンを作成します。</block>
  <block id="ff0fa770e22db25a156c5e2d7f017283" category="paragraph">次の点を考慮してください。</block>
  <block id="5faae6e509c8aecf9f8815a4ceef02b3" category="list-text">アイドルボリュームのクローンを作成することを推奨します。</block>
  <block id="f89d76e06e88814705882a1faad838fb" category="list-text">PVC とそのクローンは、同じ Kubernetes ネームスペースに存在し、同じストレージクラスを持つ必要があります。</block>
  <block id="f769a6b54b1d1476b6628ebd1c4b98c4" category="list-text">また 'ONTAP-NAS' および 'ONTAP-SAN' ドライバを使用すると 'pvc 注釈 trident.netapp.io/splitOnClone` を trident.netapp.io/cloneFromPVC` と組み合わせて設定することが望ましい場合がありますTrident は 'trident.netapp.io/splitOnClone` を true に設定した場合 ' クローン・ボリュームを親ボリュームからスプリットするため ' 一部のストレージ効率を失うことなく ' クローン・ボリュームのライフサイクルを親ボリュームから完全に分離しますtrident.netapp.io/splitOnClone` を設定したり 'false に設定したりしないと ' 親ボリュームとクローンボリューム間の依存関係を作成する代わりに ' バックエンドでのスペース消費が削減されますこれにより ' クローンを最初に削除しない限り ' 親ボリュームを削除できなくなりますクローンをスプリットするシナリオでは、空のデータベースボリュームをクローニングする方法が効果的です。このシナリオでは、ボリュームとそのクローンで使用するデータベースボリュームのサイズが大きく異なっており、 ONTAP ではストレージ効率化のメリットはありません。</block>
  <block id="83a9930ebb180c904bf2e71e27928287" category="paragraph">「 sample-input' 」ディレクトリには、 Trident で使用する PVC 定義の例が含まれています。Trident ボリュームに関連するパラメータと設定の完全な概要については、 Trident ボリュームオブジェクトを参照してください。</block>
  <block id="a02475a5207a446cd0b3607b0b24c079" category="section-title">Kubernetes PersistentVolume オブジェクト</block>
  <block id="6cb5412cc2fe8210c4d14d6d6b08ab79" category="paragraph">Kubernetes の 'PersistentVolume' オブジェクトは 'Kubernetes クラスタで利用できるようになったストレージの一部ですポッドに依存しないライフサイクルがあります。</block>
  <block id="292289b7334983e53d9fb9bd00d30820" category="admonition">Trident は 'PersistentVolume' オブジェクトを作成し ' プロビジョニングするボリュームに基づいて自動的に Kubernetes クラスタに登録します自分で管理することは想定されていません。</block>
  <block id="443f09ca4d0d1cc13b5baa064b90c0b7" category="paragraph">Trident をベースとする「 torageClass 」を参照する PVC を作成すると、 Trident は対応するストレージクラスを使用して新しいボリュームをプロビジョニングし、そのボリュームに新しい PV を登録します。プロビジョニングされたボリュームと対応する PV の構成では、 Trident は次のルールに従います。</block>
  <block id="b27c91fe87605abbb0d5240430518a1c" category="list-text">Trident は、 Kubernetes に PV 名を生成し、ストレージのプロビジョニングに使用する内部名を生成します。どちらの場合も、名前がスコープ内で一意であることが保証されます。</block>
  <block id="9c2f88a5c4297bd88ead0cd6314fe886" category="list-text">ボリュームのサイズは、 PVC で要求されたサイズにできるだけ近いサイズに一致しますが、プラットフォームによっては、最も近い割り当て可能な数量に切り上げられる場合があります。</block>
  <block id="dcbd1c3ef9cd1dce444a22a9db5994d6" category="section-title">Kubernetes StorageClass オブジェクト</block>
  <block id="0d35625a483152791f4e2d0b751a09cc" category="paragraph">Kubernetes の「 torageClass 」オブジェクトは、「 PersistentVolumeClaims 」内の名前によって指定され、一連のプロパティを持つストレージをプロビジョニングします。ストレージクラス自体が、使用するプロビジョニングツールを特定し、プロビジョニングツールが理解できる一連のプロパティを定義します。</block>
  <block id="f7738d717849274e5992d460fd2c0a75" category="paragraph">管理者が作成および管理する必要がある 2 つの基本オブジェクトのうちの 1 つです。もう 1 つは Trident バックエンドオブジェクトです。</block>
  <block id="e51377a773f4713e536b061eaa2d4b04" category="paragraph">Trident を使用する Kubernetes の「 torageClass 」オブジェクトは次のようになります。</block>
  <block id="39edc8618b50008d4cb2050414d6921f" category="paragraph">これらのパラメータは Trident 固有で、クラスのボリュームのプロビジョニング方法を Trident に指示します。</block>
  <block id="b16da8ed7f6c8cce3011dc2b6c7bd1a4" category="paragraph">ストレージクラスのパラメータは次のとおりです。</block>
  <block id="f2bbdf9f72c085adc4d0404e370f0f4c" category="cell">属性</block>
  <block id="a1fa27779242b4902f7ae3bdd5c6d508" category="cell">を入力します</block>
  <block id="b651efdb98a5d6bd2b3935d0c3f4a5e2" category="cell">必須</block>
  <block id="b5a7adde1af5c87d7fd797b6245c2a39" category="cell">説明</block>
  <block id="736b91750e516139acc13c5eb6564f92" category="cell">属性（ Attributes ）</block>
  <block id="59a1e7292a0114529fb1b3401b37bc28" category="cell">[string] 文字列をマップします</block>
  <block id="7fa3b767c460b54a2be4d49030b349c7" category="cell">いいえ</block>
  <block id="1b40216e6fe613bd013bf8710182e650" category="cell">後述の「属性」セクションを参照してください</block>
  <block id="c614017642b6cfd9e6a25c7df122d917" category="cell">ストレージプール</block>
  <block id="b8f32852327d2ffce86ae3ead4fdfb52" category="cell">[string] StringList をマップします</block>
  <block id="bdd0ddb870ed9de6f6e7d3a75200e9f7" category="cell">内のストレージプールのリストへのバックエンド名のマッピング</block>
  <block id="145d1b89a9f9ed8bdc16d1f7a814cace" category="cell">AdditionalStoragePools</block>
  <block id="6907a73ad9068ddf5f99d022102220bb" category="cell">内のストレージプールのリストへのバックエンド名のマッピング</block>
  <block id="7df974d787ead594df017a11672f2f0e" category="cell">excludeStoragePools</block>
  <block id="99ba77776c83983f5ecbd2b51f2b43ef" category="cell">内のストレージプールのリストへのバックエンド名のマッピング</block>
  <block id="f74d4b2b456fb453c0980710290f66eb" category="paragraph">ストレージ属性とその有効な値は、ストレージプールの選択属性と Kubernetes 属性に分類できます。</block>
  <block id="2fdf10f3f64b631cd3a137740de02f8b" category="section-title">ストレージプールの選択の属性</block>
  <block id="1f5912cd581dba393d5eecc43059adf4" category="paragraph">これらのパラメータは、特定のタイプのボリュームのプロビジョニングに使用する Trident で管理されているストレージプールを決定します。</block>
  <block id="c82a6100dace2b41087ba6cf99a5976a" category="cell">値</block>
  <block id="6bb24468956384c482a8b5a901fb6383" category="cell">提供</block>
  <block id="15c2d85f1fae22a3c3a0594510a1f611" category="cell">リクエスト</block>
  <block id="7aa57840938d59b415c1e10dcd1f7173" category="cell">でサポートされます</block>
  <block id="0e72be2e13bf8a2ff8078d3435e5aa7c" category="cell">メディア ^1</block>
  <block id="b45cffe084dd3d20d928bee85e7b0f21" category="cell">文字列</block>
  <block id="9ccd7f94313a98beb95801927907a0ab" category="cell">HDD 、ハイブリッド、 SSD</block>
  <block id="9bf3032f6854fb376cd8e3e92e11b077" category="cell">プールにはこのタイプのメディアが含まれています。ハイブリッドは両方を意味します</block>
  <block id="5c79c761bae4c27e96c04e54d1da1e91" category="cell">メディアタイプが指定されました</block>
  <block id="c9cb5e737e2746339fd0b462332c8740" category="cell">ONTAPNAS 、 ONTAPNAS エコノミー、 ONTAP-NAS-flexgroup 、 ONTAPSAN 、 solidfire-san-SAN 、 solidfire-san-SAN のいずれかに対応しています</block>
  <block id="b713baf75bcf13859037b5274d27d4b8" category="cell">プロビジョニングタイプ</block>
  <block id="6026fbd9abd05590949de220154e3262" category="cell">シン、シック</block>
  <block id="3064025fe3541bec9942e14fcaedfab7" category="cell">プールはこのプロビジョニング方法をサポートします</block>
  <block id="cf65591e3da90317fc132ea7464105d8" category="cell">プロビジョニング方法が指定されました</block>
  <block id="ef2577df8468ab39e993a1938ba7f38d" category="cell">シック： All ONTAP &amp; eseries-iscsi ； thin ： all ONTAP &amp; solidfire-san-SAN</block>
  <block id="55b56fb238360663afa6230ad82e74a0" category="cell">backendType</block>
  <block id="d41d8cd98f00b204e9800998ecf8427e" category="doc"></block>
  <block id="9d7b1f44c2f9de09e74ed8f6104c3f16" category="paragraph">ONTAPNAS 、 ONTAPNAS エコノミー、 ONTAP-NAS-flexgroup 、 ONTAPSAN 、 solidfire-san-SAN 、 solidfire-san-SAN 、 E シリーズ - iSCSI 、 AWS- CVS 、 GCP-cvs 、 azure-NetApp-files 、 ONTAP-SAN-Eエコノミー</block>
  <block id="0e1201d4d96df2d9d03c9c66b90874a1" category="cell">プールはこのタイプのバックエンドに属しています</block>
  <block id="c4efe19137f43450149d48fddbab6c28" category="cell">バックエンドが指定されて</block>
  <block id="a04622349b3ede0d4176ca2c2e161763" category="cell">すべてのドライバ</block>
  <block id="695633290d050f31cec0c9d4bd4a57fe" category="cell">Snapshot</block>
  <block id="c506ff134babdd6e68ab3e6350e95305" category="cell">ブール値</block>
  <block id="ac1ffb15effdc77a86029972670d022f" category="cell">true false</block>
  <block id="4ac43bef181074fbd4a1f3620b46f77f" category="cell">プールは、 Snapshot を含むボリュームをサポートします</block>
  <block id="13410bff9f7871113a6af273e2a1b97f" category="cell">Snapshot が有効なボリューム</block>
  <block id="b43a2204ed324763abdbca5be0c35b02" category="cell">ontap - NAS 、 ontap - san 、 solidfire-san-san 、 vss-cvs 、 gcp-cvs</block>
  <block id="bc3832c405ec6cb9c831849328240f3b" category="cell">クローン</block>
  <block id="609d32aa243917905f282544b543752a" category="cell">プールはボリュームのクローニングをサポートします</block>
  <block id="bcb81802de31cf9c717de3c1d6c2f610" category="cell">クローンが有効なボリューム</block>
  <block id="5bdf74912a51c34815f11e9a3d20b609" category="cell">暗号化</block>
  <block id="5f2f2cc138a8bc7067c7f61ab4db0f4d" category="cell">プールでは暗号化されたボリュームをサポート</block>
  <block id="0bda31a93b84fd2b45a90df39c4c8049" category="cell">暗号化が有効なボリューム</block>
  <block id="dcc09b4a72e31323b652676ce4677771" category="cell">ONTAP-NAS 、 ONTAP-NAS-エコノミー 、 ONTAP-NAS-FlexArray グループ、 ONTAP-SAN</block>
  <block id="79073619fba8242703524f16870ff858" category="cell">IOPS</block>
  <block id="fa7153f7ed1cb6c0fcf2ffb2fac21748" category="cell">整数</block>
  <block id="86e5d65893929e5d38b4bdcb9fb48ecd" category="cell">正の整数</block>
  <block id="bf57d1db8292b2855fa998a86562cfa7" category="cell">プールは、この範囲内で IOPS を保証する機能を備えています</block>
  <block id="342a7ce5bb7debc6ba84dc2a3bced587" category="cell">ボリュームで IOPS が保証されました</block>
  <block id="895f3d78c77292d9761bdabdc3cf0c99" category="paragraph">^1 ^ ： ONTAP Select システムではサポートされていません</block>
  <block id="5b3c68bde0b3658758a8ebf47ec6abf1" category="paragraph">ほとんどの場合、要求された値はプロビジョニングに直接影響します。たとえば、シックプロビジョニングを要求した場合、シックプロビジョニングボリュームが使用されます。ただし、 Element ストレージプールでは、提供されている IOPS の最小値と最大値を使用して、要求された値ではなく QoS 値を設定します。この場合、要求された値はストレージプールの選択のみに使用されます。</block>
  <block id="311fa7e17587a62a6fdcb110253feed7" category="paragraph">理想的には ' 属性だけを使用して ' 特定のクラスのニーズを満たすために必要なストレージの特性をモデル化できますTrident は ' 指定した属性の _ALL_ に一致するストレージ・プールを自動的に検出して選択します</block>
  <block id="d0c865b74e0c4b4b387506e9e95d22b2" category="paragraph">「 attributes 」を使用してクラスに適切なプールを自動的に選択できない場合は、「 toragePools 」および「 additionalStoragePools 」パラメータを使用してプールをさらに改良したり、特定のプールセットを選択したりできます。</block>
  <block id="06a87a25fa98442cf561762851213f7e" category="paragraph">'toragePools' パラメータを使用すると ' 指定した属性に一致するプールのセットをさらに制限できますつまり 'attributes' パラメータと 'toragePools' パラメータで指定されたプールの交点をプロビジョニングに使用しますどちらか一方のパラメータを単独で使用することも、両方を同時に使用することも</block>
  <block id="0c66a737e57eb6ac0885d2ba6d87cc12" category="paragraph">「 additionalStoragePools 」パラメータを使用すると、「 attributes 」パラメータと「 toragePools 」パラメータで選択されたプールに関係なく、 Trident がプロビジョニングに使用するプールのセットを拡張できます。</block>
  <block id="2ed95c63c6e58641d710e098e7e23154" category="paragraph">excludeStoragePools' パラメータを使用して、 Trident がプロビジョニングに使用するプールのセットをフィルタリングできます。このパラメータを使用すると、一致するプールがすべて削除されます。</block>
  <block id="9f8bfd75f7eb5b95503bb0abedf83b40" category="paragraph">'toragePools' パラメータと 'additionalStoragePools' パラメータでは ' 各エントリは '&lt;backend&gt;:&lt;storagePoolList&gt;' の形式で指定したバックエンドのストレージプールのカンマ区切りリストですたとえば、「 additionalStoragePools 」の値は「 ontapnas_192.168.1.100 ： aggr1 、 aggr2 ； solidfire_192.168.1.101 ： bronze 」のようになります。これらのリストでは、バックエンド値とリスト値の両方に正規表現値を使用できます。tridentctl get backend を使用してバックエンドとそのプールのリストを取得できます</block>
  <block id="c087dddd46fcf0fbbf390abeff2216c3" category="section-title">Kubernetes の属性</block>
  <block id="d05956159ee82aafaaacfe08d33d3be6" category="paragraph">これらの属性は、動的プロビジョニングの際に Trident が選択するストレージプール / バックエンドには影響しません。代わりに、 Kubernetes Persistent Volume でサポートされるパラメータを提供するだけです。ワーカーノードはファイルシステムの作成操作を担当し、 xfsprogs などのファイルシステムユーティリティを必要とする場合があります。</block>
  <block id="0e6ac0d7fca9c59e6545312a071555b6" category="cell">関連するドライバ</block>
  <block id="ae6b2a160dd2fafdee385c348edee0c1" category="cell">Kubernetes のバージョン</block>
  <block id="7cfbb6f07899c8071ff38e69dca190e2" category="cell">FSstype （英語）</block>
  <block id="64b6d80cc167d5c657b60054dbe396ee" category="cell">ext4 、 ext3 、 xfs など</block>
  <block id="7928a56d4874d982a06a59e3f30f6935" category="cell">ブロックボリュームのファイルシステムのタイプ</block>
  <block id="b1c94ca2fbc3e78fc30069c8d0f01680" category="cell">すべて</block>
  <block id="2435c5eb0d842c13f635d4b1d6667a52" category="paragraph">Trident インストーラバンドルには、「 `sample -input/storageclass-*.yaml 」で Trident で使用するストレージクラス定義の例がいくつか用意されています。Kubernetes ストレージクラスを削除すると、対応する Trident ストレージクラスも削除されます。</block>
  <block id="6b218cef3794c1b32702bd37753ce9ef" category="section-title">Kubernetes VolumeSnapshotClass オブジェクト</block>
  <block id="65d18b5db5d5f35e4ddc5c696687d1bd" category="paragraph">Kubernetes 'VolumeSnapshotClass' オブジェクトは 'S torageClasses' に似ていますこの Snapshot コピーは、複数のストレージクラスの定義に役立ちます。また、ボリューム Snapshot によって参照され、 Snapshot を必要な Snapshot クラスに関連付けます。各ボリューム Snapshot は、単一のボリューム Snapshot クラスに関連付けられます。</block>
  <block id="031e09713b698739db52cb150ef97605" category="paragraph">スナップショットを作成するには 'VolumeSnapshotClass' を管理者が定義する必要がありますボリューム Snapshot クラスは、次の定義で作成されます。</block>
  <block id="879cd061c6bf448cd6fc39dd56947611" category="paragraph">「 driver 」は、「 csi-snapclass 」クラスのボリュームスナップショットの要求が Trident によって処理される Kubernetes を指定します。「要素ポリシー」は、スナップショットを削除する必要がある場合に実行されるアクションを指定します。「削除ポリシー」が「削除」に設定されている場合、 Snapshot を削除すると、ボリューム Snapshot オブジェクトおよびストレージクラスタ上の基盤となる Snapshot は削除されます。または、「 Retain 」に設定すると、「 VolumeSnapshotContent 」と物理スナップショットが保持されます。</block>
  <block id="4fa3f62cc9d9b7064a0d4b93d16a3636" category="section-title">Kubernetes VolumeSnapshot オブジェクト</block>
  <block id="7ba558df52a052235cf288011e5d667c" category="paragraph">Kubernetes の VolumeSnapshot オブジェクトは ' ボリュームのスナップショットを作成する要求ですPVC がボリュームに対するユーザからの要求を表すのと同様に、ボリュームスナップショットは、ユーザが既存の PVC のスナップショットを作成する要求です。</block>
  <block id="f67af493d1fd83b472d5f27307b2f3d9" category="paragraph">ボリュームスナップショット要求が受信されると、 Trident はバックエンドでのボリュームのスナップショット作成を自動的に管理し、ユニークな「 VolumeSnapshotContent 」オブジェクトを作成することによってスナップショットを公開します。既存の PVC からスナップショットを作成し、新しい PVC を作成するときにスナップショットを DataSource として使用できます。</block>
  <block id="53847015682974d066a919b1b45a44a5" category="admonition">VolumeSnapshot のライフサイクルはソース PVC とは無関係です。ソース PVC が削除されても、スナップショットは維持されます。スナップショットが関連付けられている PVC を削除すると、 Trident はその PVC のバッキングボリュームを *Deleting* 状態でマークしますが、完全には削除しません。関連付けられている Snapshot がすべて削除されると、ボリュームは削除されます。</block>
  <block id="c1c597a8c6353c0a951a61e538d2f143" category="section-title">Kubernetes VolumeSnapshotContent オブジェクト</block>
  <block id="e562bdcf97dce6973a736651f45eb054" category="paragraph">Kubernetes の「 VolumeSnapshotContent 」オブジェクトは、すでにプロビジョニングされているボリュームから取得されたスナップショットを表します。これは「 PersistentVolume 」と似ており、ストレージ・クラスタ上でプロビジョニングされた Snapshot を表します。「 PersistentVolumeClaim 」および「 PersistentVolume 」オブジェクトと同様に、スナップショットが作成されると、「 VolumeContent Snapshot」 オブジェクトは「 VolumeSnapshot 」オブジェクトへの 1 対 1 のマッピングを保持します。これは、スナップショットの作成を要求しました。</block>
  <block id="ca8035550d447392debfcaeb62855bd3" category="admonition">Trident は「 VolumeSnapshotContent 」オブジェクトを作成し、プロビジョニングするボリュームに基づいて自動的に Kubernetes クラスタに登録します。自分で管理することは想定されていません。</block>
  <block id="af741aec1c66e51c00d35a38f92471de" category="paragraph">「 VolumeSnapshotContent 」オブジェクトには、スナップショットを一意に識別する詳細（「 napshotHandle 」など）が含まれています。この「 napshotHandle 」は、 PV の名前と「 VolumeSnapshotContent 」オブジェクトの名前を組み合わせた一意のものです。</block>
  <block id="b22c73e808eef321ee9941ec2e58b64f" category="paragraph">Trident では、スナップショット要求を受信すると、バックエンドにスナップショットが作成されます。スナップショットが作成されると、 Trident は「 VolumeSnapshotContent 」オブジェクトを構成し、そのスナップショットを Kubernetes API に公開します。</block>
  <block id="ca106d43cc3f2b8c6ae43c99a3c529d7" category="section-title">Kubernetes CustomResourceDefinition オブジェクト</block>
  <block id="7c43d52062b795d2d8e7f33b9dbbf671" category="paragraph">Kubernetes カスタムリソースは、管理者が定義した Kubernetes API 内のエンドポイントであり、類似するオブジェクトのグループ化に使用されます。Kubernetes では、オブジェクトのコレクションを格納するためのカスタムリソースの作成をサポートしています。これらのリソース定義を取得するには 'kubectl get CRDs' を実行します</block>
  <block id="09d4c17e4e0e002375326eee41d0f77f" category="paragraph">カスタムリソース定義（ CRD ）と関連するオブジェクトメタデータは、 Kubernetes によってメタデータストアに格納されます。これにより、 Trident の独立したストアが不要になります。</block>
  <block id="798d49964270b9d2f638171af7258d00" category="paragraph">19.07 リリース以降、 Trident は多数の「 CustomResourceDefinition 」オブジェクトを使用して、 Trident バックエンド、 Trident ストレージクラス、 Trident ボリュームなどの Trident オブジェクトの ID を保持します。これらのオブジェクトは Trident によって管理されます。また、 CSI のボリュームスナップショットフレームワークには、ボリュームスナップショットの定義に必要ないくつかの SSD が導入されています。</block>
  <block id="9f59afd5e4687b9960361128f049dae4" category="paragraph">CRD は Kubernetes の構成要素です。上記で定義したリソースのオブジェクトは Trident によって作成されます。簡単な例として 'tridentctl' を使用してバックエンドを作成すると ' 対応する tridentBackendsCRD オブジェクトが Kubernetes によって消費されるように作成されます</block>
  <block id="7cdfd680fe492e028cde251c38475469" category="paragraph">Trident の CRD については、次の点に注意してください。</block>
  <block id="adecfe476427253e9c680a7c5150a9cc" category="list-text">Trident をインストールすると、一連の CRD が作成され、他のリソースタイプと同様に使用できるようになります。</block>
  <block id="b54c0b51e5e24cea2035a3e3624c5719" category="list-text">Trident の以前のバージョンからアップグレードする場合（ステートを維持するために「 etcd」 を使用したもの）、 Trident インストーラは「 etcd' キーバリューデータストア」からデータを移行し、対応する CRD オブジェクトを作成します。</block>
  <block id="c4b35352cbf7a52a9444a610687067f8" category="inline-link-macro">Trident をアンインストールします</block>
  <block id="14beb70da78e5a36efe980226d286a53" category="list-text">tridentctl uninstall コマンドを使用して Trident をアンインストールすると、 Trident ポッドは削除されますが、作成された CRD はクリーンアップされません。を参照してください <block ref="91f30c1df5df3b507b6d93916b3fade3" category="inline-link-macro-rx"></block> Trident を完全に削除して再構成する方法を理解する。</block>
  <block id="514e780152cf1b5087027f7c70643070" category="section-title">Trident StorageClass オブジェクト</block>
  <block id="193c267230acf55be171a6a179560847" category="paragraph">Trident は 'Kubernetes のプロビジョニング・フィールドに csi.trident.netapp.io`/`netapp.io/trident` を指定する 'S torageClass' オブジェクトに一致するストレージ・クラスを作成しますストレージクラス名は、そのストレージクラスが表す Kubernetes の「 torageClass 」オブジェクトの名前と一致します。</block>
  <block id="64cf33bfeab6c6bd8aa626b86fda9cbd" category="admonition">Kubernetes では、 Trident をプロビジョニングツールとして使用する Kubernetes 「 torageClass 」が登録されると、これらのオブジェクトが自動的に作成されます。</block>
  <block id="51fa0a833f47d8f00ee2677c6fa7b075" category="paragraph">ストレージクラスは、ボリュームの一連の要件で構成されます。Trident は、これらの要件と各ストレージプール内の属性を照合し、一致する場合は、そのストレージプールが、そのストレージクラスを使用するボリュームのプロビジョニングの有効なターゲットになります。</block>
  <block id="04d84bba5a5e103ae9c192c03a7ad2f3" category="paragraph">REST API を使用して、ストレージクラスを直接定義するストレージクラス設定を作成できます。ただし、 Kubernetes の導入では、新しい Kubernetes の「 torageClass 」オブジェクトを登録するときに、これらのオブジェクトが作成されることを期待しています。</block>
  <block id="21283df20640a21f468122a427ef1bfc" category="section-title">Trident バックエンドオブジェクト</block>
  <block id="3c244b984a2188556c1115a5a27dbe1b" category="paragraph">バックエンドとは、 Trident がボリュームをプロビジョニングする際にストレージプロバイダを表します。 1 つの Trident インスタンスであらゆる数のバックエンドを管理できます。</block>
  <block id="d71c5fad4769c19422c07158e24510ba" category="admonition">これは、自分で作成および管理する 2 つのオブジェクトタイプのうちの 1 つです。もう 1 つは、 Kubernetes の「 torageClass 」オブジェクトです。</block>
  <block id="6e8c08b737e50e4dc89c4bd33b8ea726" category="paragraph">これらのオブジェクトの作成方法の詳細については、バックエンド構成を参照してください。</block>
  <block id="af5e532a14b6a8c1f094b8532420e8d1" category="section-title">Trident StoragePool オブジェクト</block>
  <block id="54fd1dc39c3eecd913b4c9140522996c" category="paragraph">ストレージプールは、各バックエンドでのプロビジョニングに使用できる個別の場所を表します。ONTAP の場合、これらは SVM 内のアグリゲートに対応します。NetApp HCI / SolidFire では、管理者が指定した QoS 帯域に対応します。Cloud Volumes Service の場合、これらはクラウドプロバイダのリージョンに対応します。各ストレージプールには、パフォーマンス特性とデータ保護特性を定義するストレージ属性があります。</block>
  <block id="4ab1440e71a70a97c4966bcc0095f02b" category="paragraph">他のオブジェクトとは異なり、ストレージプールの候補は常に自動的に検出されて管理されます。</block>
  <block id="d2a63f6dfdfef268198f3e6e304ab9ba" category="section-title">Trident Volume オブジェクト</block>
  <block id="894765102686902c6acc3024e5bdb9bd" category="paragraph">ボリュームは、 NFS 共有や iSCSI LUN などのバックエンドエンドエンドエンドポイントで構成される、プロビジョニングの基本単位です。Kubernetes では ' これらは 'PersistentVolumes' に直接対応しますボリュームを作成するときは、そのボリュームにストレージクラスが含まれていることを確認します。このクラスによって、ボリュームをプロビジョニングできる場所とサイズが決まります。</block>
  <block id="2e53db54827c8c05b7bfe9cb31f299d9" category="admonition">Kubernetes では、これらのオブジェクトが自動的に管理されます。Trident がプロビジョニングしたものを表示できます。</block>
  <block id="22fcc98910d0241e9835f502b7cb2398" category="admonition">関連付けられた Snapshot がある PV を削除すると、対応する Trident ボリュームが * Deleting * 状態に更新されます。Trident ボリュームを削除するには、ボリュームの Snapshot を削除する必要があります。</block>
  <block id="05353bc86910df31b2da9c8d3d26aad1" category="paragraph">ボリューム構成は、プロビジョニングされたボリュームに必要なプロパティを定義します。</block>
  <block id="ce9af1e3f0493eb7d5ffdf584ed763ba" category="cell">Trident API のバージョン（「 1 」）</block>
  <block id="b068931cc450442b63f5b3d276ea4297" category="cell">名前</block>
  <block id="a6105c0a611b41b08f1209506350279e" category="cell">はい。</block>
  <block id="017dbd2b0a2195c3e8052cdff67bad39" category="cell">作成するボリュームの名前</block>
  <block id="78ec9b60245b46a4f05158076962ace9" category="cell">ストレージクラス</block>
  <block id="fa00f346deccdbebef2b3cc0702d41de" category="cell">ボリュームのプロビジョニング時に使用するストレージクラス</block>
  <block id="f7bd60b75b29d79b660a2859395c1a24" category="cell">サイズ</block>
  <block id="264c52ca068dfed30f5826bb054839f4" category="cell">プロビジョニングするボリュームのサイズ（バイト単位）</block>
  <block id="4f18882934f0472b4bfa32928bf92f14" category="cell">使用するプロトコルの種類：「 file 」または「 block 」</block>
  <block id="252c6d364cc1a0437939a4f01b0717ae" category="cell">インターン名</block>
  <block id="2857a43e58983276d059c0e6e2fcb0e9" category="cell">Trident が生成した、ストレージシステム上のオブジェクトの名前</block>
  <block id="ff4630d4b2307b42398211e68c0c3996" category="cell">ONTAP （ NAS 、 SAN ） &amp; SolidFire - * &amp; AWS- cvs * ：クローン元のボリュームの名前</block>
  <block id="e94d46d7c89bcb7e6ac2e2df4d21bafb" category="cell">ONTAP （ NAS 、 SAN ）：クローンを親からスプリットします</block>
  <block id="819549a86d14e849e1d0042c9156d781" category="cell">ONTAP - * ：使用する Snapshot ポリシー</block>
  <block id="e38882545bfedafc7e8ec5973b2e6dd8" category="cell">ONTAP - * ： Snapshot 用にリザーブされているボリュームの割合</block>
  <block id="fc86db1233bfa77d5143dcaae9842cb1" category="cell">ONTAP-NAS* ：使用するエクスポートポリシー</block>
  <block id="48e1d8180a61943f438c259b2b6715f8" category="cell">ONTAP-NAS* ： Snapshot ディレクトリが表示されているかどうか</block>
  <block id="3f7c94eec4bbf43962e1667f5a334469" category="cell">ONTAP-NAS* ：最初の UNIX 権限</block>
  <block id="4b2d5d83aef608a3fb59ec6eda8bea26" category="cell">SolidFire - * ：ブロック / セクターサイズ</block>
  <block id="62fe71ae4f6a04a6937feb48ba5dc4f4" category="cell">ファイルシステムのタイプ</block>
  <block id="44be9d1a43b6ec865a2264e42c53de2d" category="paragraph">Trident は ' ボリュームの作成時に internalName を生成しますこの構成は 2 つのステップで構成されます。最初に、ストレージプレフィックス（デフォルトの「 trident 」またはバックエンド構成のプレフィックス）をボリューム名の前に付加し、「 &lt;prefix&gt; - &lt;volume-name&gt; 」という形式の名前を付けます。その後、名前の完全消去が行われ、バックエンドで許可されていない文字が置き換えられます。ONTAP バックエンドでは、ハイフンをアンダースコアで置き換えます（つまり、内部名は「 &lt;prefix&gt;_&lt;volume-name&gt;` 」になります）。Element バックエンドの場合、アンダースコアはハイフンに置き換えられます。E シリーズでは、すべてのオブジェクト名に 30 文字の制限が適用されているため、 Trident は各ボリュームの内部名に対してランダムな文字列を生成します。CVS （ AWS ）では、一意のボリューム作成トークンに 16 ~ 36 文字の制限があり、 Trident は各ボリュームの内部名に対してランダムな文字列を生成します。</block>
  <block id="49539689cebb34166a417b3b666818e5" category="paragraph">ボリューム設定を使用して、 REST API を使用してボリュームを直接プロビジョニングできますが、 Kubernetes 環境では、ほとんどのユーザが標準の Kubernetes の「 PersistentVolumeClaim 」メソッドを使用することを想定しています。Trident は、プロビジョニングプロセスの一環として、このボリュームオブジェクトを自動的に作成します。</block>
  <block id="cbd341b63adaa47fcb248e55d33f6eae" category="section-title">Trident Snapshot オブジェクト</block>
  <block id="a1b3787bbd275b7ed5812d022dd36932" category="paragraph">Snapshot はボリュームのポイントインタイムコピーで、新しいボリュームのプロビジョニングやリストア状態に使用できます。Kubernetes では ' これらは 'VolumeSnapshotContent' オブジェクトに直接対応します各 Snapshot には、 Snapshot のデータのソースであるボリュームが関連付けられます。</block>
  <block id="cdf5c8d3dd31e49b82a5b3e2c4a65280" category="paragraph">個々の「スナップショット」オブジェクトには、以下のプロパティが含まれています。</block>
  <block id="27118326006d3829667a400ad23d5d98" category="cell">文字列</block>
  <block id="93cba07454f06a4a960172bbd6e2a435" category="paragraph">はい。</block>
  <block id="de73fbae2864dd61c921cf0648a9717a" category="cell">Trident Snapshot オブジェクトの名前</block>
  <block id="8e744456fb3d02d69442038d3e771460" category="cell">ストレージシステム上の Trident Snapshot オブジェクトの名前</block>
  <block id="617a43eb0446f84414df73cce2997fa1" category="cell">ボリューム名</block>
  <block id="b58c8ff1e837af6dafa971bf3d320646" category="cell">Snapshot を作成する永続的ボリュームの名前</block>
  <block id="2c2aed4b417a0f9c189d7ad6414ae28c" category="cell">ボリュームの内部名</block>
  <block id="db1a117103c348ebaec41f9e249554c3" category="cell">ストレージシステムに関連付けられている Trident ボリュームオブジェクトの名前</block>
  <block id="73f3d5934fdd36989f24cbae94ab423b" category="paragraph">Kubernetes の「 VolumeSnapshot 」オブジェクト要求が作成されると、 Trident は元のストレージシステム上にスナップショットオブジェクトを作成することによって動作します。このスナップショットオブジェクトの「 internalName 」は、プレフィックス「 snapshot-` と「 VolumeSnapshot 」オブジェクトの「 UID 」を組み合わせることによって生成されます（例：「 snapshot-e8d8d8a0ca-9826-11e9-9807-525400f3f660 」）。「 volumeName 」と「 volumeInternalName 」には、バッキングボリュームの詳細を取得して値を設定します。</block>
  <block id="e977c869b42c54e3c7d8fb9c071aab2b" category="summary">Trident が通信するポートの詳細をご確認ください。</block>
  <block id="b229055f6bd047c28dfc84c9bee4c252" category="doc">Astra Trident ポート</block>
  <block id="219abf04d1bb79760c15ca6966b68fb3" category="paragraph">Astra Trident は次のポート経由で通信：</block>
  <block id="60aaf44d4b562252c04db7f98497e9aa" category="cell">ポート</block>
  <block id="261addf78c7b2c961032b3dd08ba0b1f" category="cell">目的</block>
  <block id="7e6b20d014d1c659e4eaf20dc2dcd7eb" category="cell">8443</block>
  <block id="69bbf3571db03f0487c04a8254d15c75" category="cell">バックチャネル HTTPS</block>
  <block id="bc3c4a6331a8a9950945a1aa8c95ab8a" category="cell">8001</block>
  <block id="e5a4c481cc6f5935efb2c9d381f2e342" category="cell">Prometheus 指標エンドポイント</block>
  <block id="67ff32d40fb51f1a2fd2c4f1b1019785" category="cell">8000</block>
  <block id="10f5b805a46ea829cc3b9d8560a224ae" category="cell">Trident REST サーバ</block>
  <block id="35cf0f704286108deb76366a16415140" category="cell">17546</block>
  <block id="fb1396f82d0096741ea1b06f8cee2340" category="cell">Trident デミ作用 / レディネスプローブポートは、 Trident デミ作用ポッドで使用されます</block>
  <block id="b9c469bd571fac8818d4000055d327df" category="admonition">liveness / Readiness プローブポートは '--probe-port' フラグを使用してインストール時に変更できますこのポートがワーカーノード上の別のプロセスで使用されていないことを確認することが重要です。</block>
  <block id="d59b86d1714966230da7a00672e40912" category="summary">ここに記載された推奨事項に従って、 Astra Trident のインストールを確実にセキュリティで保護してください。</block>
  <block id="2fae32629d4ef4fc6341f1751b405e45" category="doc">セキュリティ</block>
  <block id="44a736677691eaca5e5d3d6b5c770b22" category="section-title">Astra Trident を独自のネームスペースで実行</block>
  <block id="347d4c35796a862cf20cdcdebfe59e57" category="paragraph">アプリケーション、アプリケーション管理者、ユーザ、および管理アプリケーションが Astra Trident オブジェクト定義またはポッドにアクセスしないようにして、信頼性の高いストレージを確保し、悪意のあるアクティビティをブロックすることが重要です。</block>
  <block id="47d7f9fac441e60d9523d256d02aa8ba" category="paragraph">他のアプリケーションやユーザを Astra Trident から分離するには、 Astra Trident を必ず独自の Kubernetes ネームスペース（ trident` ）にインストールしてください。Astra Trident を独自の名前空間に配置することで、 Kubernetes 管理担当者のみが Astra Trident ポッドにアクセスでき、名前空間 CRD オブジェクトに格納されたアーティファクト（バックエンドや CHAP シークレット（該当する場合）にアクセスできるようになります。Astra Trident ネームスペースへのアクセスを管理者のみに許可し、 tridentctl アプリケーションへのアクセスを許可する必要があります。</block>
  <block id="f40aef657c875e42158050f63dcfbb6f" category="section-title">ONTAP SAN バックエンドで CHAP 認証を使用します</block>
  <block id="2738c60dc60977d9eb6af2bf2a98c193" category="paragraph">Astra Trident は、 ONTAP SAN ワークロード向けの CHAP ベースの認証をサポートしています（「 ONTAP-SAN' 」ドライバと「 ONTAP-SAN-エコノミー 」ドライバを使用）。ネットアップでは、ホストとストレージバックエンドの間の認証に、双方向 CHAP と Astra Trident を使用することを推奨しています。</block>
  <block id="6c92285fa6d3e827b198d120ea3ac674" category="inline-link-macro">こちらをご覧ください</block>
  <block id="c34904efabe33827baaa88ebf031ffab" category="paragraph">SAN ストレージ・ドライバを使用する ONTAP バックエンドの場合 'Astra Trident は双方向 CHAP をセットアップし 'tridentctl を使用して CHAP ユーザー名とシークレットを管理できますを参照してください <block ref="eda040c33c51e3cee067cf2f06789687" category="inline-link-macro-rx"></block> ONTAP バックエンドで Trident が CHAP を構成する方法をご確認ください。</block>
  <block id="97f83fd51c89f4f9d3fc271b9f7291ab" category="admonition">ONTAP バックエンドの CHAP サポートは Trident 20.04 以降で利用可能</block>
  <block id="d4e0ad8fd8e11d87eb431051692db344" category="section-title">NetApp HCI および SolidFire バックエンドで CHAP 認証を使用します</block>
  <block id="b6a8ac29724d88dfaec657edda424d98" category="paragraph">ホストと NetApp HCI バックエンドと SolidFire バックエンドの間の認証を確保するために、双方向の CHAP を導入することを推奨します。Astra Trident は、テナントごとに 2 つの CHAP パスワードを含むシークレットオブジェクトを使用します。Trident を CSI プロビジョニングツールとしてインストールすると、 CHAP シークレットが管理され、それぞれの PV の「 tridentvolume 」 CR オブジェクトに格納されます。PV を作成すると、 CSI Astra Trident は CHAP シークレットを使用して iSCSI セッションを開始し、 CHAP を介して NetApp HCI および SolidFire システムと通信します。</block>
  <block id="19cde2e69238c98382d677e2583cbc46" category="admonition">CSI Trident によって作成されたボリュームは、どのボリュームアクセスグループにも関連付けられていません。</block>
  <block id="3179d8563cd49690a141c34c045dfab8" category="paragraph">CSI 以外のフロントエンドでは、ワーカーノード上のデバイスとしてのボリュームの接続は Kubernetes で処理されます。ボリュームの作成後、 Astra Trident が NetApp HCI / SolidFire システムに対して API 呼び出しを実行し、テナントのシークレットがない場合はシークレットを取得します。Trident が Kubernetes にシークレットを渡します。各ノード上の kubelet は Kubernetes API を介してシークレットにアクセスし、ボリュームにアクセスする各ノードとボリュームが配置されている NetApp HCI / SolidFire システム間で CHAP を実行 / 有効化するために使用します。</block>
  <block id="75f3d382f074f14c775efb5cf2f23c30" category="summary">Astra Trident の導入時には、ここに示す推奨事項を使用してください。</block>
  <block id="ea355214fd4bc7c57f471bd92918879b" category="doc">導入</block>
  <block id="d89d3b3161292ef0c65342cbe80e883f" category="section-title">専用のネームスペースに導入します</block>
  <block id="13d28e8dfc702e3456e0767dff9a128a" category="inline-link">ネームスペース</block>
  <block id="79a77cdda2a2513aee654190c73f15ab" category="paragraph"><block ref="c41296e544cd0faaa4fe4e8b22535287" category="inline-link-rx"></block> 異なるアプリケーション間で管理を分離できるため、リソース共有の障壁となります。たとえば、あるネームスペースの PVC を別のネームスペースから使用することはできません。Astra Trident は、 Kubernetes クラスタ内のすべてのネームスペースに PV リソースを提供するため、権限が昇格されたサービスアカウントを利用します。</block>
  <block id="853cf568613b7eec1486421468e18b9b" category="paragraph">また、 Trident ポッドにアクセスすると、ユーザがストレージシステムのクレデンシャルやその他の機密情報にアクセスできるようになります。アプリケーションユーザと管理アプリケーションが Trident オブジェクト定義またはポッド自体にアクセスできないようにすることが重要です。</block>
  <block id="2c8e89de5c6bf68b180cff5fea545167" category="section-title">クォータと範囲制限を使用してストレージ消費を制御します</block>
  <block id="74444eaf90c31d151645e59dcab0468d" category="inline-link">ストレージクォータメカニズム</block>
  <block id="1d81c150d54eae0c49d9cfeb8d493b0f" category="inline-link">範囲制限</block>
  <block id="94104e476fe547cf6237480cacae5ed5" category="paragraph">Kubernetes には、 2 つの機能があります。これらの機能を組み合わせることで、アプリケーションによるリソース消費を制限する強力なメカニズムが提供されます。。<block ref="bff513af91e6751aca3d34ef714e3b91" category="inline-link-rx"></block> 管理者は、グローバルおよびストレージクラス固有の、容量とオブジェクト数の使用制限をネームスペース単位で実装できます。さらに、を使用します<block ref="dbe9770513b0f7245f1fe016d20ebb70" category="inline-link-rx"></block> 要求がプロビジョニングツールに転送される前に、 PVC 要求が最小値と最大値の両方の範囲内にあることを確認します。</block>
  <block id="4f9253eda0573e387f86d7777aafff03" category="inline-link">クォータの活用方法</block>
  <block id="923169151e05d28a3474b2a033666297" category="paragraph">これらの値はネームスペース単位で定義されます。つまり、各ネームスペースに、リソースの要件に応じた値を定義する必要があります。の詳細については、こちらを参照してください<block ref="5b289b2ffde01314d8b0d038aabd709b" category="inline-link-rx"></block>。</block>
  <block id="698aa9df4c2c5470599821c3d10620dd" category="summary">Kubernetes クラスタは通常、 2 種類のノードで構成され、機能のさまざまな側面を担当します。</block>
  <block id="6e8775bd755a8835ce86806d669677ea" category="doc">ストレージ構成</block>
  <block id="4d59d193e356ef0157daf2c1fc0a6dd6" category="paragraph">ネットアップのポートフォリオに含まれる各ストレージプラットフォームは、コンテナ化されたアプリケーションや含まれないアプリケーションにメリットをもたらす独自の機能を備えています。Trident は、 ONTAP 、 Element 、 E シリーズなど、主要な各プラットフォームと連携します。1 つのプラットフォームが他のプラットフォームよりもすべてのアプリケーションとシナリオに適しているわけではありませんが、プラットフォームを選択する際には、アプリケーションのニーズとデバイスを管理するチームを考慮する必要があります。</block>
  <block id="ac5112696fd64ee051846c666ebebebe" category="paragraph">使用するプロトコルに対応したホストオペレーティングシステムのベースラインベストプラクティスに従う必要があります。必要に応じて、アプリケーションのベストプラクティスを適用する際に、バックエンド、ストレージクラス、 PVC の設定を利用して、特定のアプリケーションのストレージを最適化することもできます。</block>
  <block id="efc9d085ca2f3a152c786357e9359c03" category="section-title">ONTAP と Cloud Volumes ONTAP のベストプラクティス</block>
  <block id="a3f99d5d44515cf922e6b525de736173" category="paragraph">Trident 向けに ONTAP と Cloud Volumes ONTAP を設定するためのベストプラクティスをご確認ください。</block>
  <block id="76d50c7d0f100e6264e0d57727d099f1" category="paragraph">次に示す推奨事項は、 Trident によって動的にプロビジョニングされたボリュームを消費するコンテナ化されたワークロード用に ONTAP を設定する際のガイドラインです。それぞれの要件を考慮し、環境内で適切かどうかを評価する必要があります。</block>
  <block id="3fb21976d2729216782dd61ffed84a54" category="section-title">Trident 専用の SVM を使用</block>
  <block id="fa4e21d3612a3f737c7a4ac7ebf24950" category="paragraph">Storage Virtual Machine （ SVM ）を使用すると、 ONTAP システムのテナントを分離し、管理者が分離できます。SVM をアプリケーション専用にしておくと、権限の委譲が可能になり、リソース消費を制限するためのベストプラクティスを適用できます。</block>
  <block id="3dc5510a67688b81f0d6d0db440da909" category="paragraph">SVM の管理には、いくつかのオプションを使用できます。</block>
  <block id="fe425a9419fa4d05d42131c26306e4f1" category="list-text">バックエンド構成でクラスタ管理インターフェイスを適切なクレデンシャルとともに指定し、 SVM 名を指定します。</block>
  <block id="e2160df70bcda0ee43cb3c66dc22c719" category="list-text">ONTAP System Manager または CLI を使用して、 SVM 専用の管理インターフェイスを作成します。</block>
  <block id="2bf2fa2c1c3a6e10095db72759cc9983" category="list-text">NFS データインターフェイスで管理ロールを共有します。</block>
  <block id="5cf4c2e89b362842d77f4e4209c4ef99" category="paragraph">いずれの場合も、インターフェイスは DNS にあり、 Trident の設定時には DNS 名を使用する必要があります。これにより、ネットワーク ID を保持しなくても SVM-DR などの一部の DR シナリオが簡単になります。</block>
  <block id="6a392b5e005fffe32231c94dc96a1605" category="inline-link">SVM-DR</block>
  <block id="2b4a6ee2db063653d6076884295a3854" category="paragraph">専用の管理 LIF または共有の管理 LIF を SVM に使用する方法は推奨されませんが、ネットワークセキュリティポリシーを選択した方法と一致させる必要があります。最大の柔軟性を確保するには、どのような場合でも DNS 経由で管理 LIF にアクセスできるようにします<block ref="f5e9502989ce78934689806ebb69606a" category="inline-link-rx"></block> Trident と組み合わせて使用できます。</block>
  <block id="4a0ee008d3379206a925ade3a9e707dd" category="section-title">最大ボリューム数を制限します</block>
  <block id="e5e09031843479ef9ef8cbbd4c2f404c" category="inline-link">NetApp Hardware Universe の略</block>
  <block id="400a5d259a812effb5b7df506bf020ef" category="paragraph">ONTAP ストレージシステムの最大ボリューム数は、ソフトウェアのバージョンとハードウェアプラットフォームによって異なります。を参照してください<block ref="bb9c67b5a4c15a85b5e6aa6c9afd0285" category="inline-link-rx"></block> 具体的な制限については、使用しているプラットフォームと ONTAP のバージョンに対応しています。ボリューム数を使い果たした場合、 Trident のプロビジョニング処理だけでなく、すべてのストレージ要求に対してプロビジョニング処理が失敗します。</block>
  <block id="39da19b7dd55941b6cdabf34befc0b4c" category="paragraph">Trident の「 ONTAP - NAS 」と「 ONTAP - SAN 」ドライバは、作成された Kubernetes 永続ボリューム（ PV ）ごとに FlexVol をプロビジョニングします。「 ONTAP-NAS-エコノミー 」ドライバは、 PVS 200 個につき約 1 つの FlexVol を作成します（ 50 ～ 300 の範囲で構成可能）。「 ONTAP-SAN-エコノミー 」ドライバは、 PVS 100 個につき約 1 つの FlexVol を作成します（ 50 ～ 200 の範囲で設定可能）。Trident がストレージシステム上の使用可能なボリュームをすべて消費しないようにするには、 SVM に制限を設定する必要があります。コマンドラインから実行できます。</block>
  <block id="f36680e3d3cb96c74d2f1a54c3c4a0fa" category="paragraph">「 mAX-VOLUMES 」の値は、環境に固有のいくつかの条件によって異なります。</block>
  <block id="5f6d1abb6889904ee0375b2fc6c8f078" category="list-text">ONTAP クラスタ内の既存のボリュームの数</block>
  <block id="029383c13d9ad2c5ba18a16f8fbe2002" category="list-text">他のアプリケーション用に Trident 外部でプロビジョニングするボリュームの数</block>
  <block id="02f4ac473b944a63551d51d727b5bb49" category="list-text">Kubernetes アプリケーションで消費されると予想される永続ボリュームの数</block>
  <block id="1d3555f20ac0a2897a1596631b5fb27a" category="paragraph">「 mAX-volumes 」の値は、 ONTAP クラスタ内のすべてのノードでプロビジョニングされたボリュームの合計数であり、個々の ONTAP ノードではプロビジョニングされません。その結果、 ONTAP クラスタノードの Trident でプロビジョニングされたボリュームの数が、別のノードよりもはるかに多い、または少ない場合があります。</block>
  <block id="46710fe77f663864a23e02a880a9ae53" category="inline-link">アグリゲート</block>
  <block id="8eb27359ed8f69eb07c318fcd224ba66" category="paragraph">たとえば、 2 ノードの ONTAP クラスタでは、最大 2 、 000 個の FlexVol をホストできます。最大ボリューム数を 1250 に設定していると、非常に妥当な結果が得られます。ただし、のみの場合<block ref="acf6cbef6ee0ef07ee3fe13269233be8" category="inline-link-rx"></block> あるノードから SVM に割り当てられている場合や、あるノードから割り当てられたアグリゲートをプロビジョニングできない場合（容量など）は、他のノードが Trident でプロビジョニングされたすべてのボリュームのターゲットになります。これは、「 mAX-VOLUMES 」の値に達する前にそのノードのボリューム数の上限に達する可能性があることを意味し、 Trident とそのノードを使用する他のボリューム処理の両方に影響します。* クラスタ内の各ノードのアグリゲートを、 Trident が使用する SVM に同じ番号で確実に割り当てることで、この状況を回避できます。 *</block>
  <block id="7ef3217c984ef7f973d389e434be312c" category="section-title">Trident で作成できるボリュームの最大サイズを制限</block>
  <block id="031b203330c3abb94f6fa406ff721de4" category="paragraph">Trident で作成できるボリュームの最大サイズを設定するには、「 backend.json 」の定義で「 limitVolumeSize 」パラメータを使用します。</block>
  <block id="1c19414de17c9992b25b0a1b02a52715" category="paragraph">ストレージアレイでボリュームサイズを制御するだけでなく、 Kubernetes の機能も利用する必要があります。</block>
  <block id="85c0f9773e01224a56713ea4e6d83b86" category="section-title">双方向 CHAP を使用するように Trident を設定します</block>
  <block id="8b7c80a4394c7e64aa891100d57a755f" category="paragraph">バックエンド定義で CHAP イニシエータとターゲットのユーザ名とパスワードを指定し、 Trident を使用して SVM で CHAP を有効にすることができます。バックエンド構成で「 useCHAP 」パラメータを使用すると、 Trident は CHAP を使用して ONTAP バックエンドの iSCSI 接続を認証します。双方向 CHAP のサポートは Trident 20.04 以降で利用できます。</block>
  <block id="2596e59ce5cd0d1b0066656f191365d0" category="section-title">SVM QoS ポリシーを作成して使用します</block>
  <block id="560417d4f795b7e1176a40db8e4ccca8" category="inline-link">Bully を防止します</block>
  <block id="4870168b0713fe3089cf587858fc3b40" category="paragraph">SVM に適用された ONTAP QoS ポリシーを使用すると、 Trident でプロビジョニングされたボリュームが使用できる IOPS の数が制限されます。これはに役立ちます<block ref="1b59d76842e8b78d6111d3e73e9cd404" category="inline-link-rx"></block> Trident SVM 外のワークロードに影響を及ぼす、制御不能なコンテナ。</block>
  <block id="d6ab867679686745d96bea839929a6de" category="paragraph">SVM の QoS ポリシーはいくつかの手順で作成します。正確な情報については、ご使用の ONTAP バージョンのマニュアルを参照してください。次の例は、 SVM で使用可能な合計 IOPS を 5000 に制限する QoS ポリシーを作成します。</block>
  <block id="c790de304b7ca0097f2133cf9da4e657" category="paragraph">また、使用しているバージョンの ONTAP でサポートされている場合は、最小 QoS を使用してコンテナ化されたワークロードへのスループットを保証することもできます。アダプティブ QoS は SVM レベルのポリシーには対応していません。</block>
  <block id="38c0b69f6b2ee691e1ba568134513414" category="paragraph">コンテナ化されたワークロード専用の IOPS は、さまざまな要素によって異なります。その中には、次のようなものがあります。</block>
  <block id="ddbd18591c9b7378c6187dbd9179e1f0" category="list-text">ストレージアレイを使用するその他のワークロード。Kubernetes 環境とは関係なく、ストレージリソースを利用するほかのワークロードがある場合は、それらのワークロードが誤って影響を受けないように注意する必要があります。</block>
  <block id="5da5727b396cee5b024364d989fe253b" category="list-text">想定されるワークロードはコンテナで実行されます。IOPS 要件が高いワークロードをコンテナで実行する場合は、 QoS ポリシーの値が低いとエクスペリエンスが低下します。</block>
  <block id="e6f229b5d5d2421c4306920759828212" category="paragraph">SVM レベルで割り当てた QoS ポリシーを使用すると、 SVM にプロビジョニングされたすべてのボリュームで同じ IOPS プールが共有されることに注意してください。コンテナ化されたアプリケーションの 1 つまたは少数のに高い IOPS が必要な場合、コンテナ化された他のワークロードに対する Bully になる可能性があります。その場合は、外部の自動化を使用したボリュームごとの QoS ポリシーの割り当てを検討してください。</block>
  <block id="ac2167b1e02d575eb6ddfe4e58f5cdcf" category="admonition">ONTAP バージョン 9.8 より前の場合は、 QoS ポリシーグループを SVM * only * に割り当ててください。</block>
  <block id="9992cae6c17055c750a849c5f6135eb2" category="section-title">Trident の QoS ポリシーグループを作成</block>
  <block id="76a3e54f72b3a7224429f111e58f836c" category="inline-link">QoS によるスループットの保証</block>
  <block id="edb2313b52b4c42008f0531bd6a05e49" category="paragraph">Quality of Service （ QoS ；サービス品質）は、競合するワークロードによって重要なワークロードのパフォーマンスが低下しないようにします。ONTAP の QoS ポリシーグループには、ボリュームに対する QoS オプションが用意されており、ユーザは 1 つ以上のワークロードに対するスループットの上限を定義できます。QoS の詳細については、を参照してください<block ref="721a1778a2025ec5868484b3888c0186" category="inline-link-rx"></block>。QoS ポリシーグループはバックエンドまたはストレージプールに指定でき、そのプールまたはバックエンドに作成された各ボリュームに適用されます。</block>
  <block id="0394fb1288eac4cd3d40bcd991e079e9" category="paragraph">ONTAP には、従来型とアダプティブ型の 2 種類の QoS ポリシーグループがあります。従来のポリシーグループは、最大スループット（以降のバージョンでは最小スループット）がフラットに表示されます。アダプティブ QoS では、ワークロードのサイズの変更に合わせてスループットが自動的に調整され、 TB または GB あたりの IOPS が一定に維持されます。これにより、何百何千という数のワークロードを管理する大規模な環境では大きなメリットが得られます。</block>
  <block id="f5acc65a21daed9bb8e91cb5cdd0ae52" category="paragraph">QoS ポリシーグループを作成するときは、次の点に注意してください。</block>
  <block id="6d5fcf300cd9e9239c26ce37b0919fca" category="list-text">バックエンド構成の「金庫」ブロックに「 QOSPolicy 」キーを設定する必要があります。次のバックエンド設定例を参照してください。</block>
  <block id="32160c2368452bf7d86bcffae7f142be" category="list-text">ボリュームごとにポリシーグループを適用して、各ボリュームがポリシーグループの指定に従ってスループット全体を取得するようにします。共有ポリシーグループはサポートされません。</block>
  <block id="b2365e059850d5e32885189655bf469c" category="inline-link">ONTAP 9.8 QoS コマンド</block>
  <block id="23225608cf33a6c6a4aec9126514b0e1" category="paragraph">QoS ポリシーグループの詳細については、を参照してください<block ref="40468e984a92fba9003857701268163a" category="inline-link-rx"></block>。</block>
  <block id="d5d2a5bc92eea85a4dd11a642ed8a170" category="section-title">ストレージリソースへのアクセスを Kubernetes クラスタメンバーに制限する</block>
  <block id="0f2b74d1b972675eb3d4efe7d8c3ed16" category="paragraph">Trident によって作成される NFS ボリュームと iSCSI LUN へのアクセスを制限することは、 Kubernetes 環境のセキュリティ体制に欠かせない要素です。これにより、 Kubernetes クラスタに属していないホストがボリュームにアクセスしたり、データが予期せず変更されたりすることを防止できます。</block>
  <block id="9602ec8691c1a564016f9fd8086139f1" category="paragraph">ネームスペースは Kubernetes のリソースの論理的な境界であることを理解することが重要です。ただし、同じネームスペース内のリソースは共有可能であることが前提です。重要なのは、ネームスペース間に機能がないことです。つまり、 PVS はグローバルオブジェクトですが、 PVC にバインドされている場合は、同じネームスペース内のポッドからのみアクセス可能です。* 適切な場合は、名前空間を使用して分離することが重要です。 *</block>
  <block id="1162be0546226cff2cbd973cd2140d33" category="paragraph">Kubernetes 環境でデータセキュリティを使用する場合、ほとんどの組織で最も懸念されるのは、コンテナ内のプロセスがホストにマウントされたストレージにアクセスできることですが、コンテナ用ではないためです。 <block ref="962cfea7b49ca7b2d398d891b4313cb5" category="inline-link-rx"></block> この種の妥協を防ぐように設計されています。ただし、特権コンテナという例外が 1 つあります。</block>
  <block id="7b10e929cc2e0061dfb50042a0203c79" category="inline-link">ポッドセキュリティポリシー</block>
  <block id="76db1afb772160283f7f86cdd67c35f8" category="paragraph">権限付きコンテナは、通常よりもホストレベルの権限で実行されるコンテナです。デフォルトでは拒否されないため、を使用してこの機能を無効にしてください<block ref="e5ab4ede40a4a6a5f5684247585b5fb0" category="inline-link-rx"></block>。</block>
  <block id="5fabba1d91abcfb09b6049897727e91c" category="paragraph">Kubernetes と外部ホストの両方からアクセスが必要なボリュームでは、 Trident ではなく管理者が導入した PV で、ストレージを従来の方法で管理する必要があります。これにより、 Kubernetes と外部ホストの両方が切断され、ボリュームを使用していない場合にのみ、ストレージボリュームが破棄されます。また、カスタムエクスポートポリシーを適用して、 Kubernetes クラスタノードおよび Kubernetes クラスタの外部にあるターゲットサーバからのアクセスを可能にすることもできます。</block>
  <block id="4b4f0cfc14f082f2397c1c96efa18fc1" category="paragraph">専用のインフラノード（ OpenShift など）や、ユーザアプリケーションにスケジュールできない他のノードを導入する場合は、別々のエクスポートポリシーを使用してストレージリソースへのアクセスをさらに制限する必要があります。これには、これらのインフラノードに導入されているサービス（ OpenShift Metrics サービスや Logging サービスなど）のエクスポートポリシーの作成と、非インフラノードに導入されている標準アプリケーションの作成が含まれます。</block>
  <block id="e38f5be5ff6a8a362870a032acdf5d2f" category="section-title">専用のエクスポートポリシーを使用します</block>
  <block id="2f05855ad489343ae535c8f17eaa6f34" category="paragraph">Kubernetes クラスタ内のノードへのアクセスのみを許可するエクスポートポリシーが各バックエンドに存在することを確認する必要があります。Trident では、 20.04 リリース以降、エクスポートポリシーを自動的に作成、管理できます。これにより、 Trident はプロビジョニング対象のボリュームへのアクセスを Kubernetes クラスタ内のノードに制限し、ノードの追加や削除を簡易化します。</block>
  <block id="28af9e32119f59018dd5d887ad93ccd4" category="paragraph">また、エクスポートポリシーを手動で作成し、各ノードのアクセス要求を処理する 1 つ以上のエクスポートルールを設定することもできます。</block>
  <block id="4ae1e64986504dce6897746ebc9d2786" category="list-text">「 vserver export-policy create 」 ONTAP CLI コマンドを使用して、エクスポートポリシーを作成します。</block>
  <block id="cd0a9fca1fb3ba0fcdd98d0e87cb78a9" category="list-text">「 vserver export-policy rule create 」 ONTAP CLI コマンドを使用して、エクスポートポリシーにルールを追加します。</block>
  <block id="bc3a2f6421da1e870583cfb0b9cf4a91" category="paragraph">これらのコマンドを実行すると、データにアクセスできる Kubernetes ノードを制限できます。</block>
  <block id="bd82c82b218c96acc3c66f92a723ce74" category="section-title">アプリケーション SVM に対して showmount を無効にします</block>
  <block id="613655fb3db9bdbe0f795ee9424fc1fe" category="paragraph">「 SVM 」機能を使用すると、 NFS クライアントが SVM に照会して使用可能な NFS エクスポートのリストを表示できます。Kubernetes クラスタに導入されたポッドは、データ LIF に対する「 howmount-e 」コマンドを問題に送信し、アクセス権がないマウントも含め、使用可能なマウントのリストを受信できます。これだけではセキュリティ上の妥協ではありませんが、権限のないユーザが NFS エクスポートに接続するのを阻止する可能性のある不要な情報が提供されます。</block>
  <block id="08f1d9a2f49f56965b640bc15796cd61" category="paragraph">SVM レベルの ONTAP CLI コマンドを使用して、 SVM の howmount を無効にする必要があります。</block>
  <block id="648e0e1a6a98e76bdfe9780c42dacb6b" category="section-title">SolidFire のベストプラクティス</block>
  <block id="89f93e411a40f5c6365a4703e004f15b" category="paragraph">Trident に SolidFire ストレージを設定するためのベストプラクティスをご確認ください。</block>
  <block id="52f311b56fcd9d4fb074918af9b7c7f9" category="section-title">SolidFire アカウントを作成します</block>
  <block id="b0dd2707e9f12b5e1fda314748ffa386" category="paragraph">各 SolidFire アカウントは固有のボリューム所有者で、 Challenge Handshake Authentication Protocol （ CHAP ；チャレンジハンドシェイク認証プロトコル）クレデンシャルのセットを受け取ります。アカウントに割り当てられたボリュームには、アカウント名とその CHAP クレデンシャルを使用してアクセスするか、ボリュームアクセスグループを通じてアクセスできます。アカウントには最大 2 、 000 個のボリュームを関連付けることができますが、 1 つのボリュームが属することのできるアカウントは 1 つだけです。</block>
  <block id="eaf4b71058f7db58997dfe694c62a96a" category="section-title">QoS ポリシーを作成する</block>
  <block id="fd640dfd679c3a7e40aa99c3e08c8294" category="paragraph">標準的なサービス品質設定を作成して保存し、複数のボリュームに適用する場合は、 SolidFire のサービス品質（ QoS ）ポリシーを使用します。</block>
  <block id="41be5238fc563c2aac0a0e6ee4cf6e96" category="paragraph">QoS パラメータはボリューム単位で設定できます。QoS を定義する 3 つの設定可能なパラメータである Min IOPS 、 Max IOPS 、 Burst IOPS を設定することで、各ボリュームのパフォーマンスが保証されます。</block>
  <block id="48e4bd34fd7a9e1233ea82bc818a3161" category="paragraph">4KB のブロックサイズの最小 IOPS 、最大 IOPS 、バースト IOPS の値を次に示します。</block>
  <block id="8e4988a1e5f387efce6f20e4f25a8e40" category="cell">IOPS パラメータ</block>
  <block id="0b890b1926b90387673882e6ccae7fdc" category="cell">定義（ Definition ）</block>
  <block id="96a22bf638896c990d26e043087fb6b0" category="cell">最小価値</block>
  <block id="31ce3cdcd67850870b616f75b555bbc5" category="cell">デフォルト値</block>
  <block id="c9fb55be94277b8390352c215f32d44c" category="cell">最大値（ 4KB ）</block>
  <block id="b05f9ccd772b396ac1f5a05345a9d4f8" category="paragraph">最小 IOPS</block>
  <block id="2b30c179facf62f8a2bdbd1b09b37b96" category="paragraph">ボリュームに対して保証されたレベルのパフォーマンス。</block>
  <block id="c0c7c76d30bd3dcaefc96f40275bdc0a" category="cell">50</block>
  <block id="3f74a886c7f841699690962c497d4f30" category="paragraph">15000</block>
  <block id="4f5a6f8b41826526724ba294b8e056bd" category="paragraph">最大 IOPS</block>
  <block id="4e41c5ccaf1affa697729ea4d1e88554" category="paragraph">パフォーマンスはこの制限を超えません。</block>
  <block id="e05695d29cb4a9339534e5a9c273fa14" category="paragraph">200,000</block>
  <block id="affd4aba1c5f696e972368c9eb698c65" category="paragraph">バースト IOPS</block>
  <block id="2734923c054f38d8ca66133414af4469" category="paragraph">短時間のバースト時に許容される最大 IOPS 。</block>
  <block id="e2eb05f1ef7720127ac371ceddc6f433" category="admonition">Max IOPS と Burst IOPS は最大 200 、 000 に設定できますが、実際のボリュームの最大パフォーマンスは、クラスタの使用量とノードごとのパフォーマンスによって制限されます。</block>
  <block id="fa9b1a3006e0ba9ad904c059c0b9add6" category="inline-link">SolidFire のサービス品質</block>
  <block id="7363485d4653963c22d3ed43afd0003a" category="paragraph">ブロックサイズと帯域幅は、 IOPS に直接影響します。ブロックサイズが大きくなると、システムはそのブロックサイズを処理するために必要なレベルまで帯域幅を増やします。帯域幅が増えると、システムが処理可能な IOPS は減少します。を参照してください<block ref="c8976c50ed9f016849fdce232777cd31" category="inline-link-rx"></block> QoS およびパフォーマンスの詳細については、を参照してください。</block>
  <block id="b4657825f74ed622384dddf3a1d7d3b7" category="section-title">SolidFire 認証</block>
  <block id="9d3b5ff1cde828a63203f0465a34a967" category="paragraph">Element では、認証方法として CHAP とボリュームアクセスグループ（ VAG ）の 2 つがサポートされています。CHAP は CHAP プロトコルを使用して、バックエンドへのホストの認証を行います。ボリュームアクセスグループは、プロビジョニングするボリュームへのアクセスを制御します。CHAP はシンプルで拡張性に制限がないため、認証に使用することを推奨します。</block>
  <block id="fc9e812321a3f9b0eab1b702a08bab4e" category="admonition">Trident と強化された CSI プロビジョニングツールは、 CHAP 認証の使用をサポートします。VAG は、従来の CSI 以外の動作モードでのみ使用する必要があります。</block>
  <block id="d23eaa75b7bd1405526da0e18b7290ac" category="paragraph">CHAP 認証（イニシエータが対象のボリュームユーザであることの確認）は、アカウントベースのアクセス制御でのみサポートされます。認証に CHAP を使用している場合は、単方向 CHAP と双方向 CHAP の 2 つのオプションがあります。単方向 CHAP は、 SolidFire アカウント名とイニシエータシークレットを使用してボリュームアクセスを認証します。双方向の CHAP オプションを使用すると、ボリュームがアカウント名とイニシエータシークレットを使用してホストを認証し、ホストがアカウント名とターゲットシークレットを使用してボリュームを認証するため、ボリュームを最も安全に認証できます。</block>
  <block id="42d135bea104c1079cebd1543c89e970" category="paragraph">ただし、 CHAP を有効にできず VAG が必要な場合は、アクセスグループを作成し、ホストのイニシエータとボリュームをアクセスグループに追加します。アクセスグループに追加した各 IQN は、 CHAP 認証の有無に関係なく、グループ内の各ボリュームにアクセスできます。iSCSI イニシエータが CHAP 認証を使用するように設定されている場合は、アカウントベースのアクセス制御が使用されます。iSCSI イニシエータが CHAP 認証を使用するように設定されていない場合は、ボリュームアクセスグループのアクセス制御が使用されます。</block>
  <block id="f9245b5c4618640379c5b7aca1642196" category="section-title">E シリーズのベストプラクティス</block>
  <block id="2bd6c307c08ebf17bbd89f92953812b5" category="paragraph">Trident 向けに E シリーズストレージを設定するためのベストプラクティスをご確認ください。</block>
  <block id="c502c3645d40ca0e119a2434fc569207" category="section-title">E シリーズのディスクプールとボリュームグループ</block>
  <block id="91e654e42725ff5233a96730cbb8353a" category="paragraph">要件に基づいてディスクプールとボリュームグループを作成し、合計ストレージ容量をボリュームにまとめてホスト間で共有する方法を決定します。ディスクプールとボリュームグループはどちらも、アプリケーションホストに 1 つ以上のボリュームを提供するために論理的にグループ化された一連のドライブで構成されます。ディスクプールまたはボリュームグループ内のすべてのドライブのメディアタイプを同じにする必要があります。</block>
  <block id="3ff82339aba03372510cbf649c88660b" category="section-title">E シリーズのホストグループ</block>
  <block id="1d159fb9310d2d64f0e89556f5e5e92a" category="paragraph">Trident は、プロビジョニングされたボリューム（ LUN ）にアクセスするためにホストグループを使用します。デフォルトでは、構成内で別のホストグループ名を指定しない限り、 Trident は「 trident 」というホストグループを使用します。Trident だけがホストグループを作成または管理することはありません。E シリーズストレージバックエンドが Trident でセットアップされる前に、ホストグループを作成する必要があります。Kubernetes ワーカーノードの iSCSI IQN 名がすべてホストグループで更新されていることを確認します。</block>
  <block id="345b5f2b58b43a215fba679b4aff7483" category="section-title">E シリーズの Snapshot スケジュール</block>
  <block id="7e496222beafc240f7c54f2e86d37419" category="paragraph">Snapshot スケジュールを作成し、 Trident によって作成されたボリュームを Snapshot スケジュールに割り当てて、必要な間隔でボリュームのバックアップを実行できるようにします。Snapshot ポリシーで作成された Snapshot に基づいて、 Snapshot イメージをベースボリュームにリストアすることで、ボリュームに対してロールバック処理を実行できます。SANtricity システムマネージャを使用して Snapshot スケジュールを作成します。</block>
  <block id="b5dd97bf7f44d6c721a9534c1b6d4390" category="section-title">Snapshot 整合性グループ</block>
  <block id="9279a0fc4d40b361df8598208a14b586" category="paragraph">Snapshot 整合性グループを設定することは、複数のボリュームにまたがるアプリケーションにも適しています。整合グループの目的は、複数のボリュームの Snapshot イメージを同時に作成することで、特定の時点における一連のボリュームの整合性のあるコピーを確保することです。SANtricity System Manager を使用して整合グループを作成する必要があります。</block>
  <block id="1ea481e04f09f7ec7132c7773f132743" category="section-title">Cloud Volumes Service for AWS のベストプラクティス</block>
  <block id="17bc2586ce2fe71048cad42dbfd6049f" category="paragraph">AWS で Trident 用に Cloud Volumes Service を設定する際のベストプラクティスをご確認ください。</block>
  <block id="bb53c6c29f127a298da7dd86bf00bb89" category="section-title">エクスポートポリシーを作成する</block>
  <block id="8e8d04641d33b2f0af7ad761af53aeb3" category="paragraph">Cloud Volumes Service 経由でプロビジョニングされたボリュームにアクセスできるのが許可されたノードセットだけになるように、 Cloud Volumes Service の作成時にエクスポートポリシーに適切なルールを設定します。Trident を介して Cloud Volume Services でボリュームをプロビジョニングする場合は、バックエンドファイルの「 exportRule 」パラメータを使用して、必要な Kubernetes ノードにアクセスできるようにしてください。</block>
  <block id="e807ebdf213353b8a415f991a2cade81" category="section-title">Snapshot ポリシーを作成します</block>
  <block id="07aa362ac01b2df1044db626df0e7c9b" category="paragraph">Cloud Volume Service を使用してプロビジョニングしたボリュームの Snapshot ポリシーを作成し、 Snapshot が必要な間隔で作成されるようにします。これにより、データのバックアップが一定の間隔で保証され、データの損失や破損が発生した場合にデータをリストアすることができます。Cloud Volume Service でホストされているボリュームの Snapshot ポリシーを設定するには、ボリュームの詳細ページで適切なスケジュールを選択します。</block>
  <block id="283a4f872d02fc8073ac706850ed948b" category="section-title">適切なサービスレベル、ストレージ容量、およびストレージ帯域幅を選択します</block>
  <block id="3251e3b8c107f351e2d3fd9e462aba19" category="paragraph">Cloud Volume Services for AWS は、 Standard 、 Premium 、 Extreme など、さまざまなサービスレベルを提供します。これらのサービスレベルは、さまざまなストレージ容量とストレージ帯域幅の要件に対応します。ビジネスニーズに基づいて適切なサービスレベルを選択してください。</block>
  <block id="c34374a04df0b3e2c47131fdbb5ef741" category="paragraph">ボリュームの作成時に、アプリケーション固有のニーズに基づいて、割り当てられているストレージのサイズを選択する必要があります。割り当てられたストレージを決定する際には、次の 2 つの要素を考慮する必要があります。</block>
  <block id="e2ae4659e808edd54a095d9432707c2f" category="list-text">特定のアプリケーションのストレージ要件</block>
  <block id="76ba23394d92b7a06d3ecb8582769eff" category="list-text">ピーク時またはエッジ時に必要な帯域幅</block>
  <block id="e1e4f36a86f0d5a56aa4115fed351ff5" category="paragraph">ストレージ帯域幅は、選択したサービスレベルと割り当て容量の組み合わせによって異なります。したがって、必要な帯域幅を考慮したうえで、適切なサービスレベルと割り当て容量を選択してください。</block>
  <block id="8015d968013817a20de84963d8c695b4" category="paragraph">Cloud Volume Services for AWS で Trident によって作成されるボリュームの最大サイズは、バックエンド構成ファイルの「 limitVolumeSize 」パラメータを使用して制限できます。このパラメータを設定すると、要求されたボリュームサイズが設定値を超えた場合にプロビジョニングが失敗します。</block>
  <block id="b4931a42b69dbf4e721e7b97873b1ebb" category="section-title">詳細情報の入手方法</block>
  <block id="2c3a4d5c923121574c10ea22c0474a01" category="inline-link">NetApp ライブラリ</block>
  <block id="65840df7365892d2abe1280cb6cdb1d2" category="paragraph">ベストプラクティスのドキュメントの一部を以下に示します。を検索します<block ref="4caccef7312f2c398bfbb419629c1a78" category="inline-link-rx"></block> 最新バージョンの場合。</block>
  <block id="d911b17f4f4cdcca62a04ad77aa9403d" category="paragraph">* ONTAP *</block>
  <block id="f9dd52d280693dc59e53b6e1fb7bd801" category="inline-link">『 NFS Best Practice and Implementation Guide 』を参照してください</block>
  <block id="40bb23d54df7f59219c18f15a346d9e5" category="list-text"><block ref="40bb23d54df7f59219c18f15a346d9e5" category="inline-link-rx"></block></block>
  <block id="a76193f5d9397d9c49ca283a20ccf649" category="inline-link">『 SAN アドミニストレーションガイド』</block>
  <block id="5bc9b097037d45aff954bf9bd632d4a4" category="list-text"><block ref="c745f55eb0c9991966e63f0608541bb1" category="inline-link-rx"></block> （ iSCSI の場合）</block>
  <block id="5ca34d6ffc2a555b689542e3fbeeb7af" category="inline-link">RHEL 向けの iSCSI のクイック構成</block>
  <block id="36588ac65dcdb9b93916fb0ab708edb3" category="list-text"><block ref="36588ac65dcdb9b93916fb0ab708edb3" category="inline-link-rx"></block></block>
  <block id="ca7ab5ec4cba84fbef55956bb38759ce" category="paragraph">* Element ソフトウェア *</block>
  <block id="e809d9f88c2933195c4d2ab379c1b5dc" category="inline-link">SolidFire for Linux を設定しています</block>
  <block id="ce0470e08aa854a8f93fa119434e8422" category="list-text"><block ref="ce0470e08aa854a8f93fa119434e8422" category="inline-link-rx"></block></block>
  <block id="d64280eb12d42bb67976ffba6d268e7b" category="paragraph">* NetApp HCI *</block>
  <block id="3bc72bedcc42d144356d4f933c48485d" category="inline-link">NetApp HCI 導入の前提条件</block>
  <block id="85bfffc1a1f7aaabd6cf58841640c308" category="list-text"><block ref="85bfffc1a1f7aaabd6cf58841640c308" category="inline-link-rx"></block></block>
  <block id="b52e411998b7d3a95ad5bd8a320bf271" category="inline-link">NetApp Deployment Engine にアクセスします</block>
  <block id="9d0da73b02655dd7861121905db229e2" category="list-text"><block ref="9d0da73b02655dd7861121905db229e2" category="inline-link-rx"></block></block>
  <block id="985f6a763990196218b4750275e1f3b6" category="paragraph">* E シリーズ *</block>
  <block id="db06f9adb1b570484daf34ad3bf4e257" category="inline-link">Linux 用のインストールと設定</block>
  <block id="a66f5507c8942de388ae63c7a177f7ab" category="list-text"><block ref="a66f5507c8942de388ae63c7a177f7ab" category="inline-link-rx"></block></block>
  <block id="9aaca8cfd79770bc4944ccc477e37141" category="paragraph">* アプリケーションのベストプラクティス情報 *</block>
  <block id="27a5e02bc2fadee43ace94805739a0c8" category="inline-link">ONTAP での MySQL に関するベストプラクティスです</block>
  <block id="40d2eaf9adabe99a601c57eabf49e4d3" category="list-text"><block ref="40d2eaf9adabe99a601c57eabf49e4d3" category="inline-link-rx"></block></block>
  <block id="17efdd7d210511985714be299d595292" category="inline-link">SolidFire での MySQL に関するベストプラクティスです</block>
  <block id="d03b53d8ec563c37e16ee8c900a75b96" category="list-text"><block ref="d03b53d8ec563c37e16ee8c900a75b96" category="inline-link-rx"></block></block>
  <block id="3aefe1a041af945f1fe8673bf775057b" category="inline-link">NetApp SolidFire および Cassandra</block>
  <block id="7e2b19f6f6bd1332efe1f7a698984670" category="list-text"><block ref="7e2b19f6f6bd1332efe1f7a698984670" category="inline-link-rx"></block></block>
  <block id="6e580111d3a8c12cdcd9522a4d3484c6" category="inline-link">SolidFire での Oracle のベストプラクティス</block>
  <block id="6db96715cefe9c4950ef722865494128" category="list-text"><block ref="6db96715cefe9c4950ef722865494128" category="inline-link-rx"></block></block>
  <block id="6448cf37496207be126495e5b05851de" category="inline-link">SolidFire での PostgreSQL のベストプラクティスです</block>
  <block id="eb2c92a9d2d39fa7191d6e84d5c33bb5" category="list-text"><block ref="eb2c92a9d2d39fa7191d6e84d5c33bb5" category="inline-link-rx"></block></block>
  <block id="b062996d6ca590abe798d3db75561f79" category="paragraph">すべてのアプリケーションに具体的なガイドラインがあるわけではありません。そのためには、ネットアップのチームと協力し、を使用することが重要です<block ref="4caccef7312f2c398bfbb419629c1a78" category="inline-link-rx"></block> 最新のドキュメントを検索できます。</block>
  <block id="748c130a6179b02d614cf9a027294302" category="doc">Astra Trident を統合</block>
  <block id="463c6e3deb27d776ba0302b5b90f6607" category="paragraph">Astra Trident を統合するには、設計とアーキテクチャに関する次の要素を統合する必要があります。ドライバの選択と導入、ストレージクラスの設計、仮想ストレージプールの設計、永続的ボリューム要求（ PVC ）は、 Astra Trident を使用したストレージプロビジョニング、ボリューム運用、 OpenShift サービスの導入に影響を及ぼします。</block>
  <block id="1fdc23c8579638d050b7b219da011f2b" category="section-title">ドライバの選択と展開</block>
  <block id="150d96898b109ac670a955fd616679fe" category="section-title">ONTAP のバックエンドドライバを選択します</block>
  <block id="3b81f3dbce48d5a5e5f6f338de47bb44" category="paragraph">ONTAP システムでは、 4 種類のバックエンドドライバを使用できます。これらのドライバの違いは、使用するプロトコルと、ストレージシステムでのボリュームのプロビジョニング方法です。そのため、どのドライバを展開するかを慎重に検討してください。</block>
  <block id="815a377da65ae5b66c84438c43416d82" category="paragraph">アプリケーションに共有ストレージを必要とするコンポーネント（同じ PVC にアクセスする複数のポッド）がある場合、 NAS ベースのドライバがデフォルトで選択されますが、ブロックベースの iSCSI ドライバは非共有ストレージのニーズを満たします。アプリケーションの要件と、ストレージチームとインフラチームの快適さレベルに基づいてプロトコルを選択してください。一般的に、ほとんどのアプリケーションでは両者の違いはほとんどないため、共有ストレージ（複数のポッドで同時にアクセスする必要がある場合）が必要かどうかに基づいて判断することがよくあります。</block>
  <block id="3e5fda6b2fdf8b78a529ee58e0289c8d" category="paragraph">ONTAP バックエンドの 5 つのドライバを次に示します。</block>
  <block id="c2c889ded63fbe94cf7f1d5fe4747b2d" category="list-text">[ONTAP-NAS] ：プロビジョニングされた各 PV は、フル ONTAP FlexVol です。</block>
  <block id="9418583a1b7e700d24bcc735aa4682b5" category="list-text">「 ONTAP-NAS-エコノミー 」：プロビジョニングされた各 PV は qtree で、 FlexVol あたりの qtree 数を設定できます（デフォルトは 200 ）。</block>
  <block id="bc8f11db54909209ba09d55ee0b46990" category="list-text">「 ONTAP-NAS-flexgroup 」：フル ONTAP FlexGroup としてプロビジョニングされた各 PV と、 SVM に割り当てられたすべてのアグリゲートが使用されます。</block>
  <block id="5e587346b7a212ee6429303276a1578b" category="list-text">「 ONTAP - SAN 」：プロビジョニングされた各 PV は、固有の FlexVol 内の LUN です。</block>
  <block id="85f6f5093b037b5bde3201d8136ee585" category="list-text">「 ONTAP-SAN-エコノミー 」：各 PV がプロビジョニングされた LUN で、 FlexVol あたりの LUN 数を設定できます（デフォルトは 100 ）。</block>
  <block id="f1d8371af632688748db007c98766ded" category="paragraph">3 つの NAS ドライバの間で選択すると、アプリケーションで使用できる機能にいくつかの影響があります。</block>
  <block id="8a1187760a2c55e422a454a64e160291" category="paragraph">次の表では、 Astra Trident からすべての機能が提供されるわけではありません。一部の機能は、プロビジョニング後にストレージ管理者が適用する必要があります。上付き文字の脚注は、機能やドライバごとに機能を区別します。</block>
  <block id="6252699c8e049f40eaf187092727a531" category="cell">ONTAP NAS ドライバ</block>
  <block id="9147e5e61a7b9260dec09f3a6eb3e5be" category="cell">Snapshot</block>
  <block id="999cc42b236c7aee1157ff02d6f1bcd5" category="cell">クローン</block>
  <block id="13bc190bfed9f972b3e33e3656737cdd" category="cell">動的なエクスポートポリシー</block>
  <block id="ab0c646b4c5e36d9bcf8239d97fd1843" category="cell">マルチアタッチ</block>
  <block id="8f2db90dd4a6fbd95ba8f0bc54fd6b27" category="cell">QoS</block>
  <block id="9d723d04c40bfd81835c0766a698cf63" category="cell">サイズ変更</block>
  <block id="8c340dc334134096f68b880b42a8692c" category="cell">レプリケーション</block>
  <block id="00055dac2ba112b87a95a368075b9561" category="cell">「 ONTAP - NAS 」</block>
  <block id="6bfc395e3d384b30d9f43ca45b1eeff7" category="cell">○脚注： 5[]</block>
  <block id="7c078cb746c3dd22969c07747fd7f3fc" category="cell">○脚注： 1[]</block>
  <block id="cecdaed309330a9e7dea16b2076957ee" category="cell">「 ONTAP - NAS - エコノミー」</block>
  <block id="e4e9da2a7bd5e2b5b29c51299a1b787f" category="cell">○脚注： 3[]</block>
  <block id="2b8ac774302bd45e0ad531e434d8cd6d" category="cell">「 ONTAP-NAS-flexgroup 」</block>
  <block id="bafd7322c6e97d25b6299b5d6fe8920b" category="cell">いいえ</block>
  <block id="15861eb7768c6587d321b6010008930e" category="paragraph">Astra Trident は、 ONTAP 向けに 2 つの SAN ドライバを提供しています。このドライバの機能は次のとおりです。</block>
  <block id="f916141465c67326e5d7d980bff2880b" category="cell">ONTAP SAN ドライバ</block>
  <block id="4f546cdc5f90f7d264cde89d14c6e015" category="cell">双方向 CHAP</block>
  <block id="cd17e7ed84c40a0ff5ecb8b625b1f186" category="cell">「 ontap - san 」</block>
  <block id="e78e01b4457814be0584f80618e4659a" category="cell">○脚注： 4[]</block>
  <block id="73b781a615cea2647a87ff2035e296b1" category="cell">「 ONTAP - SAN - エコノミー」</block>
  <block id="708ee6a923f9b4b3f2213d57632eaadc" category="verse-content-simple">上記の表の脚注： 1 [ ]:Astra Trident 脚注で管理されていません。 2[ ]:Astra Trident で管理されていますが、 PV レベルの細かい脚注ではできません。説明： 4[] ： Raw ブロックボリュームの脚注： 5 [ ]Trident でサポートされています。 CSI でサポートされています</block>
  <block id="74b4b41be17ac9897921032dfd4e94a8" category="paragraph">PV に細分化されていない機能は FlexVol 全体に適用され、 PVS （共有 FlexVol 内の qtree または LUN ）にはすべて共通のスケジュールが適用されます。</block>
  <block id="b483d59c54aea739f0806cf2f30c057e" category="paragraph">上の表に示すように 'ONTAP-NAS' と「 ONTAP-NAS-エコノミー 」の機能の多くは同じですしかし 'ONTAP-NAS-エコノミー のドライバは ' スケジュールを PV 単位で制御する機能を制限するため ' これは特に災害復旧やバックアップ計画に影響を与える可能性がありますONTAP ストレージ上で PVC クローン機能を活用したい開発チームの場合 ' これは 'ONTAP-NAS' ONTAP -SAN' または ONTAP -SAN' のいずれかのドライバを使用する場合にのみ可能です</block>
  <block id="45f7f2e55c0930a28d1a9e481e602a09" category="admonition">「 olidfire -san 」ドライバは PVC のクローン作成にも対応しています。</block>
  <block id="5ea8a1263c170a1b26153c03919a84f2" category="section-title">Cloud Volumes ONTAP のバックエンドドライバを選択します</block>
  <block id="20743b3fe5b4d69360557b02168b12ea" category="paragraph">Cloud Volumes ONTAP は、ファイル共有や NAS および SAN プロトコル（ NFS 、 SMB / CIFS 、 iSCSI ）を提供するブロックレベルストレージなど、さまざまなユースケースでデータ制御とエンタープライズクラスのストレージ機能を提供します。Cloud Volume ONTAP の互換性のあるドライバは、「 ONTAP-NAS' 」、「 ONTAP-NAS-エコノミー 」、「 ONTAP-SAN' 」、「 ONTAP-SAN-エコノミー 」です。Cloud Volume ONTAP for AWS 、 Cloud Volume ONTAP for Azure 、 Cloud Volume ONTAP for GCP に該当します。</block>
  <block id="6b1a08ddb7e74488a9039997d4961ff8" category="section-title">Amazon FSX for ONTAP のバックエンドドライバを選択します</block>
  <block id="168b96624733268bb4b4ebfbebea0449" category="paragraph">Amazon FSX for ONTAP を使用すると、お客様は使い慣れたネットアップの機能、パフォーマンス、管理機能を活用しながら、 AWS にデータを格納する際のシンプルさ、即応性、セキュリティ、拡張性を活用できます。FSX for ONTAP は、 ONTAP のファイルシステム機能と管理 API の多くをサポートしています。Cloud Volume ONTAP の互換性のあるドライバは、「 ONTAP-NAS' 」、「 ONTAP-NAS-エコノミー 」、「 ONTAP-NAS-flexgroup 」、「 ONTAP-SAN' 」、「 ONTAP-SAN-エコノミー 」です。</block>
  <block id="d0030e26d7e1baf13ad36649449f3689" category="section-title">NetApp HCI / SolidFire のバックエンドドライバを選択します</block>
  <block id="e040ac9827d856d3ad8ae9ac0da92295" category="paragraph">NetApp HCI / SolidFire プラットフォームで使用される「 olidfire -SAN」 ドライバは、管理者が QoS 制限に基づいて Trident の Element バックエンドを構成するのに役立ちます。Trident によってプロビジョニングされるボリュームに特定の QoS 制限を設定するためにバックエンドを設計する場合は、バックエンドファイルの「 type 」パラメータを使用します。管理者は 'limitVolumeSize' パラメータを使用して ' ストレージ上に作成できるボリューム・サイズを制限することもできます現在、ボリュームのサイズ変更やボリュームのレプリケーションなどの Element ストレージ機能は、 'olidfire-san' ドライバではサポートされていません。これらの処理は、 Element ソフトウェアの Web UI から手動で実行する必要があります。</block>
  <block id="77e9d6f249e4626d5b5c3aec863459d3" category="cell">SolidFire ドライバ</block>
  <block id="9ef2bbb12ff72558472202561a25058d" category="cell">CHAP</block>
  <block id="57ee8ed0b2796ea5f35b10f9ae5d68cd" category="cell">「 olidfire -san 」</block>
  <block id="0929973a1c9993903f6193add75b3fcf" category="cell">○脚注： 2 []</block>
  <block id="bccbad684880808562152ac1d82d7b73" category="verse-content-simple">脚注：はい脚注： 1[] ： Astra Trident で管理されていません。 * 注： 2[] ：未フォーマットのブロックボリュームでサポートされています</block>
  <block id="bb1da85f123c0dbedeb19d1f5c676112" category="section-title">Azure NetApp Files のバックエンドドライバを選択します</block>
  <block id="657e0fa57d574227dd7520919f55ff92" category="paragraph">Astra Trident は、「 azure-NetApp-files 」ドライバを使用してを管理します <block ref="d617d79fbb5ee3bc8bd280353eeb1349" category="inline-link-macro-rx"></block> サービス</block>
  <block id="1f65578a7accdff5ca6ff9f8dc42d9c6" category="inline-link-macro">Azure NetApp Files 向けの Trident バックエンド構成</block>
  <block id="e4eb3683baaad2a9ce9e264a37fb519e" category="paragraph">このドライバの詳細と設定方法については、を参照してください <block ref="452e5754c64fc2b52b13e03114bfeff6" category="inline-link-macro-rx"></block>。</block>
  <block id="4da613089cbda3d7c19cb4b3f67c1f5d" category="cell">Azure NetApp Files ドライバ</block>
  <block id="8098b34f582537833b36b58273c3545b" category="cell">を展開します</block>
  <block id="e228843381960c06d1035c4219901307" category="cell">「 azure-NetApp-files 」と入力します</block>
  <block id="2fdc8a66565228c15d355a7849997337" category="verse-content-simple">脚注：はい脚注： 1[] ： Astra Trident で管理されていません</block>
  <block id="08a2e51877cfee5806cf83c6d30fbefe" category="section-title">AWS を使用する Cloud Volumes Service のバックエンドドライバを選択します</block>
  <block id="01d0b26a2d16d5fb475e224d7705b56d" category="paragraph">Astra Trident は、「 aws -cvs 」ドライバを使用して、 AWS バックエンドの Cloud Volumes Service とリンクします。Trident で AWS バックエンドを構成するには、バックエンドファイルに「 apiRegion 」、「 apiURL 」、「 apiKey 」、「 ecretKey 」を指定する必要があります。これらの値は、 CVS Web ポータルのアカウント設定 / API アクセスで確認できます。サポートされているサービス・レベルは 'tandard'premium'extreme などの CVS に合わせて調整されています現在、プロビジョニングする最小ボリュームサイズは 100G です。今後の CVS リリースでは、この制限が解除される可能性があります。</block>
  <block id="f5619cf78c5af29a1223fb34ef1361ce" category="cell">CVS for AWS ドライバ</block>
  <block id="b69ca6e3662048fc46e2e4f8adc185a1" category="cell">「 aws -cvs 」</block>
  <block id="c7fdaa4c02d33ea744bd0e39a9e89956" category="paragraph">「 aws -cvs 」ドライバは仮想ストレージプールを使用します。仮想ストレージプールはバックエンドを抽象化し、 Trident がボリュームの配置を決定できるようにします。管理者が backend.json ファイルに仮想ストレージプールを定義します。ストレージクラスは、ラベルを使用する仮想ストレージプールを識別します。</block>
  <block id="88d040295b5885489339e969bf92517c" category="section-title">GCP で Cloud Volumes Service のバックエンドドライバを選択します</block>
  <block id="1d326a2a7f267c800fe3eafb89e5c7cd" category="inline-link-macro">サービスタイプ</block>
  <block id="f888f12905dbaabc09dd3e50073d862f" category="paragraph">Astra Trident は、 GCP バックエンドの Cloud Volumes Service とリンクするために、「 gcp-cvs` ドライバ」を使用します。Trident で GCP バックエンドを構成するには、バックエンドファイルで「 ProjectNumber 」、「 apiRegion 」、「 apiKey 」を指定する必要があります。プロジェクト番号は GCP Web ポータルで確認できますが、 GCP で Cloud Volume の API アクセスを設定する際に作成したサービスアカウントの秘密鍵ファイルから API キーを取得する必要があります。Astra Trident なら、 CVS ボリュームを 2 つのうちの 1 つで作成できます <block ref="a3cd55e5a9ff014b76f6953040234c24" category="inline-link-macro-rx"></block>：</block>
  <block id="3481817b04a40b0420a940c0c9c1f82d" category="list-text">* CVS * ：基本 CVS サービスのタイプ。パフォーマンスレベルが限定的か中程度かに関係なく、高ゾーンの可用性を実現します。</block>
  <block id="19de6287eaf342572d94a5e0b99c2823" category="list-text">* CVS - パフォーマンス * ：パフォーマンスを重視する本番環境のワークロードに最適な、パフォーマンスに最適化されたサービスタイプ。独自の 3 つのサービス・レベル（「標準」、「プレミアム」、「エクストリーム」）から選択できます。現在、プロビジョニングする CVS パフォーマンスボリュームの最小サイズは 100GiB で、 CVS ボリュームは 300GiB 以上である必要があります。今後の CVS リリースでは、この制限が解除される可能性があります。</block>
  <block id="4525f6e1d5124cd80f38341d78e8a67d" category="inline-link-macro">このフォーム</block>
  <block id="51e6e54f894aa900f8a1822598ef3c5a" category="admonition">デフォルトの CVS サービスタイプ [`torageClass=software`] を使用してバックエンドを導入する場合、ユーザ * は該当するプロジェクト番号とプロジェクト ID について GCP の 1TiB サブボリューム機能へのアクセス * を取得する必要があります。これは Trident で sub-1TiB ボリュームのプロビジョニングに必要です。そうでない場合、ボリュームの作成に失敗します。 PVC が 600 GiB 未満の場合。使用 <block ref="0c921b807a9a638a24dd843d24ed0800" category="inline-link-macro-rx"></block> 1TiB 未満のボリュームへのアクセス権を取得するため。</block>
  <block id="6219f23a135db2efc679d38117420cf0" category="cell">CVS for GCP ドライバ</block>
  <block id="949a374fc5a78d436e3067ee2de19cbe" category="cell">「 gcp-cvs 」</block>
  <block id="439d990c21037b37b51c4373a7aa9811" category="paragraph">「 gcp-cvs 」ドライバは仮想ストレージプールを使用します。仮想ストレージプールはバックエンドを抽象化し、 Astra Trident がボリュームの配置を決定できるようにします。管理者が backend.json ファイルに仮想ストレージプールを定義します。ストレージクラスは、ラベルを使用する仮想ストレージプールを識別します。</block>
  <block id="3af6198d49c40c18f13c73c5ce15cf34" category="section-title">ストレージクラスの設計</block>
  <block id="388bdf78cbb5b6bf4248ddf5613f7cc3" category="paragraph">Kubernetes ストレージクラスオブジェクトを作成するには、個々のストレージクラスを設定して適用する必要があります。このセクションでは、アプリケーション用のストレージクラスの設計方法について説明します。</block>
  <block id="964c7dcda39ec7b9c8717c3369e2fc25" category="section-title">特定のバックエンド使用率に対応したストレージクラスの設計</block>
  <block id="a09acd5f665bdf96b6dce47f8d4265e3" category="paragraph">フィルタリングは、特定のストレージクラスオブジェクト内で使用でき、そのストレージクラスで使用するストレージプールまたはプールのセットを決定します。ストレージクラスでは '`toragePools'additionalStoragePools'excludeStoragePools'' の 3 セットのフィルタを設定できます</block>
  <block id="fc01760e8c283c2f128543ae8b8a67cc" category="paragraph">'toragePools' パラメータは ' 指定した属性に一致するプールのセットにストレージを制限するのに役立ちます「 additionalStoragePools 」パラメータは、 Astra Trident がプロビジョニングに使用する一連のプールと、属性と「 toragePools 」パラメータで選択した一連のプールを拡張するために使用されます。どちらか一方のパラメータを単独で使用することも、両方を使用して、適切なストレージプールセットが選択されていることを確認することもできます。</block>
  <block id="74476e892d2681775eb41ec00a11e8da" category="paragraph">excludeStoragePools' パラメータを使用して ' 属性に一致するプールの一覧を除外します</block>
  <block id="072c88043b516dbbbadd8bb0182445c7" category="section-title">QoS ポリシーをエミュレートするストレージクラスの設計</block>
  <block id="ab807e6bd2f9cb9872eed98161bdd4e1" category="paragraph">ストレージクラスを設計して Quality of Service ポリシーをエミュレートする場合は ' 「メディア」属性を「 hdd 」または「 sd 」として ' ストレージクラスを作成しますストレージクラスで言及されている「メディア」属性に基づいて、 Trident は「 hdd 」アグリゲートまたは「 sd 」アグリゲートにメディア属性と一致させる適切なバックエンドを選択し、ボリュームのプロビジョニングを特定のアグリゲートに誘導します。したがって、「メディア」属性が「 SD 」に設定されているストレージクラス Premium を作成して、プレミアム QoS ポリシーに分類できます。メディア属性を「 hdd 」に設定し、標準の QoS ポリシーとして分類できる、別のストレージクラス標準を作成できます。また、ストレージクラスの「 IOPS 」属性を使用して、 QoS ポリシーとして定義できる Element アプライアンスにプロビジョニングをリダイレクトすることもできます。</block>
  <block id="eb47104f276a8955680299ff2f4bd39d" category="section-title">特定の機能に基づいてバックエンドを利用するストレージクラスの設計</block>
  <block id="0bc0e72aefbf8f8ec0b28cc0486f98a2" category="paragraph">ストレージクラスは、シンプロビジョニングとシックプロビジョニング、 Snapshot 、クローン、暗号化などの機能が有効になっている特定のバックエンドでボリュームを直接プロビジョニングするように設計できます。使用するストレージを指定するには、必要な機能を有効にしてバックエンドに適したストレージクラスを作成します。</block>
  <block id="f45e814b7c305f5341f031df78bf2f07" category="section-title">仮想ストレージプールのストレージクラス設計</block>
  <block id="bd755d43092fcea772b8e9ab21e9951e" category="paragraph">Virtual Storage Pool は、すべての Astra Trident バックエンドで利用可能Trident が提供する任意のドライバを使用して、任意のバックエンドに対して仮想ストレージプールを定義できます。</block>
  <block id="365b4529a5f01ced729944db23d237a5" category="paragraph">仮想ストレージプールを使用すると、管理者はストレージクラスで参照可能なバックエンド経由で抽象化レベルを作成して、バックエンドにボリュームを柔軟かつ効率的に配置できます。同じサービスクラスを使用して異なるバックエンドを定義できます。さらに、同じバックエンドに異なる特性を持つ複数のストレージプールを作成することもできます。セレクタで特定のラベルを設定したストレージクラスがある場合、 Astra Trident は、ボリュームを配置するすべてのセレクタラベルに一致するバックエンドを選択します。ストレージクラスセレクタのラベルが複数のストレージプールに一致する場合、 Astra Trident がボリュームのプロビジョニングに使用するストレージクラスを 1 つ選択します。</block>
  <block id="830a7882918fba200333b9c6ea7db363" category="section-title">Virtual Storage Pool Design の略</block>
  <block id="65f970319bb8b6ede33a2d975be3693d" category="paragraph">バックエンドの作成時に、一般に一連のパラメータを指定できます。管理者が、同じストレージクレデンシャルと異なるパラメータセットを使用して別のバックエンドを作成することはできませんでした。この問題は、仮想ストレージプールの導入に伴って、軽減されています。仮想ストレージプールは、バックエンドと Kubernetes ストレージクラスの間に抽象化されたレベルです。管理者は、 Kubernetes ストレージクラスを介してパラメータとラベルを定義でき、セレクタとしてバックエンドに依存しない方法で参照できます。Virtual Storage Pools は、サポート対象のすべてのネットアップバックエンドに Astra Trident を使用して定義できます。リストには、 SolidFire / NetApp HCI 、 ONTAP 、 AWS と GCP 上の Cloud Volumes Service 、 Azure NetApp Files が含まれます。</block>
  <block id="3c4f3a478663d0f7aab5180da0b1356a" category="admonition">仮想ストレージプールを定義する場合は、バックエンド定義内の既存の仮想プールの順序を変更しないことを推奨します。また、既存の仮想プールの属性を編集または変更したり、新しい仮想プールを定義したりしないことを推奨します。</block>
  <block id="d96c9f641b35ec82dabdc46092afe1d0" category="section-title">さまざまなサービスレベル / QoS をエミュレートするための仮想ストレージプールを設計します</block>
  <block id="9e44f014bb0976e50892e95fed1ed5b5" category="paragraph">サービスクラスをエミュレートするための仮想ストレージプールを設計することができます。Cloud Volume Service for AWS の仮想プール実装を使用して、さまざまなサービスクラスをセットアップする方法を見ていきましょう。パフォーマンスレベルが異なる複数のラベルで AWS と CVS バックエンドを設定します。「高度」のアスペクトを適切なパフォーマンスレベルに設定し、各ラベルの下にその他の必要な側面を追加します。では、別の仮想ストレージプールにマッピングする別の Kubernetes ストレージクラスを作成します。parameters.selector` フィールドを使用すると ' 各 StorageClass は ' ボリュームのホストに使用できる仮想プールを呼び出します</block>
  <block id="85d73d477f633146bd32af7aaedd54da" category="section-title">特定の側面を割り当てるための仮想プールを設計します</block>
  <block id="c011d5d6ca18de1df954b81c6bb49d4a" category="paragraph">特定の側面を持つ複数の仮想ストレージプールは、単一のストレージバックエンドから設計できます。そのためには、バックエンドに複数のラベルを設定し、各ラベルに必要な側面を設定します。次に ' 異なる仮想ストレージ・プールにマップされる parameters.selector` フィールドを使用して ' 異なる Kubernetes ストレージ・クラスを作成しますバックエンドでプロビジョニングされるボリュームには、選択した仮想ストレージプールに定義された設定が適用されます。</block>
  <block id="421f7dd5bb37a6401aa6326ad33dae20" category="section-title">ストレージプロビジョニングに影響する PVC 特性</block>
  <block id="3800921d8c248cc0de59c64d110e570a" category="paragraph">要求されたストレージクラスを超えたパラメータの一部は、 PVC の作成時に Astra Trident のプロビジョニング決定プロセスに影響を与える可能性があります。</block>
  <block id="5ab83f35784f154d55ea7ab58c8e503b" category="section-title">アクセスモード</block>
  <block id="f3882c83b41b76a9fac2c57407f3ac2b" category="paragraph">PVC 経由でストレージを要求する場合、必須フィールドの 1 つがアクセスモードです。必要なモードは、ストレージ要求をホストするために選択されたバックエンドに影響を与える可能性があります。</block>
  <block id="b72ab56468fdf0df298a89c3339b82c0" category="paragraph">Astra Trident は、次のマトリックスで指定されたアクセス方法で使用されているストレージプロトコルと一致するかどうかを試みます。これは、基盤となるストレージプラットフォームに依存しません。</block>
  <block id="cac415feda213697b27d3b6fce10d33a" category="cell">ReadWriteOnce コマンドを使用します</block>
  <block id="c24ad3d99a666c95edd149419c958ee0" category="cell">ReadOnlyMany</block>
  <block id="caa8dc1f4bb28d2d11226494cd05a123" category="cell">ReadWriteMany</block>
  <block id="e4e1c13bb0b14f6cb7608cbecea948ef" category="cell">iSCSI</block>
  <block id="cefb8ccdebef1940174b22e9d0ab530b" category="cell">○（ Raw ブロック）</block>
  <block id="1d1a594959ec615f56516f5d0f5e8ddb" category="cell">NFS</block>
  <block id="823f2153adc2211a0777560eafdcbad6" category="paragraph">NFS バックエンドが設定されていない Trident 環境に送信された ReadWriteMany PVC が要求された場合、ボリュームはプロビジョニングされません。このため、リクエスタは、アプリケーションに適したアクセスモードを使用する必要があります。</block>
  <block id="5a51acb2538e54805c54d37ebb49c75d" category="section-title">ボリューム操作</block>
  <block id="26fad327e23b6b08dcc94300bfe1ed04" category="section-title">永続ボリュームの変更</block>
  <block id="3b69d471bb98837ae6e267593bb38882" category="paragraph">永続ボリュームとは、 Kubernetes で変更不可のオブジェクトを 2 つだけ除いてです。再利用ポリシーとサイズは、いったん作成されると変更できます。ただし、これにより、ボリュームの一部の側面が Kubernetes 以外で変更されることが防止されるわけではありません。特定のアプリケーション用にボリュームをカスタマイズしたり、誤って容量が消費されないようにしたり、何らかの理由でボリュームを別のストレージコントローラに移動したりする場合に便利です。</block>
  <block id="f82b5505d8def4abda0bec52275bd411" category="admonition">Kubernetes のツリー内プロビジョニングツールは、現時点では NFS または iSCSI PVS のボリュームサイズ変更処理をサポートしていません。Astra Trident では、 NFS ボリュームと iSCSI ボリュームの両方の拡張がサポートされています。</block>
  <block id="b1d1874782626fe3f391628ea493e6ef" category="paragraph">作成後に PV の接続の詳細を変更することはできません。</block>
  <block id="e68591655c8031177206e1e75728853f" category="section-title">オンデマンドのボリューム Snapshot を作成</block>
  <block id="f557ce2b38683c13c1c1a070ce58a33d" category="paragraph">Astra Trident は、 CSI フレームワークを使用して、オンデマンドでボリュームスナップショットを作成し、スナップショットから PVC を作成できます。Snapshot は、データのポイントインタイムコピーを管理し、 Kubernetes のソース PV とは無関係にライフサイクルを管理する便利な方法です。これらの Snapshot を使用して、 PVC をクローニングできます。</block>
  <block id="f007c56a8eb121e8a696105e69aefa68" category="section-title">Snapshot からボリュームを作成します</block>
  <block id="e005d448313cdc2848d923f4c754e467" category="paragraph">Astra Trident は、ボリューム Snapshot からの PersistentVolumes の作成もサポートしています。これを実現するには、 PersistentVolumeClaim を作成し、ボリュームを作成する必要のある Snapshot として「ソース」を指定します。Astra Trident がこの PVC を処理するには、 Snapshot にデータが存在するボリュームを作成します。この機能を使用すると、複数のリージョン間でデータを複製したり、テスト環境を作成したり、破損した本番ボリューム全体を交換したり、特定のファイルとディレクトリを取得して別の接続ボリュームに転送したりできます。</block>
  <block id="55a3309b0b6646e0ea6b47195bd3d4bd" category="section-title">クラスタ内でボリュームを移動します</block>
  <block id="925b814524908630c07d45fc5a80028a" category="paragraph">ストレージ管理者は、 ONTAP クラスタ内のアグリゲート間およびコントローラ間で、ストレージ利用者への無停止でボリュームを移動できます。この処理は、デスティネーションアグリゲートが Trident が使用している SVM からアクセス可能なアグリゲートであるかぎり、 Astra Trident または Kubernetes クラスタには影響しません。この点が重要なのは、アグリゲートが SVM に新たに追加された場合、 Astra Trident に再追加してバックエンドを更新する必要があることです。これにより、 Astra Trident が SVM のインベントリを再作成し、新しいアグリゲートが認識されるようになります。</block>
  <block id="033dcaefcc578c987d32d4bdb6f6b1e2" category="paragraph">ただし、バックエンド間でのボリュームの移動は Astra Trident では自動ではサポートされていません。これには、同じクラスタ内の SVM 間、クラスタ間、または別のストレージプラットフォーム上の SVM 間が含まれます（たとえストレージシステムが Trident から Astra に接続されている場合でも）。</block>
  <block id="302be77289f337115411c01846d9a489" category="paragraph">ボリュームが別の場所にコピーされた場合、ボリュームインポート機能を使用して現在のボリュームを Astra Trident にインポートできます。</block>
  <block id="2243e252be826d6ec5e767668d9f961d" category="section-title">ボリュームを展開します</block>
  <block id="a059bca2035a0befa11f641fdabde223" category="paragraph">Astra Trident は、 NFS と iSCSI PVS のサイズ変更をサポートしています。これにより、ユーザは Kubernetes レイヤを介してボリュームのサイズを直接変更できます。ボリュームを拡張できるのは、 ONTAP 、 SolidFire / NetApp HCI 、 Cloud Volumes Service バックエンドなど、主要なすべてのネットアップストレージプラットフォームです。後で拡張できるようにするには ' ボリュームに関連づけられたストレージ・クラスで 'allowVolumeExpansion を true に設定します永続ボリュームのサイズを変更する必要がある場合は、 Persistent Volume Claim の「 PEC.resources.request.storage 」注釈を必要なボリュームサイズに編集します。Trident が、ストレージクラスタ上のボリュームのサイズ変更を自動的に処理します。</block>
  <block id="40a28a40c11a193f8911cf4143a6ae6a" category="section-title">既存のボリュームを Kubernetes にインポートする</block>
  <block id="911dcebca8f00bd038d697c0c5b9f99d" category="paragraph">Volume Import では、既存のストレージボリュームを Kubernetes 環境にインポートできます。これは現在、「 ONTAP-NAS' 」、「 ONTAP-NAS-flexgroup 」、「 olidfire -san 」、「 azure-NetApp-files 」、「 aws -cvs 」によってサポートされています。 ドライバは「 gcp-cvs 」です。この機能は、既存のアプリケーションを Kubernetes に移植する場合や、ディザスタリカバリシナリオで使用する場合に便利です。</block>
  <block id="5d9f64103cac7a58da69304bc3320e98" category="paragraph">ONTAP ドライバと 'olidfire-san`drivers を使用する場合は 'tridentctl import volume &lt;backend-name&gt;&lt;volume-name&gt;&lt;f/path/pvc.yaml コマンドを使用して 'Astra Trident で管理する既存のボリュームを Kubernetes にインポートしますimport volume コマンドで使用した PVC YAML または JSON ファイルは、 Astra Trident をプロビジョニングツールとして識別するストレージクラスを指定します。NetApp HCI / SolidFire バックエンドを使用する場合は、ボリューム名が一意であることを確認してください。ボリューム名が重複している場合は、ボリュームインポート機能で区別できるように、ボリュームを一意の名前にクローニングします。</block>
  <block id="5c7a693958891a764b947da44bbeb122" category="paragraph">「 aws -cvs 」、「 azure-NetApp-files 」、または「 gcp-cvs` ドライバが使用されている場合は、「 tridentctl import volume &lt;backend-name&gt; &lt;volume path&gt; -f /path/pvc.yaml 」コマンドを使用して、 Astra Trident で管理する Kubernetes にボリュームをインポートします。これにより、ボリューム参照が一意になります。</block>
  <block id="cb619cd0109686b5f82562b63e44a107" category="paragraph">上記のコマンドを実行すると、 Astra Trident がバックエンド上にボリュームを検出し、サイズを確認します。設定された PVC のボリュームサイズが自動的に追加（必要に応じて上書き）されます。次に Astra Trident が新しい PV を作成し、 Kubernetes が PVC を PV にバインド</block>
  <block id="3a8b25f50e2dcc298175abc8f6a71f82" category="paragraph">特定のインポートされた PVC を必要とするようにコンテナを導入した場合、ボリュームインポートプロセスによって PVC/PV ペアがバインドされるまで、コンテナは保留状態のままになります。PVC/PV ペアがバインドされると、他に問題がなければコンテナが起動します。</block>
  <block id="41603705958b86c3ec4ff21cfce13a5b" category="section-title">OpenShift サービスを導入します</block>
  <block id="7e3c623b48b608f4c6380c2994ae5aa9" category="paragraph">OpenShift の付加価値クラスタサービスは、クラスタ管理者とホストされているアプリケーションに重要な機能を提供します。これらのサービスが使用するストレージはノードローカルリソースを使用してプロビジョニングできますが、これにより、サービスの容量、パフォーマンス、リカバリ性、持続可能性が制限されることがよくあります。エンタープライズストレージアレイを活用してこれらのサービスに容量を提供することで、劇的に向上したサービスを実現できます。ただし、すべてのアプリケーションと同様に、 OpenShift とストレージ管理者は、緊密に連携してそれぞれに最適なオプションを決定する必要があります。Red Hat のドキュメントは、要件を決定し、サイジングとパフォーマンスのニーズを確実に満たすために大きく活用する必要があります。</block>
  <block id="6dd8f6c286b8e1a8c96c6309099f0003" category="section-title">レジストリサービス</block>
  <block id="68ee1c4c0da20bfd1e946df20351d4b9" category="inline-link-macro">netapp.io のコマンドです</block>
  <block id="126ac9f6149081eb0e97c2e939eaad52" category="inline-link-macro">ブログ</block>
  <block id="34d357a7f8cc47e860d5fb0a317cf22d" category="paragraph">レジストリのストレージの導入と管理については、に記載されています <block ref="d5e1883ebd095c0eda96c44469e8197d" category="inline-link-macro-rx"></block> を参照してください <block ref="ceb73d0582d40281d79011a1e5343e89" category="inline-link-macro-rx"></block>。</block>
  <block id="62ac236856a5a6aefd15133e967514c6" category="section-title">ロギングサービス</block>
  <block id="2f3052b6a2858bec8355ec56150f6a38" category="paragraph">他の OpenShift サービスと同様に、ログ記録サービスは、 Ansible と、インベントリファイル（別名）で提供される構成パラメータを使用して導入されますホスト。プレイブックに含まれています。ここでは、 OpenShift の初期インストール時にロギングを導入し、 OpenShift のインストール後にロギングを導入するという、 2 つのインストール方法について説明します。</block>
  <block id="541c717d8d2998609c0970b5e43c7401" category="admonition">Red Hat OpenShift バージョン 3.9 以降、データ破損に関する懸念があるため、記録サービスに NFS を使用しないことを公式のドキュメントで推奨しています。これは、 Red Hat 製品のテストに基づいています。ONTAP の NFS サーバにはこのような問題はなく、簡単にロギング環境をバックアップできます。ロギングサービスには最終的にどちらかのプロトコルを選択する必要がありますが、両方のプロトコルがネットアッププラットフォームを使用する場合に適していることと、 NFS を使用する理由がないことを確認してください。</block>
  <block id="57cad4852c9c2e439f61728e0391fe7b" category="paragraph">ロギング・サービスで NFS を使用する場合は、インストーラが失敗しないように、 Ansible 変数「 OpenShift 」の「 OpenShift 」 enable_unsupported _configurations 」を「 true 」に設定する必要があります。</block>
  <block id="be11c74c1dd7f307bb80183a90dc2067" category="section-title">はじめに</block>
  <block id="16e90b2336fdfec64b19194247422194" category="paragraph">ロギングサービスは、必要に応じて、両方のアプリケーションに導入することも、 OpenShift クラスタ自体のコア動作に導入することもできます。オペレーション・ログを配置する場合 ' 変数 OpenShift の logging_use_ops を true として指定すると ' サービスの 2 つのインスタンスが作成されます操作のロギングインスタンスを制御する変数には「 ops 」が含まれ、アプリケーションのインスタンスには含まれません。</block>
  <block id="a9ccaa810b97a00e75bb1ea4100d0a9f" category="paragraph">導入方法に基づいて Ansible 変数を設定することは、基盤のサービスが正しいストレージを利用できるようにするために重要です。各導入方法のオプションを見てみましょう。</block>
  <block id="c5c09113a6a6ae4b75868a9e96ea3cc3" category="inline-link-macro">Red Hat OpenShift のロギングに関するドキュメント</block>
  <block id="bc468c28ba57dbcb58de37265cd02436" category="admonition">以下の表には、ロギングサービスに関連するストレージ構成に関連する変数のみが含まれています。その他のオプションは、で確認できます <block ref="e81826ec3b15492352776daada114990" category="inline-link-macro-rx"></block> 導入環境に応じて、確認、設定、使用する必要があります。</block>
  <block id="02098b11f876fe10c40b6106bd9864da" category="paragraph">次の表の変数では、入力した詳細を使用してロギングサービスの PV と PVC を作成する Ansible プレイブックが作成されます。この方法は、 OpenShift インストール後にコンポーネントインストールプレイブックを使用するよりもはるかに柔軟性に劣るが、既存のボリュームがある場合はオプションとなります。</block>
  <block id="47c14840d8e15331fa420b9b2f757cd9" category="cell">変数（ Variable ）</block>
  <block id="3ec365dd533ddb7ef3d1c111186ce872" category="cell">詳細</block>
  <block id="9aa2fd43742cd5ed36b406b3f4b0fd8c" category="cell">「 OpenShift 」ロギング・ストレージ・タイプ</block>
  <block id="3260b06ea72e4931f5fb5106001fcc28" category="cell">インストーラがログサービス用の NFS PV を作成するように 'NFS' に設定します</block>
  <block id="e95f43173c69a9ca544d4aaef28a4d90" category="cell">「 OpenShift 」ロギング・ストレージ・ホスト</block>
  <block id="3a262c1d9bdec02b241c16b2c5f6dbbe" category="cell">NFS ホストのホスト名または IP アドレス。仮想マシンのデータ LIF に設定してください。</block>
  <block id="41aae586bb7044d7741fe9412aa81e03" category="cell">「 OpenShift 」ロギング・ストレージ・ NFS_DIRECT'</block>
  <block id="bf2d137d8c669b07aae26040c7e5c0e0" category="cell">NFS エクスポートのマウントパス。たとえば、ボリュームが「 /OpenShift _logging 」としてジャンクションされている場合、この変数にそのパスを使用します。</block>
  <block id="88a9f7d18fabb82d63ac43c64ae6e735" category="cell">「 OpenShift 」ロギング・ストレージ・ボリューム名</block>
  <block id="6f8782c23f3cb958d0de4fad76dabaed" category="cell">作成する PV の名前（「 pv_ose_logs 」など）。</block>
  <block id="789e0dc4bfc00f5c885a698d6ab34dff" category="cell">「 OpenShift 」ロギング・ストレージ・ボリューム・サイズ</block>
  <block id="b68f05ea52c8c80c07e6a4c0671c75bf" category="cell">NFS エクスポートのサイズ（例： 100Gi ）</block>
  <block id="2ab80b6965298dc6a178995bbedebe88" category="paragraph">OpenShift クラスタがすでに実行中で、そのため Trident を導入して設定した場合、インストーラは動的プロビジョニングを使用してボリュームを作成できます。次の変数を設定する必要があります。</block>
  <block id="c2aecf833d743cbc47969cd85c67101e" category="cell">'OpenShift の logging_es_vpc_dynamic</block>
  <block id="540ad9a52084720ddb7f364fa8b304c6" category="cell">動的にプロビジョニングされたボリュームを使用する場合は true に設定します。</block>
  <block id="45a481a75749c5331e7e9fd7d89e473d" category="cell">「 OpenShift logging _es_vpc_storage_class_name 」</block>
  <block id="837ffa1e281409660ed25582c5b1963f" category="cell">PVC で使用されるストレージクラスの名前。</block>
  <block id="cd3daa927272b5624e96d283365d5500" category="cell">「 OpenShift logging _es_vpc_size 」を参照してください</block>
  <block id="8f80d278a79cbc84b80a091713006022" category="cell">PVC で要求されたボリュームのサイズ。</block>
  <block id="1bb0c7eeef4bbbefae080a294fd554b0" category="cell">「 OpenShift logging _es_vpc_prefix 」を参照してください</block>
  <block id="f870ec92e294a018a17afe7a614fb5bb" category="cell">ロギングサービスで使用される PVC のプレフィックス。</block>
  <block id="e8c62e1f0f0773ae5ba6a7acad696b2d" category="cell">'OpenShift の logging_es_ops_pvc_dynamic</block>
  <block id="46e65a11ac398c02b8fce45a7cd5cf36" category="cell">動的にプロビジョニングされたボリュームを ops ロギングインスタンスに使用するには、「 true 」に設定します。</block>
  <block id="8792c7234e14325cb68c493d20ab5154" category="cell">「 OpenShift logging _es_ops_pvc_storage_class_name 」を参照してください</block>
  <block id="d016f79f0ee104f3805d61e6a379fb9b" category="cell">処理ロギングインスタンスのストレージクラスの名前。</block>
  <block id="048e768365962d7d520567f92aea8355" category="cell">'OpenShift logging _es_ops_pvc_size</block>
  <block id="bc367f89ac597585e52d0eb58a5929ae" category="cell">処理インスタンスのボリューム要求のサイズ。</block>
  <block id="155871626071d69cb283985a9f36bad2" category="cell">「 OpenShift logging _es_ops_pvc_prefix 」を参照してください</block>
  <block id="2a8f254749a466654f556c6466051133" category="cell">ops インスタンス PVC のプレフィックス。</block>
  <block id="e1b2d0d3228c29c069bcd139de306709" category="section-title">ロギングスタックを導入します</block>
  <block id="0409a0cfdfa4f3b3033503b8309442ff" category="paragraph">初期の OpenShift インストールプロセスの一部としてロギングを導入する場合、標準の導入プロセスに従うだけで済みます。Ansible は、必要なサービスと OpenShift オブジェクトを構成および導入して、 Ansible が完了したらすぐにサービスを利用できるようにします。</block>
  <block id="210ecadaccb6088b0dfbd2e6a0b5d0a0" category="inline-link-macro">Red Hat OpenShift Container Platform 3.11 のドキュメント</block>
  <block id="67f3e99678cc7c568f4ed29074cdc41c" category="paragraph">ただし、最初のインストール後に導入する場合は、コンポーネントプレイブックを Ansible で使用する必要があります。このプロセスは、 OpenShift のバージョンが異なるためわずかに変更される場合があるので、必ず読んで従うようにしてください <block ref="a2226808e95b8487c66dd3b8cbea118e" category="inline-link-macro-rx"></block> 使用しているバージョンに対応した</block>
  <block id="3dbf527ac3caf41ab150ec99a1737217" category="section-title">指標サービス</block>
  <block id="12a5438ab4c44c9ad4dec6edc191eb7a" category="paragraph">この指標サービスは、 OpenShift クラスタのステータス、リソース利用率、可用性に関する重要な情報を管理者に提供します。ポッドの自動スケール機能にも必要であり、多くの組織では、チャージバックやショーバックアプリケーションのためにメトリックサービスからのデータを使用しています。</block>
  <block id="d0ed828e153e9bad2da040ddf6ad8f45" category="paragraph">ロギングサービスや OpenShift 全体と同様に、 Ansible を使用して指標サービスを導入します。また、ロギングサービスと同様に、メトリックサービスは、クラスタの初期セットアップ時またはコンポーネントのインストール方法を使用して運用可能になった後に導入できます。次の表に、指標サービスに永続的ストレージを設定する際に重要となる変数を示します。</block>
  <block id="69aa4440020e49c654aeb910f38c6bb9" category="admonition">以下の表には、指標サービスに関連するストレージ構成に関連する変数のみが含まれています。このドキュメントには、他にも導入環境に応じて確認、設定、使用できるオプションが多数あります。</block>
  <block id="4f692d78f978a73b157571022c1d1ba7" category="cell">「 OpenShift _ metrics _ storage _kind 」</block>
  <block id="30da7e263c0cffc34933d24a07fb097a" category="cell">「 OpenShift _ metrics _storage_host 」というようになります</block>
  <block id="adba8dd7dd2b027405b815c03a05dbf1" category="cell">NFS ホストのホスト名または IP アドレス。これは SVM のデータ LIF に設定されている必要があります。</block>
  <block id="3bafc264ad2a901d3be052a7f1cf2e44" category="cell">「 OpenShift _ metrics _storage_nfs_directory 」というエラーが表示されます</block>
  <block id="459859e54ba90bc4145c54d1f1deecff" category="cell">NFS エクスポートのマウントパス。たとえば、ボリュームが「 /OpenShift メトリック」としてジャンクションされている場合は、この変数にそのパスを使用します。</block>
  <block id="ca0f0d82f9c7cbc36df652cddd4b2f35" category="cell">「 OpenShift _ metrics _storage_volume_name 」という形式で指定します</block>
  <block id="eb10d02b22b02d7f543f867b8d31e7b0" category="cell">作成する PV の名前（「 pv_ose_metrics 」など）。</block>
  <block id="a3eeeafe923ac73e75b3bf33cdadb603" category="cell">「 OpenShift _ metrics _storage_volume_size 」というようになります</block>
  <block id="a56c731cfe96d228c7c0bcc57bc80d3d" category="cell">「 OpenShift _ metrics _ cassandra_vpc_prefix 」という形式で指定します</block>
  <block id="0da919d4045e4f38d294aaec73f5d57f" category="cell">メトリック PVC に使用するプレフィックス。</block>
  <block id="15bb3eef0b42a93e324977c289f2fd85" category="cell">「 OpenShift _ metrics _ cassandra_vp_size' 」のようになります</block>
  <block id="75929c9d67f1407282b5618fca4589e7" category="cell">要求するボリュームのサイズ。</block>
  <block id="8ebb493e0ffdf7c1e850c67bc22f15c7" category="cell">「 OpenShift _ metrics _ cassandra_storage_type 」のようになります</block>
  <block id="aab0ec84a4da1dfd2b63896453f1e05d" category="cell">指標に使用するストレージのタイプ。適切なストレージクラスを使用して PVC を作成するには、 Ansible に対してこれを dynamic に設定する必要があります。</block>
  <block id="460aaf3805271ec2e5dc35755fe317b1" category="cell">「 OpenShift _ metrics _cassanda_pvc_storage_class_name 」という形式で指定します</block>
  <block id="0c55ca33e89539cd67eb0be3796547c5" category="cell">使用するストレージクラスの名前。</block>
  <block id="6c13e62eb53f29e7794d3807369299d2" category="section-title">指標サービスを導入する</block>
  <block id="3e75d51468f5a99fdb50b75dafea32e8" category="paragraph">ホスト / インベントリファイルに適切な Ansible 変数を定義して、 Ansible でサービスを導入します。OpenShift インストール時に導入する場合は、 PV が自動的に作成されて使用されます。コンポーネントプレイブックを使用して導入する場合、 OpenShift のインストール後に Ansible によって必要な PVC が作成されます。また、 Trident 用のストレージをプロビジョニングしたあとにサービスを導入します。</block>
  <block id="bf1cadd7aa4e541e255df26af5451d85" category="inline-link-macro">RedHat OpenShift 導入ガイド</block>
  <block id="eb502d6483a644e9b6f61ca4719276d8" category="paragraph">上記の変数と導入プロセスは、 OpenShift の各バージョンで変更される可能性があります。必ず見直しを行ってください <block ref="5ad72ffc1eda2c257c8947a0ad66dddb" category="inline-link-macro-rx"></block> をバージョンに合わせて設定し、環境に合わせて設定します。</block>
  <block id="d03f8f06d8317baa619ceba8c71e0be3" category="summary">NetApp のストレージ・プラットフォームが提供するデータ保護およびリカバリ機能のオプションについて説明します。Astra Trident では、こうした機能の一部を活用できるボリュームをプロビジョニングできます。永続性に関する要件があるアプリケーションごとに、完全なデータ保護とリカバリの戦略を策定しておく必要があります。</block>
  <block id="7e7397a7b79323762c61941fc0e6b5f9" category="doc">データ保護</block>
  <block id="cfee9077e497a91b77466a20f58fcdff" category="paragraph">NetApp のストレージ・プラットフォームが提供するデータ保護およびリカバリ機能のオプションについて説明します。Astra Trident では、こうした機能の一部を活用できるボリュームをプロビジョニングできます。永続性に関する要件があるアプリケーションごとに、データ保護とリカバリの戦略を用意しておく必要があります。</block>
  <block id="058d5afd2ccf1b3be426f9ad27ab2f41" category="section-title">etcd クラスタデータをバックアップします</block>
  <block id="26beed33bbef26c53a76c2b450d8092c" category="paragraph">Astra Trident は、メタデータを Kubernetes クラスタの「 etcd」 データベースに格納します。災害発生時に Kubernetes クラスタをリカバリするには 'etcd' クラスタ・データを定期的にバックアップすることが重要です</block>
  <block id="f3a29486bed19a90f2da6d007818b427" category="list-title">手順</block>
  <block id="6b8252dd799aef1e72351975d4d39231" category="list-text">etcdctl snapshot save コマンドを使用すると 'etcd' クラスタのポイント・イン・タイム・スナップショットを取得できます</block>
  <block id="54466a78f910aa9c206047e0a2afdae1" category="paragraph">このコマンドは 'etcd' コンテナをスピンアップして etcd' スナップショットを作成し '/backup' ディレクトリに保存します</block>
  <block id="1475db623f0eaa95e737c3463bae738f" category="list-text">災害が発生した場合は、 etcd Snapshot を使用して Kubernetes クラスタをスピンアップできます。etcdctl snapshot restore コマンドを使用して '/var/lib/etcdd フォルダに作成された特定のスナップショットをリストアします復元後、「 /var/lib/etcd` 」フォルダに「 member-」 フォルダが格納されているかどうかを確認します。次に 'etcdctl snapshot restore コマンドの例を示します</block>
  <block id="79ddedac8d398dd5b0c07d4319dcc009" category="list-text">Kubernetes クラスタを初期化する前に、必要な証明書をすべてコピーしておきます。</block>
  <block id="bdad273c35514cf4ff054dc686b32002" category="list-text">「 --ignore-preflight -errors=DirAvailable --var-lib-etcd` 」フラグを付けてクラスタを作成します。</block>
  <block id="6305ecb03aa7de9ef25f8415e859ea4b" category="list-text">クラスタが起動したら、 kube-system ポッドが起動していることを確認します。</block>
  <block id="8c416419987890cfcc65ea9e92da3cfa" category="list-text">「 kubectl get CRD 」コマンドを使用して、 Trident によって作成されたカスタムリソースが存在するかどうかを確認し、 Trident オブジェクトを取得して、すべてのデータが利用可能であることを確認します。</block>
  <block id="e5356885fecc2a90a54498a26b14b810" category="section-title">ONTAP スナップショットを使用して日付をリカバリします</block>
  <block id="c311aef86a7cd24a1d8755988091889b" category="paragraph">Snapshot は、アプリケーションデータのポイントインタイムリカバリオプションを提供することで重要な役割を果たします。ただし、スナップショットは単独ではバックアップされず、ストレージシステムの障害やその他の災害に対する保護は行われません。しかし、ほとんどのシナリオで、データをすばやく簡単にリカバリできる便利な方法です。ONTAP Snapshot テクノロジを使用してボリュームのバックアップを作成する方法とリストアする方法について説明します。</block>
  <block id="f0587fe4869074d7cfefe4e8bf02eaeb" category="list-text">スナップショット・ポリシーがバックエンドで定義されていない場合 ' デフォルトでは 'none' ポリシーが使用されますそのため、 ONTAP では自動 Snapshot は作成されません。ただし、ストレージ管理者は、 ONTAP 管理インターフェイスから手動で Snapshot を作成したり、 Snapshot ポリシーを変更したりできます。これは Trident の動作には影響しません。</block>
  <block id="a5198a3ff669782d450e222946ec0482" category="list-text">デフォルトでは、 snapshot ディレクトリは表示されません。これにより 'ONTAP-NAS' および ONTAP -NAS-エコノミー のドライバを使用してプロビジョニングされたボリュームの互換性を最大限に高めることができます「 ONTAP - NAS 」および「 ONTAP - NAS - エコノミー」ドライバを使用する場合は、「 .snapshot 」ディレクトリを有効にして、アプリケーションがスナップショットから直接データをリカバリできるようにします。</block>
  <block id="d34d16e8f00776a7cc63851ebd4e9395" category="list-text">volume snapshot restore ONTAP CLI コマンドを使用して ' ボリュームを以前のスナップショットに記録された状態にリストアしますSnapshot コピーをリストアすると、既存のボリューム構成は上書きされます。Snapshot コピーの作成後にボリューム内のデータに加えた変更はすべて失われます。</block>
  <block id="3225a41cc13787a78ef89153b870bffe" category="section-title">ONTAP を使用してデータをレプリケート</block>
  <block id="5bec6ef5bd67015d1da2f04dc2a24b80" category="paragraph">データのレプリケートは、ストレージアレイの障害によるデータ損失から保護する上で重要な役割を果たします。</block>
  <block id="eb75aeb3b4b2b9734ba3e52f5483f0b2" category="inline-link">ONTAP のドキュメント</block>
  <block id="40491088e02d790071b9ddbc3f95f983" category="admonition">ONTAP レプリケーションテクノロジの詳細については、を参照してください<block ref="dd7cb2553dd5eb568b9a23ce332fc9a4" category="inline-link-rx"></block>。</block>
  <block id="541959f741a3180066a37aee2adf7d01" category="section-title">SnapMirror Storage Virtual Machine （ SVM ）レプリケーション</block>
  <block id="794cb725c5631ad99b5b7c000307f0df" category="inline-link">SnapMirror</block>
  <block id="15bf9c06ed0c503c4ee904bf4b3a85a9" category="paragraph">を使用できます<block ref="a2a4907c93db22784422a1bc7047ac73" category="inline-link-rx"></block> 設定とそのボリュームを含む SVM 全体をレプリケートすること。災害が発生した場合は、 SnapMirror デスティネーション SVM をアクティブ化してデータの提供を開始できます。システムがリストアされたら、プライマリに戻すことができます。</block>
  <block id="8657190fa7a98fbc200c5c90a08cac65" category="paragraph">Astra Trident は、レプリケーション関係自体を構成できないため、ストレージ管理者は ONTAP の SnapMirror SVM レプリケーション機能を使用して、ボリュームをディザスタリカバリ（ DR ）デスティネーションに自動的にレプリケートできます。</block>
  <block id="bdb161b363522f5fc614f70c10792020" category="paragraph">SnapMirror SVM レプリケーション機能を使用する場合や、現在この機能を使用している場合は、次の点を考慮してください。</block>
  <block id="34fb9af35ab36a2cead16ad98b140441" category="list-text">SVM-DR が有効になっている SVM ごとに別個のバックエンドを作成する必要があります。</block>
  <block id="1c0b44a5294fd1ebbc8e78476cf29358" category="list-text">レプリケートされたバックエンドを必要な場合を除き選択しないようにストレージクラスを設定する必要があります。SVM DR をサポートするバックエンドにレプリケーション関係の保護をプロビジョニングする必要がないボリュームがある場合、この問題を回避することが重要です。</block>
  <block id="21f180602301e7ac5b6cce6b6b7399e9" category="list-text">アプリケーション管理者は、データのレプリケーションに伴う追加のコストと複雑さを理解し、リカバリプランを決定してから、データレプリケーションを利用する必要があります。</block>
  <block id="59b50d3d22a40bf39d0e648e2d49092c" category="list-text">SnapMirror デスティネーション SVM をアクティブ化する前に、スケジュールされたすべての SnapMirror 転送を停止し、実行中のすべての SnapMirror 転送を中止してレプリケーション関係を解除し、ソース SVM を停止してから、 SnapMirror デスティネーション SVM を起動します。</block>
  <block id="7cf7bfd0b57a375894c362efd521d4a6" category="list-text">Astra Trident では、 SVM の障害は自動では検出されない。したがって、失敗した場合、管理者は tridentctl backend update コマンドを実行して、新しいバックエンドへの Trident のフェイルオーバーをトリガーする必要があります。</block>
  <block id="1904adbabdda29d7a5ab43352f36c6ed" category="paragraph">SVM のセットアップ手順の概要を次に示します。</block>
  <block id="3c2f5fc4909af1c1359e564eb6db48b0" category="list-text">ソースクラスタとデスティネーションクラスタ間にピア関係を設定します。</block>
  <block id="3b1329fc73441b5a106271d6f3497f1e" category="list-text">subtype dp-destination オプションを使用して、デスティネーション SVM を作成します。</block>
  <block id="2ce677015d60734da686668ee7962dd0" category="list-text">レプリケーションジョブスケジュールを作成して、必要な間隔でレプリケーションが実行されるようにします。</block>
  <block id="e9eeea68d62192550b641463a212f6f7" category="list-text">「 -identity-preserve true 」オプションを使用してデスティネーション SVM からソース SVM への SnapMirror レプリケーションを作成し、ソース SVM 構成とソース SVM インターフェイスをデスティネーションにコピーします。デスティネーション SVM から、 SnapMirror SVM レプリケーション関係を初期化します。</block>
  <block id="fb45980442af5aaba98c4d47ae4d3bfd" category="image-alt">に、 SVM のセットアップに必要な手順を示します。</block>
  <block id="1e4e7c145198bb50a238b75b451a761f" category="section-title">Trident のディザスタリカバリワークフロー</block>
  <block id="b955e2b8063ba57e27a4ab2b5317f40c" category="paragraph">Astra Trident 19.07 以降では、 Kubernetes の SSD を使用して独自の状態を保存、管理しています。Kubernetes クラスタのメタデータの保存には 'etcd' が使用されますここでは、 Kubernetes の etcd' データファイルと証明書が NetApp FlexVol に格納されているものとします。この FlexVol は SVM にあり、 SVM の SnapMirror SVM-DR 関係はセカンダリサイトのデスティネーション SVM と一緒にあります。</block>
  <block id="cc457da166ae89d5689724340cb13732" category="paragraph">災害発生時に Astra Trident を使用して、単一のマスター Kubernetes クラスタをリカバリする手順を次に示します。</block>
  <block id="53ac5e7226086e14e63a8c160480dc72" category="list-text">ソース SVM で障害が発生した場合は、 SnapMirror デスティネーション SVM をアクティブ化します。そのためには、スケジュールされた SnapMirror 転送を停止し、実行中の SnapMirror 転送を中止して、レプリケーション関係を解除し、ソース SVM を停止して、デスティネーション SVM を起動します。</block>
  <block id="2e22b90c5468159621965197ed565e28" category="list-text">デスティネーション SVM から、 Kubernetes の「 etcd」 データファイルおよび証明書が格納されているボリュームを、マスターノードとしてセットアップされるホストにマウントします。</block>
  <block id="40d502a83976e38daa5473f7aa22abae" category="list-text">Kubernetes クラスタに関連する必要な証明書をすべて、「 /etc/Kubernetes /pki 」の下にコピーし、「 /var/lib/etcd」 の下に「 etcd`m ember-」 ファイルをコピーします。</block>
  <block id="ca8fc386b365ae9b5a3b4bbadae7d7f3" category="list-text">--ignore-preflight -errors=DirAvailable --var-lib-etcd` フラグを指定して kubeadm init コマンドを使用して Kubernetes クラスタを作成しますKubernetes ノードに使用するホスト名は、ソースの Kubernetes クラスタと同じであることが必要です。</block>
  <block id="e0e99766128c0aba0f0aa6c04f32348c" category="list-text">「 kubectl get CRD 」コマンドを実行して、すべての Trident カスタムリソースが起動しているかどうかを確認し、 Trident オブジェクトを取得して、すべてのデータが利用可能であることを確認します。</block>
  <block id="5a869093fda46649157b8eb12219a2f2" category="list-text">必要なバックエンドをすべて更新して、新しいデスティネーション SVM 名を反映させるために、「 ./tridentctl update backend &lt;backend-name&gt; -f &lt;backend-json -file&gt; -n &lt;namespace&gt; 」コマンドを実行します。</block>
  <block id="dbd1e2ae426afc58b4818d42ea354b74" category="admonition">アプリケーション永続ボリュームの場合、デスティネーション SVM がアクティブ化されると、 Trident によってプロビジョニングされたすべてのボリュームがデータの提供を開始します。前述の手順に従って Kubernetes クラスタをデスティネーション側でセットアップしたら、すべての導入ポッドとポッドが開始され、コンテナ化されたアプリケーションは問題なく実行されます。</block>
  <block id="d384359ca03c8d46191c719c57744679" category="section-title">SnapMirror ボリュームのレプリケーション</block>
  <block id="118fa9a7e0f8d0db1e27394b81880427" category="paragraph">ONTAP SnapMirror ボリュームレプリケーションはディザスタリカバリ機能です。この機能を使用すると、ボリュームレベルでプライマリストレージからデスティネーションストレージにフェイルオーバーできます。SnapMirror は、 Snapshot を同期することで、セカンダリストレージ上のプライマリストレージのボリュームレプリカまたはミラーを作成します。</block>
  <block id="19f60a36276037e5b82b5096d2ba7a5c" category="paragraph">ONTAP の SnapMirror ボリュームレプリケーションのセットアップ手順の概要を次に示します。</block>
  <block id="c4e9d0a10c58301ad78e9e9bf74f9229" category="list-text">ボリュームが配置されているクラスタとボリュームからデータを提供する SVM 間のピアリングを設定します。</block>
  <block id="b1c132fa6284fd6d42f93781032cd962" category="list-text">関係の動作を制御する SnapMirror ポリシーを作成し、その関係の設定属性を指定します。</block>
  <block id="d9934e78a9254dde4a227181c30fa2d2" category="inline-link">'napmirror create' コマンド</block>
  <block id="0a30bcd5b223c18be449821765a8ec07" category="list-text">を使用して、デスティネーションボリュームとソースボリューム間の SnapMirror 関係を作成します<block ref="bfbfdbcdb00ddafcc3e3ca740d1d316b" category="inline-link-rx"></block> をクリックし、適切な SnapMirror ポリシーを割り当てます。</block>
  <block id="20872623d19783e0dbe00afcdcb9ba46" category="list-text">SnapMirror 関係の作成後、ソースボリュームからデスティネーションボリュームへのベースライン転送が完了するように、関係を初期化します。</block>
  <block id="af1fe101ed84f2b2bc465f0a9e92a35f" category="image-alt">に、 SnapMirror ボリュームレプリケーションのセットアップを示します。</block>
  <block id="1d3ec4cce0f34c07e814ebbd88f5edd8" category="section-title">Trident の SnapMirror ボリュームディザスタリカバリワークフロー</block>
  <block id="83e05258883cd6b92e2fe5b113f1ebc6" category="paragraph">Astra Trident で単一のマスター Kubernetes クラスタをリカバリする手順を次に示します。</block>
  <block id="b950aff3484c4c998d3b7a36ff1d6553" category="list-text">災害が発生した場合は、スケジュールされたすべての SnapMirror 転送を停止し、実行中のすべての SnapMirror 転送を中止します。デスティネーションボリュームが読み取り / 書き込み可能になるように、デスティネーションボリュームとソースボリュームの間のレプリケーション関係を解除します。</block>
  <block id="521637d2f234b6223688c168d29f6b72" category="list-text">デスティネーション SVM から、 Kubernetes の「 etcd」 データファイルおよび証明書が格納されているボリュームをホストにマウントします。このホストはマスターノードとしてセットアップされます。</block>
  <block id="d911c905c09c9615d35c97f404dd2884" category="list-text">--ignore-preflight -errors=DirAvailable --var-lib-etcd` フラグを指定して kubeadm init コマンドを実行し、 Kubernetes クラスタを作成します。ホスト名はソースの Kubernetes クラスタと同じにする必要があります。</block>
  <block id="4b4d4e6a1634d2560e81a9a1821e2818" category="list-text">「 kubectl get CRD 」コマンドを実行して、すべての Trident カスタムリソースが起動しているかどうかを確認し、すべてのデータが利用可能であることを確認します。</block>
  <block id="4f04020fc477f4ade26e46ae0ba44688" category="list-text">前のバックエンドをクリーンアップし、 Trident に新しいバックエンドを作成します。デスティネーション SVM の新しい管理 LIF とデータ LIF 、新しい SVM 名、パスワードを指定します。</block>
  <block id="f4a5d35c2f46c3a6ee69fd6aa2d1ed16" category="section-title">アプリケーション永続ボリュームのディザスタリカバリワークフロー</block>
  <block id="77983829e737f00a29b43edacbba355e" category="paragraph">次の手順は、災害発生時に SnapMirror デスティネーションボリュームをコンテナ化されたワークロードで使用できるようにする方法を示しています。</block>
  <block id="aefd7239e178b3ae439ae7004435bd18" category="list-text">スケジュールされたすべての SnapMirror 転送を中止し、実行中のすべての SnapMirror 転送を中止します。デスティネーションボリュームが読み取り / 書き込み可能になるように、デスティネーションボリュームとソースボリュームの間のレプリケーション関係を解除します。ソース SVM のボリュームにバインドされた PVC を使用していた環境をクリーンアップします。</block>
  <block id="c64f364f814f31948e0882b74d5ddfe1" category="list-text">前述の手順に従ってデスティネーション側で Kubernetes クラスタをセットアップしたら、 Kubernetes クラスタから導入環境、 PVC 、 PV をクリーンアップします。</block>
  <block id="6973ba748ea89f06ab3640118969d780" category="list-text">Trident で新しい管理 LIF とデータ LIF 、デスティネーション SVM の新しい SVM 名とパスワードを指定して、新しいバックエンドを作成します。</block>
  <block id="1fd415590fff525d8e3562951ed79081" category="list-text">Trident のインポート機能を使用して、必要なボリュームを、新しい PVC にバインドされた PV としてインポートします。</block>
  <block id="99a01026c124f91b08d854efa31d450b" category="list-text">新しく作成した PVC を使用してアプリケーション展開を再展開します。</block>
  <block id="7a183359334a99fc80b796244313284c" category="section-title">Element Snapshot を使用してデータをリカバリします</block>
  <block id="2d51cea50aa816e6be9c663c2ad2686a" category="paragraph">ボリュームの Snapshot スケジュールを設定し、必要な間隔で Snapshot が作成されていることを確認して、 Element ボリューム上のデータをバックアップします。Snapshot スケジュールは、 Element UI または API を使用して設定します。現時点では 'olidfire-san' ドライバを使用して ' スナップショットスケジュールをボリュームに設定することはできません</block>
  <block id="c42cc84c1560600f6f5986a958de0735" category="paragraph">データが破損した場合は、特定の Snapshot を選択し、 Element UI または API を使用してボリュームを手動で Snapshot にロールバックできます。その Snapshot の作成後にボリュームに対して行われた変更はすべて元に戻ります。</block>
  <block id="e20acf6d4b1275a0b5d2eb01c845adff" category="summary">ネットアップでは、さまざまな方法で Trident をサポートしています。Slack チャンネルなど、幅広いセルフサポートオプションを 24 時間 365 日ご利用いただけます。</block>
  <block id="db5eb84117d06047c97c9a0191b5fffe" category="doc">サポート</block>
  <block id="14340f3a4eb25a54f8446036d807d7c8" category="paragraph">Astra Trident は、正式にサポートされているネットアップのプロジェクトです。任意の標準メカニズムを使用してネットアップに連絡し、必要なエンタープライズクラスのサポートを受けることができます。</block>
  <block id="31521e7ff20a98e479b412febf1ac4b4" category="inline-link">ネットアップの Slack ワーク</block>
  <block id="b622c74429f1282e8ed1f79ee8d53260" category="paragraph">コンテナユーザー（ Astra Trident 開発者を含む）の活発なパブリックコミュニティが、「 containers 」チャネルにも存在します<block ref="e5c49b87a1fe6d362b72260d2620cf35" category="inline-link-rx"></block>。プロジェクトに関する一般的な質問をしたり、同じような気のある同僚と関連するトピックについて話し合うのには、この場所が最適です。</block>
  <block id="dec54888538ac86f51d29a3d043e6bf6" category="summary">既存の Astra Trident インストールは、オペレータが簡単にアップグレードできます。</block>
  <block id="5ff3faebb0ff710340bdbee89a4667ad" category="doc">オペレータにアップグレードしてください</block>
  <block id="b8ce48f9165ac0cead930cd72b36b5ac" category="paragraph">オペレータを使用してアップグレードするには、次の条件を満たしている必要があります。</block>
  <block id="933c98c07c43994c690a4d57fff2fd1f" category="list-text">CSI ベースの Astra Trident がインストールされている必要があります。CSI Trident を実行しているかどうかを確認するには、 Trident ネームスペースのポッドを調べます。"trident-csi-*" の命名パターンに従っている場合は、 CSI Trident を実行しています。</block>
  <block id="b53958f3b6708eb5412679540db1febc" category="list-text">CRD ベースの Trident をインストールしている必要があります。19.07 以降のすべてのリリースを表します。CSI ベースのインストールを使用している場合は、 CRD ベースのインストールを使用している可能性があります。</block>
  <block id="ba45a58fb6371fc5a91fb8a5d399becd" category="list-text">CSI Trident をアンインストールしても、インストールからのメタデータが保持されている場合は、オペレータを使用してアップグレードできます。</block>
  <block id="33deedceb6eaeb2f124b7ce830e212a8" category="list-text">特定の Kubernetes クラスタ内のすべてのネームスペースに存在する Trident のは、 1 つの Astra だけです。</block>
  <block id="f6c44c912e06b8221085c219600c6387" category="inline-link-macro">バージョン 1.17 以降</block>
  <block id="0805928cc4c4b801e682a6cd2006e692" category="list-text">を実行する Kubernetes クラスタを使用する必要があります <block ref="b1e96583006584730c41f3baa3725240" category="inline-link-macro-rx"></block>。</block>
  <block id="f5d517b06fc0b1af5d599776e2f6f1d6" category="inline-link">この blog</block>
  <block id="093e1971a4b17fce7e3e4d94854a46ba" category="list-text">アルファスナップショットの CRD が存在する場合は、 tridentctl を使用して削除してください。これにより、アルファスナップショット仕様の CRD が削除されます。削除または移行が必要な既存のスナップショットについては、を参照してください<block ref="ddf3864130a7be37c683b2fe21303201" category="inline-link-rx"></block>。</block>
  <block id="199ed8c975e8bb544d18428ba17adbc3" category="inline-link">GitHub の問題の詳細</block>
  <block id="398b69b685d2969c9e5d2f8cfbff3972" category="admonition">OpenShift Container Platform で演算子を使用して Trident をアップグレードする場合は、 Trident 21.01.1 以降にアップグレードする必要があります。21.01.0 でリリースされた Trident オペレータには、 21.01.1 で修正された既知の問題が含まれています。詳細については、を参照してください<block ref="bcebcdd21adcbb3d7c640d63a711c6fb" category="inline-link-rx"></block>。</block>
  <block id="2f6881ec6a84d1ac9ef2e551f3ca8466" category="section-title">クラスタを対象としたオペレータ環境をアップグレードします</block>
  <block id="532223fc600c8862511462ff30738c55" category="paragraph">Trident 21.01 以降 * からアップグレードするには、以下の手順に従ってください。</block>
  <block id="238e63aecc23c1bc2611ca883f075f1f" category="list-text">現在の Astra Trident インスタンスのインストールに使用した Trident オペレータを削除たとえば、 21.01 からアップグレードする場合は、次のコマンドを実行します。</block>
  <block id="caa6267a6d2c9b631544a2ce0d5e4180" category="list-text">（オプション）インストールパラメータを変更する場合は、 Trident のインストール時に作成した「 TridentOrchestrator 」オブジェクトを編集します。カスタム Trident イメージの変更、コンテナイメージをプルするためのプライベートイメージレジストリ、デバッグログの有効化、イメージプルシークレットの指定など、これらの変更が行われる可能性があります。</block>
  <block id="09b615e18699c6675b3705c00a495375" category="list-text">新しいバージョンの Trident 演算子を設定する 'undle.yaml ファイルを使用して Astra Trident をインストールします次のコマンドを実行します。</block>
  <block id="d06b5297af318d2581021098f6b0d44d" category="section-title">名前空間を対象としたオペレータインストールをアップグレードします</block>
  <block id="ddfa75d059a999aedec16392aae03bc4" category="paragraph">名前空間を対象とした演算子（バージョン 20.07 ～ 20.10 ）を使用してインストールされた Astra Trident のインスタンスからアップグレードするには、次の手順に従います。</block>
  <block id="edf5c542759186ded2c7eeaae6b340a5" category="list-text">既存の Trident インストールのステータスを確認これを行うには、 TridentProvisioner の * Status * を確認してください。ステータスは「 Installed 」になります。</block>
  <block id="683d018a2f7c70469fd74ba0eeae2a79" category="list-text">Trident インストーラに付属のマニフェストを使用して、「 TridentOrchestrator 」 CRD を作成します。</block>
  <block id="ede3d39a1c5211985b126b3f166cf601" category="inline-link">Trident リポジトリ</block>
  <block id="af39f09efb6e7b7133433dff92d0fffe" category="list-text">マニフェストを使用して、名前空間を対象とした演算子を削除します。この手順を完了するには、名前空間を対象とした演算子を配備するために使用する 'undle.yaml ファイルが必要です。から 'bundle.yaml を取得できます<block ref="1403b813895a8a78c447fca96240f2ac" category="inline-link-rx"></block>。適切なブランチを使用するようにしてください。</block>
  <block id="5451265740f1553dff7af7814faa5277" category="inline-link-macro">パラメータのリスト</block>
  <block id="8afea862003d4f613fcffecc022fb20c" category="admonition">名前空間スコープ演算子を削除してクラスタスコープ演算子をインストールする前に、 Trident のインストールパラメータを必要に応じて変更します（たとえば、「 tridentImage 」、「 autosupportImage 」、プライベートイメージリポジトリ、「 imagePullSecrets 」の値を変更します）。更新可能なパラメータの一覧については、を参照してください <block ref="e5ef433069537d0999d9cf3f906affdb" category="inline-link-macro-rx"></block>。</block>
  <block id="5fbede7820945c99130183fd2fd0f4b3" category="paragraph">この段階で 'trident-operator-xxxxxxxxxxxxxxx Pod が削除されます</block>
  <block id="86463d362af5835ff8c3fd6587fbd24f" category="list-text">（オプション）インストールパラメータを変更する必要がある場合は、「 TridentProvisioner 」の仕様を更新します。これらの変更には、コンテナイメージをからプルするためのプライベートイメージレジストリの変更、デバッグログの有効化、イメージプルシークレットの指定などがあります。</block>
  <block id="df486b34cec5fdfba24de79fe6b388d4" category="list-text">クラスタを対象とした演算子をインストールします。</block>
  <block id="d5eded1a43812da779b35ffbffedf46b" category="admonition">クラスタを対象とした演算子をインストールすると、「 TridentProvisioner 」オブジェクトから「 TridentOrchestrator 」オブジェクトへの移行が開始され、「 TridentProvisioner 」オブジェクトと「 tridentProvisioner`CRD 」が削除され、 Astra Trident が使用中のクラスタを対象とした演算子のバージョンにアップグレードされます。次の例では、 Trident が 21.07.1 にアップグレードされています。</block>
  <block id="cb84f171610775cc6f9d39511d6acee9" category="admonition">クラスタを対象とした演算子を使用して Astra Trident をアップグレードすると、「 tridentProvisioner 」が同じ名前の「 tridentOrchestrator 」オブジェクトに移行します。これは、オペレータによって自動的に処理されます。アップグレードの際には、 Astra Trident が以前と同じネームスペースにインストールされる予定です。</block>
  <block id="61d74cfa0c3f53abef0b4694fba0522f" category="section-title">Helm ベースのオペレータインストレーションをアップグレードします</block>
  <block id="7734dd866cc8c135256bad90520fa719" category="paragraph">Helm ベースのオペレータインストレーションをアップグレードするには、次の手順を実行します。</block>
  <block id="3002cfcea36b7fb4d87da4d413730851" category="list-text">最新の Astra Trident リリースをダウンロード</block>
  <block id="2171a3791b6ac570c7910a5d1d7f4d89" category="list-text">「 helm upgrade 」コマンドを使用します。次の例を参照してください。</block>
  <block id="00bca5f1181617a563b71b78a27434d0" category="paragraph">ここで 'trident-operator-21.07.tgz は ' アップグレード先のバージョンを反映しています</block>
  <block id="1869e61179995eed8692bfc705434d2b" category="list-text">Helm list を実行して ' グラフとアプリケーションのバージョンが両方ともアップグレードされていることを確認します</block>
  <block id="1d0b5ffc29a6dba36314ccbba6a46038" category="admonition">アップグレード中に構成データを渡すには '--set' を使用します</block>
  <block id="4a6b869a481b52472aa62cfa4d9d255e" category="paragraph">たとえば 'tridentDebug' のデフォルト値を変更するには ' 次のコマンドを実行します</block>
  <block id="6b30e95bff9143b45494dd9486e9515d" category="paragraph">$tridentctl logs を実行すると ' デバッグメッセージを表示できます</block>
  <block id="ad00f75f90e86259efc5e8512fe4c23a" category="admonition">初期インストール時にデフォルト以外のオプションを設定する場合は、オプションが upgrade コマンドに含まれていることを確認してください。含まれていない場合は、値がデフォルトにリセットされます。</block>
  <block id="5c83dd886f5edc620e809e7800bc225f" category="section-title">オペレータ以外のインストールからアップグレードします</block>
  <block id="69f43f0aadf9091408f80d6d1e0fdd45" category="paragraph">CSI Trident インスタンスが上記の前提条件を満たしている場合は、 Trident オペレータの最新リリースにアップグレードできます。</block>
  <block id="4ab464bddccdcbc36fab4cea802025f9" category="list-text">マニフェストから「 tridentオーケストラ 」 CRD を作成します。</block>
  <block id="835fd860290737b70acf870a253c3549" category="list-text">オペレータを配備します。</block>
  <block id="06da281bf5e01c3c59892dc886cd0067" category="list-text">Astra Trident をインストールするための TridentOrchestrator CR を作成します。</block>
  <block id="f420eb91a420c03f1792a6504b30277b" category="paragraph">既存のバックエンドと PVC は自動的に使用可能</block>
  <block id="1e209c07680392db2505687941188c9f" category="summary">旧バージョンの Astra Trident にダウングレードする手順をご確認ください。</block>
  <block id="9b51b245233e60555d569a43ebaa1b8d" category="doc">Trident をダウングレード</block>
  <block id="f58ee9343b12a3276981187a42480ba7" category="paragraph">次のような理由でダウングレードを検討してください。</block>
  <block id="e930f1fff9365ca35f55f1e61bef69a9" category="list-text">危機管理計画</block>
  <block id="235115784feaabab0df1d64a2019b176" category="list-text">アップグレードの結果として見つかったバグの即時修正</block>
  <block id="41768ab308324d6b4a49e2e225427666" category="list-text">依存関係の問題、失敗したアップグレード、および不完全なアップグレード</block>
  <block id="9bb6c30b6b6e3a9fbbd83b458a3556eb" category="section-title">ダウングレードするタイミング</block>
  <block id="97442cfde1061a7c844e8d4c06f79720" category="paragraph">CRD を使用する Astra Trident リリースに移行する場合は、ダウングレードを検討する必要があります。Astra Trident は現在、ステートを維持するために CRD を使用するため、作成されたすべてのストレージエンティティ（バックエンド、ストレージクラス、 PV 、ボリュームスナップショット）には、「 trident PV 」（以前にインストールされた Astra Trident のバージョンで使用）に書き込まれたデータではなく、関連する CRD オブジェクトがあります。新しく作成された PVS 、バックエンド、およびストレージクラスはすべて CRD オブジェクトとして管理されます。ダウングレードが必要な場合は、 CRD （ 19.07 以降）を使用して実行されている Astra Trident のバージョンに対してのみ実行してください。これは、ダウングレードの実行後に、現在の Astra Trident リリースで実行されたすべての処理が認識されるようにするためです。</block>
  <block id="cb4d3c8706ed4dd2a49a007f19e8b30a" category="section-title">ダウングレードしない場合</block>
  <block id="7be40d1b43eccf7d81bd7ad70a7cee5b" category="paragraph">「 etcd」 を使用して状態を維持する Trident のリリース（ 19.04 以前）にダウングレードしないでください。現在の Astra Trident リリースで実行したすべての処理は、ダウングレード後に反映されません。以前のバージョンに戻す場合、新しく作成した PVS は使用できません。バックエンド、 PVS 、ストレージクラス、ボリューム Snapshot （作成 / 更新 / 削除）などのオブジェクトに加えられた変更は、以前のバージョンに戻すと Astra Trident には表示されません。以前のバージョンに戻しても、アップグレードされていないかぎり、以前のリリースを使用してすでに作成された PVS へのアクセスは中断されません。</block>
  <block id="716e6c4d72b03c2b5b4503d5e968e654" category="section-title">Operator を使用して Astra Trident をインストールする場合のダウングレードプロセス</block>
  <block id="286ac65245e7b7508f3cdf1dea1c60eb" category="paragraph">Trident Operator を使用したインストールでは ' ダウングレード・プロセスは異なり 'tridentctl を使用する必要はありません</block>
  <block id="41cc548b7b7993679e555423a014ca5c" category="paragraph">Trident オペレータを使用してインストールを完了した場合は、 Astra Trident を次のいずれかにダウングレードできます。</block>
  <block id="c3d92c281c17e41ffac420b45790ecbf" category="list-text">名前空間を対象とした演算子（ 20.07-2010 ）を使用してインストールされるバージョン。</block>
  <block id="69f5b5f7aa4a5f07267b9c758e2580e6" category="list-text">クラスタを対象とした演算子（ 21.01 以降）を使用してインストールされるバージョン。</block>
  <block id="0d8778040c29d89141a733b060314da3" category="section-title">クラスタを対象とした演算子にダウングレードします</block>
  <block id="12a3bd4ff105bed8650ca128636a078f" category="paragraph">Astra Trident を、クラスタを対象としたオペレータを使用するリリースにダウングレードするには、次の手順に従います。</block>
  <block id="43f17763173fe230bdd78477152f5f7d" category="inline-link-macro">Astra Trident をアンインストール</block>
  <block id="f472e2d2602fec8483b064616fa5f543" category="list-text"><block ref="e6c6ebb45af4a1845e181c2b5544dbb0" category="inline-link-macro-rx"></block>。** 既存のインストールを完全に削除する場合を除き、 CRD を削除しないでください。 **</block>
  <block id="3864c0c37bf26f8a7686e5c04435974c" category="inline-link">Trident GitHub repo</block>
  <block id="78a26b79451266c6562d8d11cdb86ad0" category="list-text">クラスタを対象とした演算子を削除します。これを行うには、オペレータを配置するために使用するマニフェストが必要です。から入手できます<block ref="08fa9926a4347665a77bd7911809a1ce" category="inline-link-rx"></block>。必要なブランチに切り替えていることを確認してください。</block>
  <block id="44d9737dc7f423d188a4b34663c5f06e" category="list-text">必要なバージョンの Astra Trident をインストールして、ダウングレードを続行します。目的のリリースのマニュアルに従ってください。</block>
  <block id="0e792058c21e7156d25e8ae8f2d784a0" category="section-title">名前空間を対象とした演算子にダウングレードします</block>
  <block id="8ad79c030a4ebdd2f446157ba529561e" category="paragraph">このセクションでは、名前空間を対象とした演算子を使用してインストールされる、 20.07 ～ 20.10 の範囲の Astra Trident リリースへのダウングレード手順を要約します。</block>
  <block id="a7c80f52f9be4831ca776b56dc642a45" category="list-text"><block ref="e6c6ebb45af4a1845e181c2b5544dbb0" category="inline-link-macro-rx"></block>。** 既存のインストールを完全に削除する場合を除き、 CRD を削除しないでください。 ** 「 tridentオーケストラ 」が削除されていることを確認してください。</block>
  <block id="141ed8ae2dd3c3efac0c25f12b058c87" category="list-text">クラスタを対象とした演算子を削除します。これを行うには、オペレータを配置するために使用するマニフェストが必要です。このファイルは、から入手できます<block ref="08fa9926a4347665a77bd7911809a1ce" category="inline-link-rx"></block>。必要なブランチに切り替えていることを確認してください。</block>
  <block id="2389eabedca3341193952356ec53cd0c" category="list-text">「 tridentオーケストラ 」の「 CRD 」を削除します。</block>
  <block id="2982be9f91f77222d75873452bfc7696" category="paragraph">Astra Trident がアンインストールされました。</block>
  <block id="0f46a51f24c3700da8c74b9a5294a22f" category="list-text">目的のバージョンをインストールしてダウングレードを続行します。目的のリリースのマニュアルに従ってください。</block>
  <block id="5f7d982e216126a476d4ca0051837e2a" category="section-title">Helm を使用してダウングレードしてください</block>
  <block id="fe0182349853dde39c65151b592bc343" category="paragraph">ダウングレードするには 'helm rollback コマンドを使用します次の例を参照してください。</block>
  <block id="6506fb901be776a97bf61f4f21fb84ce" category="section-title">Trident が tridentctl を使用してインストールされている場合のダウングレードプロセス</block>
  <block id="d1008d4e2b1eb300375d48496c96e8b0" category="paragraph">tridentctl を使用して Astra Trident をインストールした場合、ダウングレードプロセスでは次の手順を実行します。このシーケンスに従って、 Astra Trident 21.07 から 20.07 に移行するためのダウングレードプロセスを順を追って説明します。</block>
  <block id="e08f959c89cb36ec887089ce4a7c1bcc" category="admonition">ダウングレードを開始する前に、 Kubernetes クラスタの「 etcd」 のスナップショットを作成する必要があります。これにより、 Astra Trident の CRD の現在の状態をバックアップできます。</block>
  <block id="e36e921de70428b33bb0e5c22f4f1d03" category="list-text">Trident が tridentctl を使用してインストールされていることを確認しますAstra Trident のインストール方法がわからない場合は、次の簡単なテストを実行してください。</block>
  <block id="d7c7b52356c18ead4409ef4ca7e2eac8" category="list-text">Trident ネームスペースにあるポッドを表示します。</block>
  <block id="225b7f623c2562a1ed24395fd3852b70" category="list-text">クラスタで実行されている Astra Trident のバージョンを特定します。tridentctl を使用するか、 Trident ポッドで使用されるイメージを見ることができます。</block>
  <block id="46da6852e307b4f4a0e965c9c18fe576" category="list-text">「 tridentOrchestrator 」、 ( または ) 「 tridentProvisioner` 」、 ( または ) 「 trident-operator-xxxxxxxxx-xxxxx 」という名前のポッドが表示されない場合、 Astra Trident * は「 tridentctl 」を使用してインストールされます。</block>
  <block id="72b739b65841b5d903e9ec216f0c4fd1" category="list-text">既存の tridentctl バイナリを使用して Astra Trident をアンインストールしますこの場合は、 21.07 バイナリを使用してアンインストールします。</block>
  <block id="6445365d100b18e233ebf2d08d116aee" category="inline-link-macro">カスタマイズされたインストール</block>
  <block id="ca35ad40c102410833ee6b7227e3cfcc" category="list-text">これが完了したら、希望するバージョンの Trident バイナリ（この例では 20.07 ）を取得し、 Astra Trident のインストールに使用します。のカスタム YAML を生成できます <block ref="e519c8a747d0bcd553094af015469d7d" category="inline-link-macro-rx"></block> 必要に応じて、</block>
  <block id="03347682a0c8323a17a17933bbf4e18c" category="paragraph">ダウングレードプロセスが完了します。</block>
  <block id="3a90bea856daf0616bcbdde1b9d9ad0b" category="summary">Astra Trident のインストール方法に応じて、複数の方法でアンインストールできます。</block>
  <block id="bdcf993f8f3d91925d60754cd864f3c0" category="section-title">Helm を使用してアンインストールします</block>
  <block id="8656f6a3d04342ff6248bd7d32949c2a" category="paragraph">Helm を使用して Astra Trident をインストールした場合は 'helm uninstall を使用してアンインストールできます</block>
  <block id="e2a3593a8e9900eadda10d47bc2ff47c" category="section-title">Trident オペレータを使用してをアンインストールします</block>
  <block id="c416a70504ae36e8cfbf555ad0d13ab9" category="paragraph">Operator を使用して Astra Trident をインストールした場合、次のいずれかの方法で Trident をアンインストールできます。</block>
  <block id="1159b3a6f6975215eaff7b18f9fdbe8e" category="list-text">** 「 TridentOrchestrator 」を編集してアンインストールフラグを設定してください :** 「 TridentOrchestrator 」を編集し、「 PEC.UNINSTALL = TRUE 」を設定できます。「 TridentOrchestrator 」 CR を編集し、次に示すように「 uninstall 」フラグを設定します。</block>
  <block id="245e84de93b9b41f643f9e737c17e702" category="paragraph">uninstall` フラグが 'true' に設定されている場合、 Trident オペレータは Trident をアンインストールしますが、 TridentOrchestrator 自体は削除しません。Trident を再度インストールする場合は、 TridentOrchestrator をクリーンアップして新しい Trident を作成する必要があります。</block>
  <block id="a5e00cb8c456b8892f7af2349fe6e10a" category="list-text">** 「 TridentOrchestrator 」を削除 ** Astra Trident のデプロイに使用した「 TridentOrchestrator 」 CR を削除することで、 Trident をアンインストールするようオペレータに指示します。オペレータは「 TridentOrchestrator 」の削除を処理し、 Astra Trident の展開とデストレーションを削除し、インストールの一部として作成した Trident ポッドを削除します。Astra Trident を完全に削除し ( それが作成する CRD を含む ) 、スレートをクリーンにして効果的に消去するには、「 TridentOrchestrator 」を編集して「 wippeout 」オプションを渡すことができます。次の例を参照してください。</block>
  <block id="8aaaff274ba10c527c6bf8facd1c9092" category="paragraph">Astra Trident が完全にアンインストールされ、管理対象のバックエンドとボリュームに関連するすべてのメタデータがクリアされます。以降のインストールは新規インストールとして扱われます。</block>
  <block id="1f119048e6c0b2f219b28b7efae30285" category="admonition">完全なアンインストールを実行する場合にのみ、 CRD の消去を検討してください。この操作は元に戻せません。** 最初からやり直す必要がある場合や、 Astra Trident の新規インストールを作成する場合を除き、 CRD を消去しないでください **</block>
  <block id="ed116003561aef0bea77cb4c5f6fe418" category="section-title">tridentctl を使用してアンインストールします</block>
  <block id="20402206432f6b6e75899e8f585ae984" category="paragraph">次のように 'tridentctl コマンドを実行して 'Astra Trident に関連付けられているすべてのリソースを削除しますただし 'CRD および関連オブジェクトは削除されますこれにより ' インストーラを再実行して ' より新しいバージョンに更新することが容易になります</block>
  <block id="1b600643682d5a3280681ef82d7e6ae4" category="paragraph">Astra Trident の完全な削除を実行するには、 Astra Trident によって作成された CRD のフィナライザを削除し、 CRD を削除する必要があります。</block>
  <block id="3bda6d3452a50ffddd40bb74b05d6c50" category="summary">Astra Trident は四半期ごとにリリースサイクルを実施し、毎年 4 つのメジャーリリースをリリースしています。各新しいリリースは、以前のリリースに基づいてビルドされ、新機能とパフォーマンスの強化に加え、バグの修正や改善点が追加されています。Astra Trident の新機能を活用するには、 1 年に 1 回以上アップグレードすることを推奨します。</block>
  <block id="3386987a97643481040e99019808e020" category="doc">Astra Trident をアップグレード</block>
  <block id="66bc438a5af66629e5b414e233cb5834" category="admonition">5 つ先のリリースにアップグレードするには、複数の手順でアップグレードする必要があります。</block>
  <block id="d442f21894fbfe232b6d52b52a10ec35" category="section-title">アップグレード先のバージョンを確認します</block>
  <block id="fd6a74b5e363eaa218988afd6ae5140b" category="list-text">YY-1.mm' リリースから 'YY.MM' リリースにアップグレードできますたとえば、 19.07 以降（ 19.07.1 などのドットリリースを含む）から 20.07 への直接アップグレードを実行できます。</block>
  <block id="daf61148013081df2c82930a3a46feb6" category="list-text">以前のリリースを使用している場合は、複数の手順からなるアップグレードを実行する必要があります。そのためには、最初に 4 つのリリースウィンドウに対応する最新リリースにアップグレードする必要があります。たとえば '18.07 を実行していて '20.07 リリースにアップグレードする場合は ' 次に示すように ' 複数ステップのアップグレード・プロセスを実行します</block>
  <block id="6ed2af44865aa9f6dddcebd57d996cf1" category="list-text">最初のアップグレードは 18.07 から 19.07 へ。特定のアップグレード手順については、該当するリリースのドキュメントを参照してください。</block>
  <block id="ff115c7087db60c699cccdb21f39ea66" category="list-text">その後 '19.07 から 20.07 にアップグレードします</block>
  <block id="8d66ed6671344ec6017707c38250329c" category="admonition">バージョン 19.04 以前のすべてのアップグレードでは、 Astra Trident のメタデータを独自の「 etcd」 オブジェクトから CRD オブジェクトに移行する必要があります。アップグレードの仕組みについては、リリースのドキュメントを確認してください。</block>
  <block id="558ab0bef1894a7a726109d36632d09d" category="inline-link-macro">既知の問題</block>
  <block id="33966eba1ed0cde6afda5a97ffaffb09" category="inline-link">セキュリティコンテキスト</block>
  <block id="ceb268093ddd5aa9df1769eda5d1c8cd" category="inline-link">入力例：</block>
  <block id="9d267d893296d1b56789c03ad196afc8" category="inline-link">'storage-class-basic.yamml.templ'</block>
  <block id="4e4578e23d9d48bd9338b1581f884392" category="inline-link">'storage-class-bronze -default.yaml</block>
  <block id="1ca02e26ff81cefae18a0a8d994ca94a" category="admonition">アップグレードする場合は、 Astra Trident が使用する「 torageClasses 」に「 parameter) .fsType 」を指定することが重要です。既存のボリュームを中断することなく、「 torageClasses 」を削除して再作成できます。これは、強制の ** 要件 ** です<block ref="cafe4c6014d8c45aaac70e49318f1a2a" category="inline-link-rx"></block> SAN ボリュームの場合。。<block ref="25daec0b57549a6ad43dbc62a9e717ca" category="inline-link-rx"></block> directory には、などの例があります<block ref="d308f4d12b21bf269d64643e1eceeeb2" category="inline-link-rx"></block> および<block ref="b6ff3ec2ac914a047085c08d5843e316" category="inline-link-rx"></block>。詳細については、を参照してください <block ref="139a59f2208174d2bf825b80dc580275" category="inline-link-macro-rx"></block>。</block>
  <block id="17cfb8bd7f378fa26b63ee73d467cb82" category="section-title">どのアップグレードパスを選択すればよいですか？</block>
  <block id="46940159293e259bcf0bb4df75448100" category="paragraph">次のいずれかのパスを使用してアップグレードできます。</block>
  <block id="dc1a9a8ad35cc8aa946e0a2e3f959e2b" category="list-text">Trident 演算子を使用する。</block>
  <block id="4b78e512c67306c61715208417a1cfd7" category="list-text">tridentctl を使用。</block>
  <block id="756bc985c24584ee6c7338b28f771da8" category="admonition">CSI のボリュームスナップショットは、 Kubernetes 1.20 以降の GA 機能になりました。Astra Trident をアップグレードする場合、アップグレードを実行する前に、以前のスナップショット CRS と CRD （ボリューム Snapshot クラス、ボリューム Snapshot 、ボリューム Snapshot コンテンツ）をすべて削除する必要があります。を参照してください<block ref="ddf3864130a7be37c683b2fe21303201" category="inline-link-rx"></block> アルファスナップショットを beta/GA 仕様に移行する手順を理解する。</block>
  <block id="6958a3036b19c13782ecd0024d772b5f" category="paragraph">Trident のオペレータは、次の条件が満たされている場合にアップグレードできます。</block>
  <block id="9f5cdec8485f67ded88c50f021a562e1" category="list-text">CSI Trident を実行している（ 19.07 以降）。</block>
  <block id="e682693c5c270204af79541caa0e63ba" category="list-text">CRD ベースの Trident リリース（ 19.07 以降）があります。</block>
  <block id="4a0e21a0d69199588534154f29f4af94" category="list-text">カスタム YAML を使用して ' カスタマイズされたインストールを実行することは ** できません **</block>
  <block id="3814df1eaf856112f1f0b22f7f0600e5" category="admonition">etcd' ベースの Trident リリース（ 19.04 以前）を使用している場合は、 Trident のアップグレードにオペレータを使用しないでください。</block>
  <block id="773f6f7f15c751e861d5494e4d510675" category="paragraph">オペレータを使用しない場合 ' またはオペレータがサポートできないカスタマイズされたインストールを使用している場合は 'tridentctl' を使用してアップグレードできますTrident リリース 19.04 以前では、これがアップグレードに推奨される方法です。</block>
  <block id="152a676ac450f5b96a35605dde352607" category="section-title">演算子に変更があります</block>
  <block id="fc7e892a21e797d0592360430a5deedd" category="paragraph">Astra Trident の 21.01 リリースでは、アーキテクチャに関する次のような重要な変更がオペレータに導入されています。</block>
  <block id="4d1b9ac70f0037098e345cb389ea45d9" category="list-text">演算子は * cluster を対象とした * になりました。Trident 演算子の以前のインスタンス（バージョン 20.04 ～ 20.10 ）は、 * 名前空間スコープ * でした。クラスタを対象としたオペレータが有利な理由は次のとおりです。</block>
  <block id="d898743d222c4e0e5e333941bee1ed57" category="list-text">リソースのアカウンタビリティ：オペレータは、 Astra Trident インストールに関連付けられたリソースをクラスタレベルで管理するようになりました。Astra Trident のインストールの一部として、「 ownerReferences 」を使用して複数のリソースを作成し、保持します。クラスタを対象としたリソースで「 ownerReferences 」を維持すると、 OpenShift などの特定の Kubernetes ディストリビュータでエラーが発生する可能性があります。これは、クラスタを対象としたオペレータによって緩和されます。Trident リソースの自動修復とパッチ適用には、この要件が不可欠です。</block>
  <block id="375aa3155c54339a366f23cdb01301e5" category="list-text">アンインストール中のクリーンアップ： Astra Trident を完全に削除するには、関連するリソースをすべて削除する必要があります。ネームスペースを対象としたオペレータが、クラスタを対象としたリソース（ clusterRole 、 ClusterRoleBinding 、 PodSecurityPolicy など）の削除で問題が発生し、クリーンアップが完了しない場合があります。クラスタを対象としたオペレータがこの問題を排除し、必要に応じて、 Astra Trident を完全にアンインストールし、 Aresh をインストールできます。</block>
  <block id="6d68e880fd5e5254e122e99a78417abd" category="list-text">TridentProvisioner は、 Astra Trident のインストールと管理に使用されるカスタムリソースとして、 TridentOrchestrator に置き換えられました。さらに、「 TridentOrchestrator 」の仕様に新しいフィールドが追加されました。ユーザは、「 pec.namespace` 」フィールドを使用して Trident ネームスペースをインストールまたはアップグレードするように指定できます。例を見てみましょう<block ref="2890210b17eb9668a60ececdebcd5910" category="inline-link-rx"></block>。</block>
  <block id="9c83e144e5481ac6766f4055e566594d" category="section-title">詳細については、こちらをご覧ください</block>
  <block id="7d224494dc0d22edaed4c965cdddffe6" category="inline-link-macro">Trident オペレータを使用してアップグレード</block>
  <block id="85f4fc5b4c12e5ede408e45a6d484dc1" category="list-text"><block ref="85f4fc5b4c12e5ede408e45a6d484dc1" category="inline-link-macro-rx"></block></block>
  <block id="b41f68e89b7b02a9077fb800d31a2fbe" category="inline-link-macro">tridentctl を使用してアップグレードします</block>
  <block id="efb20f59615d4d5ee0437ba57aecbe50" category="list-text"><block ref="efb20f59615d4d5ee0437ba57aecbe50" category="inline-link-macro-rx"></block></block>
  <block id="f71fd95d4de4797557e6830c1448c945" category="summary">tridentctl を使用して ' 既存の Astra Trident インストールを簡単にアップグレードできます</block>
  <block id="6224e22d5a77816dd8b659c25a3f88a5" category="paragraph">最新リリースの Astra Trident にアップグレードする際は、次の点を考慮してください。</block>
  <block id="98c7e2ecbd5f5a638272ee366b25b6a1" category="inline-link">ボリューム Snapshot</block>
  <block id="8f9f7d64f0943a9bec25cdd7b786022a" category="list-text">Trident 20.01 以降では、のベータ版のみが提供されます<block ref="0b290b7ed02de23dc49888d0fa4fc114" category="inline-link-rx"></block> がサポートされます。Kubernetes 管理者は、従来のアルファスナップショットを保持するために、アルファスナップショットオブジェクトを安全にバックアップするか、ベータ版に変換するように注意する必要があります。</block>
  <block id="ec35126af255fdfac3b9a8e16e971389" category="list-text">ボリュームスナップショットのベータリリースでは、一連の新しい CRD とスナップショットコントローラが導入されています。どちらも Astra Trident をインストールする前にセットアップする必要があります。</block>
  <block id="a4155944ba4eeb0c41401ab7bb85d3d9" category="inline-link">この blog</block>
  <block id="06f3d92245489ff0e9444c95095ed61b" category="admonition"><block ref="d0e35df46eec7926f0d8844193807dad" category="inline-link-rx"></block> alpha ボリュームの Snapshot をベータ版に移行する手順について説明します。</block>
  <block id="4ff0a9f6065b24ce3d325bad3223f4e2" category="paragraph">Astra Trident のアンインストールと再インストールはアップグレードとして機能します。Trident をアンインストールしても、 Astra Trident 環境で使用されている Persistent Volume Claim （ PVC ；永続的ボリューム要求）と Persistent Volume （ PV ；永続的ボリューム）は削除されません。Astra Trident がオフラインの間は、すでにプロビジョニング済みの PVS を引き続き使用でき、 Astra Trident は、オンラインに戻った時点で作成された PVC に対してボリュームをプロビジョニングします。</block>
  <block id="398a8bf92020ed0b4edb1445d1380971" category="admonition">Astra Trident をアップグレードするときは、アップグレードプロセスを中断しないでください。インストーラが実行されていることを確認します。</block>
  <block id="068051b0ea15e91fd236b514c8b35ffe" category="section-title">アップグレード後の次の手順</block>
  <block id="ba79ef627bc5ee010211ca922024f9e4" category="paragraph">新しい Trident リリース（ On-Demand Volume Snapshots など）で利用できる豊富な機能を活用するには、「 tridentctl upgrade 」コマンドを使用してボリュームをアップグレードします。</block>
  <block id="1f97048c5a9c81e85e588044b15b51c8" category="paragraph">レガシーボリュームがある場合は、それらのボリュームを NFS/iSCSI タイプから CSI タイプにアップグレードして、 Astra Trident のすべての新機能を使用できるようにする必要があります。Trident によってプロビジョニングされたレガシー PV は、従来の機能セットをサポートします。</block>
  <block id="aae0cab55b3d14012cfc61ef5ad46105" category="paragraph">CSI タイプにボリュームをアップグレードする場合は、次の点を考慮してください。</block>
  <block id="9407b572db9501134ce92167448428fb" category="list-text">場合によっては、すべてのボリュームをアップグレードする必要はありません。以前に作成したボリュームには引き続きアクセスでき、正常に機能します。</block>
  <block id="35127b2fd7c387c56305575dfafe2a97" category="list-text">PV は、アップグレード時に展開 / 起動可能セットの一部としてマウントできます。展開 / 起動セットを停止する必要はありません。</block>
  <block id="260eeb1b0c4ec05a9788dc485ed03d36" category="list-text">アップグレード時に、スタンドアロンの POD に PV を接続することはできません。ボリュームをアップグレードする前に、ポッドをシャットダウンする必要があります。</block>
  <block id="2d59c3aee4c9fe757980153c65e922d0" category="list-text">アップグレードできるのは、 PVC にバインドされているボリュームだけです。PVC にバインドされていないボリュームは、アップグレード前に削除およびインポートする必要があります。</block>
  <block id="f2e9d80774fbee2a6152ad9c7db8e0ee" category="section-title">ボリュームのアップグレードの例</block>
  <block id="eff342caa8bb47fc3653d7b149aa91d4" category="paragraph">次の例は、ボリュームのアップグレードを実行する方法を示しています。</block>
  <block id="fbc477673a43a428e429fe6902c6e36a" category="list-text">kubectl get pv を実行して PVS を一覧表示します</block>
  <block id="09d5f690bff68f8b4ffeeed3dac1f534" category="paragraph">現在、 Trident 20.07 によって「 NetApp.io/trident 」プロビジョニングツールを使用して作成された 4 つの PVS があります。</block>
  <block id="581ee670123fe76ff75275867ef06bcc" category="list-text">kubectl describe pv を実行して PV の詳細を取得します。</block>
  <block id="a20b570eccfacf0ac4684823643f91a1" category="paragraph">PV は 'NetApp.io/trident プロビジョニングツールを使用して作成されたものであり 'NFS タイプのものですAstra Trident が提供する新機能をすべてサポートするには、この PV を CSI タイプにアップグレードする必要があります。</block>
  <block id="5be1e244815de403bf79074735c2621f" category="list-text">tridenctl upgrade volume &lt;name-of -trident-volume&gt;` コマンドを実行して、従来の Astra Trident ボリュームを CSI 仕様にアップグレードします。</block>
  <block id="c18e246999f594d4fb39c857bcdd1e09" category="list-text">kubectl describe pv を実行して、ボリュームが CSI ボリュームであることを確認します。</block>
  <block id="fb741f44b40455e466443f8f96ace85e" category="paragraph">このようにして、 Astra Trident によって作成された NFS/iSCSI タイプのボリュームを、ボリューム単位で CSI タイプにアップグレードできます。</block>
  <block id="48dec026afe488df8faca35c5c3a39ea" category="summary">Trident 環境で Element バックエンドを作成して使用する方法について説明します。</block>
  <block id="f58e95baa778c9a2bd1a4597fb49d9b7" category="doc">ONTAP ドライバ</block>
  <block id="0e842f431ce1b4dfb57598e5682e3adc" category="paragraph">Astra Trident は、 ONTAP クラスタとの通信に使用する 5 つの ONTAP ストレージドライバを提供します。各ドライバーがボリュームの作成、アクセス制御、機能をどのように処理するかについて、詳細をご覧ください。</block>
  <block id="48cf24486d9a8e65a142b25682f19949" category="cell">ドライバ</block>
  <block id="888a77f5ac0748b6c8001822417df8b6" category="cell">プロトコル</block>
  <block id="1b5e109e8afd1f9b7f5bbf951eea3442" category="cell">ボリュームモード</block>
  <block id="d5e2d9f8d8f10044e38b71b49e675d2e" category="cell">サポートされているアクセスモード</block>
  <block id="15971126972a002fcddb2c507534e371" category="cell">サポートされるファイルシステム</block>
  <block id="ac52cf637478f3656a1fdee5c02324fd" category="paragraph">ファイルシステム</block>
  <block id="0d3a79885df431b0b67b50b9479e2fee" category="paragraph">RWO 、 RWX 、 ROX</block>
  <block id="9f47e55b538b64923f2ee8c19bc6887a" category="paragraph">"" 、 NFS です</block>
  <block id="e1e4c8c9ccd9fc39c391da4bcd093fb2" category="paragraph">ブロック</block>
  <block id="aa91b58ced7ef060eb0e27ac4e1d18a8" category="paragraph">RWO 、 ROX 、 RWX</block>
  <block id="bc2e0aeb951ff36e6703a1ff5419eb02" category="paragraph">ファイルシステムがありません。raw ブロックデバイスです</block>
  <block id="0b86d82002caac6130185da4ef1be67e" category="paragraph">RWO 、 ROX</block>
  <block id="a029cca698cbf05f07897f86c43cf9e8" category="paragraph">「 xfs 」、「 ext3 」、「 ext4 」</block>
  <block id="4ff78ba07210a8b4db65f6ef62b4e1b4" category="admonition">ONTAP バックエンドは、セキュリティロール（ユーザ名とパスワード）のログインクレデンシャル、または ONTAP クラスタにインストールされている秘密鍵と証明書を使用して認証されます。既存のバックエンドを更新して 'tridentctl update backend' を使用して認証モードから別の認証モードに移行できます</block>
  <block id="d00888bc1409d1c598b90af117bd3551" category="summary">Trident の Astra プロビジョニングの主なフェーズは 2 つあります。最初のフェーズでは、ストレージクラスを適切なバックエンドストレージプールのセットに関連付け、プロビジョニング前の必要な準備として実行します。2 番目のフェーズでは、ボリュームの作成自体が行われます。このフェーズでは、保留中のボリュームのストレージクラスに関連付けられたストレージプールからストレージプールを選択する必要があります。</block>
  <block id="8a7354f894ef62fb3f076510315bf206" category="doc">Astra Trident の概要</block>
  <block id="7c738d9c13e4e5770c6b455ab345afd7" category="paragraph">Astra Trident は、 NetApp の Astra の基盤テクノロジでもあり、 NetApp のスナップショット、バックアップ、レプリケーション、クローニングに業界をリードするデータ管理テクノロジを活用して、 Kubernetes ワークロードのデータ保護、ディザスタリカバリ、ポータビリティ、移行のユースケースに対応します。</block>
  <block id="4bd05efa612e48dd723de2bdd29f88e2" category="section-title">サポートされる Kubernetes クラスタアーキテクチャ</block>
  <block id="85b179f2c10f76f0171b4d9d3f2d5171" category="paragraph">Astra Trident は、次の Kubernetes アーキテクチャでサポートされています。</block>
  <block id="c91cda04d3ac5ae2da327d347d4bbefe" category="cell">Kubernetes クラスタアーキテクチャ</block>
  <block id="eaa4dc5078017a5c5bebf383ab6f5124" category="cell">サポートされます</block>
  <block id="c0057eecd4b1a67d11dc801b8992a574" category="cell">デフォルトのインストールです</block>
  <block id="0c69c79a8788e0e4572d0c4838e69401" category="cell">単一マスター、コンピューティング</block>
  <block id="1fc3441370ae575a64d605fcd15a05fd" category="cell">複数のマスター、コンピューティング</block>
  <block id="7cb2eb9488f3532834f7ef233ae894dd" category="cell">マスター、「 etcd' 」、コンピューティング</block>
  <block id="5e5f49db20e29f6377e57e98932dae57" category="cell">マスター、インフラ、コンピューティング</block>
  <block id="ae663d0d321764bd88b8d864cd3afc9e" category="section-title">アストラとは</block>
  <block id="dd91e88f9a6ec30684f494c41baeeee0" category="paragraph">Astra を使用すると、 Kubernetes で実行されている大量のデータコンテナ化ワークロードを、パブリッククラウドとオンプレミスの間で簡単に管理、保護、移動できます。Astra は、ネットアップの実績ある拡張可能なパブリッククラウドストレージポートフォリオとオンプレミスのストレージポートフォリオから、 Astra Trident を使用して永続的なコンテナストレージをプロビジョニングし、提供します。また、 Kubernetes ワークロード向けに、 Snapshot 、バックアップとリストア、アクティビティログ、アクティブクローニングによるデータ保護、ディザスタ / データリカバリ、データ監査、移行のユースケースなど、アプリケーションに対応した高度なデータ管理機能も豊富に用意されています。</block>
  <block id="02030c8e07c049062fbbba9a32b01067" category="summary">仮想ストレージプールは、 Astra Trident のストレージバックエンドと Kubernetes のストレージクラスの間に抽象化レイヤを提供します。ストレージクラスを作成することなく、管理者は各バックエンドの場所、パフォーマンス、保護などの側面を共通のバックエンドに依存しない方法で定義できます。 StorageClass は、目的の基準を満たすために使用する物理バックエンド、バックエンドプール、またはバックエンドタイプを指定する必要はありません。</block>
  <block id="9f802733184b3e0fb080eddcf9ffeaef" category="doc">仮想ストレージプール</block>
  <block id="9f4406586d4a2343f2a5289e16131b3e" category="paragraph">仮想ストレージプールは、 Astra Trident のストレージバックエンドと Kubernetes の間に抽象化レイヤを提供します。管理者は ' どの物理バックエンド ' バックエンドプール ' またはバックエンドタイプを ' 目的の基準を満たすために使用するかを ' 「 torageClass 」で指定することなく ' バックエンドに依存しない共通の方法で ' 各バックエンドのロケーション ' パフォーマンス ' 保護などの側面を定義できます</block>
  <block id="a4ff8f21d8d1ba289de3b08d19afbeab" category="paragraph">ストレージ管理者は、任意の Astra Trident バックエンドに JSON または YAML 定義ファイルで仮想ストレージプールを定義できます。</block>
  <block id="1c65ff50dcc9738f0ae4169e4f66589c" category="image-alt">に、仮想ストレージプールの概念図を示します。</block>
  <block id="2a778cf7220cdde142651975e1bcd90f" category="paragraph">仮想プールリストの外部で指定されたすべての要素はバックエンドにグローバルであり、すべての仮想プールに適用されます。一方、各仮想プールは、 1 つまたは複数の要素を個別に指定できます（バックエンドグローバルな要素を上書きします）。</block>
  <block id="6aefc2a02fa1ec1f6ac8e9dbd5104efe" category="admonition">仮想ストレージプールを定義する場合は、バックエンド定義で既存の仮想プールの順序を変更しないでください。また、既存の仮想プールの属性を編集または変更したり、新しい仮想プールを定義したりしないことを推奨します。</block>
  <block id="5a53576f0ba98311e845ad0243bed6b7" category="paragraph">ほとんどの項目はバックエンド固有の用語で指定されます。アスペクト値は、バックエンドのドライバの外部には公開されず、「 torageClasses 」でのマッチングには使用できません。代わりに、管理者が各仮想プールに 1 つ以上のラベルを定義します。各ラベルはキー：値のペアで、ラベルは一意のバックエンド間で共通です。側面と同様に、ラベルはプールごとに指定することも、バックエンドに対してグローバルに指定することもできます。名前と値があらかじめ定義されている側面とは異なり、管理者は必要に応じてラベルキーと値を定義する完全な裁量を持っています。</block>
  <block id="a4d6bfb65b6541e04772c0d5180e726e" category="paragraph">'S torageClass' は、セレクタパラメータ内のラベルを参照して、使用する仮想プールを識別します。仮想プールセレクタは、 6 つの演算子をサポートします。</block>
  <block id="e1b3ec89ead7f83a9245ed5c9cacfdbf" category="cell">演算子</block>
  <block id="0a52730597fb4ffa01fc117d9e71e3a9" category="cell">例</block>
  <block id="499badcb6f450c7f46c51d873eb84286" category="cell">`=`</block>
  <block id="354653142ec321459dfd6d71444e992e" category="cell">パフォーマンス = プレミアム</block>
  <block id="d2c49c25d96d87e40bc641b9d5302b36" category="cell">プールのラベル値は一致している必要があります</block>
  <block id="5a5292b0a0d0379f0f1b12801b09b266" category="cell">`!= `</block>
  <block id="eccde6822783bd75209c9b6a2d357f6c" category="cell">パフォーマンス！ = 非常に優れています</block>
  <block id="2944853a5f146abd2671adbecd5c25a3" category="cell">プールのラベル値が一致していない必要があります</block>
  <block id="ae2bef277194f73d24a36a78009aac1e" category="cell">「 in`</block>
  <block id="f8cf8c23afb5459dbf7c24b685caf85b" category="cell">場所（東部、西部）</block>
  <block id="26aac934d614b1b3e5db46d8fc664ec6" category="cell">プールのラベル値は一連の値にする必要があります</block>
  <block id="1a031eecbce49366e550273b9321b909" category="cell">「 notin 」</block>
  <block id="b5585f3f9b45f391fee5dd15e6516450" category="cell">パフォーマンス記名（シルバー、ブロンズ）</block>
  <block id="499fec8ad2646f2de982559111e26a4c" category="cell">プールのラベル値は b にできません</block>
  <block id="ae8e28c37a725c4bb4a74663ac8615ea" category="summary">Trident がボリュームアクセスグループをどのように使用しているかをご確認ください。</block>
  <block id="b4621305109716b02eed0cf25fabab13" category="doc">ボリュームアクセスグループ</block>
  <block id="33911b1eec54b4b5a7fbc504e6569989" category="inline-link">ボリュームアクセスグループ</block>
  <block id="649833006ff7b612c3d988173b6417d5" category="paragraph">Trident がどのように活用されているかをご確認ください<block ref="783dd6ea9e0b09c84db9ccd072a61c55" category="inline-link-rx"></block>。</block>
  <block id="e93c18adf30bc91499234d0ec7863499" category="admonition">CHAP を使用する場合は、このセクションを無視してください。 CHAP では、管理を簡易化し、以下に説明する拡張の制限を回避することが推奨されます。また、 CSI モードで Astra Trident を使用している場合は、このセクションを無視できます。Astra Trident は、強化された CSI プロビジョニングツールとしてインストールされた場合、 CHAP を使用します。</block>
  <block id="3c56a859b413098b6bf2c54aff32a842" category="paragraph">Astra Trident は、ボリュームアクセスグループを使用して、プロビジョニングするボリュームへのアクセスを制御できるCHAP が無効になっている場合、構成に 1 つ以上のアクセスグループ ID を指定しない限り、「 trident 」というアクセスグループが検索されます。</block>
  <block id="025d19ee81e813e3ba40553cd4908638" category="paragraph">Trident が設定されたアクセスグループに新しいボリュームを関連付けても、アクセスグループ自体は作成も管理もされません。ストレージバックエンドが Astra Trident に追加される前に、アクセスグループが存在している必要があります。また、 Kubernetes クラスタ内の、バックエンドでプロビジョニングされたボリュームをマウントできるすべてのノードの iSCSI IQN が含まれている必要があります。ほとんどのインストール環境では、クラスタ内のすべてのワーカーノードがこれに含まれます。</block>
  <block id="dff8ca466bae899e4dbc68c3a552033f" category="paragraph">Kubernetes クラスタに 64 個を超えるノードがある場合は、複数のアクセスグループを使用する必要があります。各アクセスグループには最大 64 個の IQN を含めることができ、各ボリュームは 4 つのアクセスグループに属することができます。最大 4 つのアクセスグループを設定すると、クラスタ内の任意のノードから最大 256 ノードのサイズのすべてのボリュームにアクセスできるようになります。ボリュームアクセスグループの最新の制限については、を参照してください<block ref="ac4000c3a85e5909daa6593f9f0617fd" category="inline-link-rx"></block>。</block>
  <block id="4f5254b466f691d7b0c50fb0d8286075" category="paragraph">デフォルトの trident' アクセスグループを使用している構成から ' 他のアクセスグループを使用している構成に変更する場合は ' リストに trident' アクセスグループの ID を含めます</block>
  <block id="4d5445eb6c70cdab8d3ad5e71367f42a" category="summary">Trident がドライバ用のボリュームスナップショットの作成をどのように処理するかについては、こちらをご覧ください。</block>
  <block id="e9c3828cd06711f9036bb4ce862a32c5" category="doc">ボリューム Snapshot</block>
  <block id="4fb7e6ff3b63c56522fdea39e41d701e" category="list-text">「 ONTAP-NAS' 」、「 ONTAP-SAN' 」、「 AWS- 対」、「 GCP-cvs 」、「 azure-NetApp-files 」ドライバの場合、 各永続ボリューム（ PV ）が FlexVol にマッピングされます。その結果、ボリューム Snapshot はネットアップ Snapshot として作成されます。NetApp のスナップショット・テクノロジーは ' 競合するスナップショット・テクノロジーよりも高い安定性 ' 拡張性 ' リカバリ性 ' パフォーマンスを提供しますSnapshot コピーは、作成時とストレージスペースの両方で非常に効率的です。</block>
  <block id="98c670ffe759cc20cd8a31d49bd0b4fc" category="list-text">「 ONTAP-SAN-エコノミー 」ドライバの場合、 PVS は共有 FlexVol 上に作成された LUN にマッピングされます。PVS のボリューム Snapshot は、関連付けられた LUN の FlexClone を実行することで実現されます。ONTAP の FlexClone テクノロジにより、最大規模のデータセットでもほぼ瞬時にコピーを作成できます。コピーと親でデータブロックが共有されるため、メタデータに必要な分しかストレージは消費されません。</block>
  <block id="9dbabbadda024bb7b1d0db43ab31b45f" category="list-text">「 olidfire-SAN' ドライバの場合、各 PV は NetApp Element ソフトウェア / NetApp HCI クラスタ上に作成された LUN にマッピングされます。ボリューム Snapshot は、基盤となる LUN の Element Snapshot で表されます。これらの Snapshot はポイントインタイムコピーであり、消費するシステムリソースとスペースはごくわずかです。</block>
  <block id="34f731018ae783f70901b14b4950c3a7" category="list-text">ONTAP スナップショットは 'ONTAP-NAS' および「 ONTAP-SAN' 」ドライバと連携して動作する場合 ' FlexVol のポイント・イン・タイム・コピーであり ' FlexVol 自体の領域を消費しますその結果、ボリューム内の書き込み可能なスペースが、 Snapshot の作成やスケジュール設定にかかる時間を短縮できます。この問題に対処する簡単な方法の 1 つは、 Kubernetes を使用してサイズを変更することでボリュームを拡張することです。もう 1 つの方法は、不要になった Snapshot を削除することです。Kubernetes で作成されたボリューム Snapshot を削除すると、関連付けられている ONTAP Snapshot が Astra Trident から削除されます。Kubernetes で作成されていない ONTAP スナップショットも削除できます。</block>
  <block id="1eb824f8d9b30b3f4e089938e719fefe" category="paragraph">ネットアップの Trident では、ボリューム Snapshot を使用して PVS を新規作成できます。これらの Snapshot から PVS を作成するには、サポート対象の ONTAP および CVS バックエンドに対して FlexClone テクノロジを使用します。Snapshot から PV を作成する場合、バッキングボリュームは Snapshot の親ボリュームの FlexClone です。'olidfire-SAN' ドライバは ' スナップショットから PVS を作成するために Element ソフトウェアボリュームクローンを使用しますここで、 Element Snapshot からクローンを作成します。</block>
  <block id="89c3bcf0ecc1114f8d19734d9156cb40" category="doc">プロビジョニング</block>
  <block id="2bd42f922a8c0b54b90557eba2071a76" category="paragraph">バックエンド・ストレージ・プールをストレージ・クラスに関連付けるには ' ストレージ・クラスの要求された属性と 'toragePools'additionalStoragePools'`excludeStoragePools' リストの両方が必要ですストレージクラスを作成すると、 Trident はバックエンドごとに提供される属性とプールを、ストレージクラスから要求された属性とプールと比較します。要求された属性とプール名がストレージプールの属性と名前ですべて一致した場合、 Astra Trident がそのストレージプールを、そのストレージクラスに適した一連のストレージプールに追加します。さらに、属性がストレージクラスの要求された属性のすべてまたは一部を満たしていない場合でも、 Astra Trident は、そのセットに「 additionalStoragePools 」リストにリストされているすべてのストレージプールを追加します。ストレージ・クラスのストレージ・プールを上書きして ' ストレージ・クラスに使用しないようにするには 'excludeStoragePools' リストを使用する必要がありますAstra Trident では、新しいバックエンドを追加するたびに同様のプロセスが実行され、ストレージプールが既存のストレージクラスのストレージクラスを満たしているかどうかが確認され、除外済みとマークされているストレージが削除されます。</block>
  <block id="668ccb4dd1c284f07a3062637c57d21a" category="paragraph">Trident がさらに、ストレージクラスとストレージプールの間の関連付けを使用して、ボリュームのプロビジョニング先を決定します。ボリュームを作成すると、最初にそのボリュームのストレージクラス用の一連のストレージプールが Trident から取得されます。 また、ボリュームにプロトコルを指定した場合、 Astra Trident は要求されたプロトコルを提供できないストレージプールを削除します（たとえば、 NetApp HCI / SolidFire バックエンドはファイルベースのボリュームを提供できませんが、 ONTAP NAS バックエンドはブロックベースのボリュームを提供できません）。Trident がこのセットの順序をランダム化し、ボリュームを均等に分散してから、各ストレージプールでボリュームを順番にプロビジョニングしようとします。成功した場合は正常に返され、プロセスで発生したエラーが記録されます。Astra Trident は、要求されたストレージクラスとプロトコルで使用可能なすべてのストレージプールで * プロビジョニングに失敗した場合にのみ、障害 * を返します。</block>
  <block id="3d522b99ca94333433532daa23e7ceab" category="summary">Trident が提供する Astra のインストール、設定、アップグレード、トラブルシューティングに関する FAQ を掲載しています。</block>
  <block id="af2a4d2810d86aa0169c117f82682f9a" category="doc">よくある質問</block>
  <block id="96ab491ef73d5db0cd15f55e1552cc22" category="section-title">一般的な質問</block>
  <block id="b34c3d20de0f1b2c7a69bdc59002ad47" category="section-title">Trident がリリースされる頻度を教えてください。</block>
  <block id="2f55088c7d055eb361252b15d5d7af10" category="paragraph">Trident は、 1 月、 4 月、 7 月、 10 月の 3 カ月ごとにリリースされます。Kubernetes のリリースから 1 カ月後です。</block>
  <block id="15602d1e4b699ebca549a3d953672d8c" category="section-title">Astra Trident は、特定のバージョンの Kubernetes でリリースされたすべての機能をサポートしていますか。</block>
  <block id="d860923e20119473e7f7d50683cb0559" category="paragraph">Astra Trident は、通常、 Kubernetes でアルファ機能をサポートしていません。Trident は、 Kubernetes ベータリリースに続く 2 つの Trident リリースでベータ機能をサポートしています。</block>
  <block id="52ffcf336df0055235949cf324a8624b" category="section-title">Astra Trident には、他のネットアップ製品との依存関係はありますか。</block>
  <block id="9a10bc69a2553cd055c7b66932fd3864" category="paragraph">Astra Trident は、他のネットアップソフトウェア製品に依存しないため、スタンドアロンアプリケーションとして機能します。ただし、ネットアップのバックエンドストレージデバイスが必要です。</block>
  <block id="bda04f64eaa9613cb4923cf43e24954c" category="section-title">Astra Trident の設定の詳細をすべて取得するにはどうすればよいですか。</block>
  <block id="6d6d1fbb6191413b3262aed487048f1e" category="paragraph">tridentctl get コマンドを使用して 'Astra Trident の構成に関する詳細情報を取得します</block>
  <block id="d8634bcd1659c9cdf6f1a7a92ec00c30" category="section-title">Astra Trident を使用してストレージをプロビジョニングする方法に関するメトリクスを取得できますか。</block>
  <block id="1435574cfec44734b2bfc2b94327b118" category="paragraph">はい。Trident 20.01 には、管理対象のバックエンドの数、プロビジョニングされたボリュームの数、消費されたバイト数など、 Astra Trident の動作に関する情報を収集するために使用できる Prometheus エンドポイントが導入されています。また、 Cloud Insights を使用して監視と分析を行うこともできます。</block>
  <block id="3e9ebf4af3f0b9d1852396d46171ef99" category="section-title">Astra Trident を CSI プロビジョニング担当者として使用すると、ユーザエクスペリエンスは変化しますか。</block>
  <block id="05f95d89af1ccd9b986014406a4b1fc8" category="paragraph">いいえユーザエクスペリエンスと機能に関する変更はありません。使用されるプロビジョニング名は csi.trident.netapp.io` です現在および将来のリリースで提供される新しい機能をすべて使用する場合は、 Astra Trident をインストールする方法を推奨します。</block>
  <block id="0a7e87df44869b8d60a83f35d1e2747b" category="section-title">Kubernetes クラスタに Astra Trident をインストールして使用</block>
  <block id="ffb25b8f3453272318fba778e825268f" category="section-title">サポートされている etcd のバージョンは何ですか。</block>
  <block id="6a3ad0d68dcfe0164611dadb7f7656f9" category="paragraph">Astra Trident はもはや「 etcd 」を必要としない。状態を維持するために CRD を使用します。</block>
  <block id="bde6cb03741f92107c63aeebe62d3278" category="section-title">Astra Trident はプライベートレジストリからのオフラインインストールをサポートしていますか。</block>
  <block id="eeabb890ce57551c5685ffb613b78406" category="paragraph">はい、 Astra Trident はオフラインでインストールできます。を参照してください <block ref="f0cd5c2694f3680f6758ce5ce7e21a5b" category="inline-link-macro-rx"></block>。</block>
  <block id="1c51806b370d428d5779dbcacd940174" category="section-title">Astra Trident はリモートからインストールできますか。</block>
  <block id="bf858450c271da75a3df3a15ca761330" category="paragraph">はい。Astra Trident 18.10 以降では、クラスタへのアクセスが「 kubectl 」に設定されている任意のマシンからのリモートインストール機能がサポートされています。kubectl アクセスが確認されたら ( たとえば ' リモート・マシンから kubectl get nodes コマンドを起動して確認します ) ' インストール手順に従います</block>
  <block id="12694c2de4575e39a6f7e81d55e35de9" category="section-title">Astra Trident でハイアベイラビリティを構成できますか。</block>
  <block id="f1cf2ca3af6ca7c374ad2104f570c790" category="paragraph">Astra Trident は、 1 つのインスタンスで Kubernetes Deployment （ ReplicaSet ）としてインストールされるため、 HA が組み込まれています。導入環境内のレプリカの数は増やすべきではありません。Astra Trident がインストールされているノードが失われた場合や、ポッドにアクセスできない場合は、 Kubernetes によって、クラスタ内の正常なノードにポッドが自動的に再導入されます。Astra Trident はコントロールプレーンのみであるため、 Astra Trident を再導入しても、現在マウントされているポッドには影響しません。</block>
  <block id="1656e4b34abdb6d497b40cac65366767" category="section-title">Astra Trident は kube-system ネームスペースにアクセスする必要がありますか。</block>
  <block id="6f67e1edfd4aa5b0e695528a9c7d8898" category="paragraph">Astra Trident は Kubernetes API Server からデータを読み取り、アプリケーションが新しい PVC を要求するタイミングを判断して、 kube-system へのアクセスを必要とします。</block>
  <block id="16cdb35003b5bcf0f30556e0bc477511" category="section-title">Astra Trident で使用されるロールと権限を教えてください。</block>
  <block id="dd57666df1542a5c5c1c8ea446433dba" category="paragraph">Trident インストーラが Kubernetes ClusterRole を作成します。このロールには、 Kubernetes クラスタの PersistentVolume 、 PersistentVolumeClaim 、 StorageClass 、 Secret の各リソースへのアクセス権があります。を参照してください <block ref="21005beb39aa5b473ddc4fbc9c302e0b" category="inline-link-macro-rx"></block>。</block>
  <block id="8ff39a39871cc30228035bc0580a6af4" category="section-title">Astra Trident がインストールに使用するマニフェストファイルをローカルで生成できますか。</block>
  <block id="34edccb29a11f4f0728f07bbefd9d0e6" category="paragraph">必要に応じて、マニフェストファイルである Astra Trident のインストールに使用するものをローカルで生成して変更できます。を参照してください <block ref="21005beb39aa5b473ddc4fbc9c302e0b" category="inline-link-macro-rx"></block>。</block>
  <block id="e6af67b71bd46d7588b50f28e1414f9b" category="section-title">2 つの別々の Kubernetes クラスタに対して、同じ ONTAP バックエンド SVM を 2 つの別々の Astra Trident インスタンスに対して共有できますか。</block>
  <block id="7bbf9b47e035f0f9bb7c46098e78fb4d" category="paragraph">推奨されませんが、同じバックエンド SVM を 2 つの Astra Trident インスタンスに使用できます。インストール時に各インスタンスに一意のボリューム名を指定するか、「 setup/backend.json 」ファイルに一意の「 S toragePrefix 」パラメータを指定します。これは、両方のインスタンスで同じ FlexVol を使用しないためです。</block>
  <block id="9840a5bb6278469ed550bcdcc92c29c5" category="section-title">ContainerLinux （旧 CoreOS ）に Astra Trident をインストールすることはできますか。</block>
  <block id="7a35680d9db247612b732ae47144f030" category="paragraph">Astra Trident は Kubernetes ポッドとして機能し、 Kubernetes が実行されている場所に導入できます。</block>
  <block id="5fc6de1b535ebb2a5380b6aa607e4cca" category="section-title">ネットアップの Cloud Volumes ONTAP で Astra Trident を使用できますか。</block>
  <block id="5d1cff73e26dc54ef52bdca5a29b319c" category="paragraph">はい、 Astra Trident は AWS 、 Google Cloud 、 Azure でサポートされています。</block>
  <block id="2ddee53d5c18f6e78f18dad82851303e" category="section-title">Astra Trident は Cloud Volume サービスと連携していますか。</block>
  <block id="404ebcdc21eb83145ddb36d33bd8c09e" category="paragraph">はい。 Astra Trident は、 Azure の Azure NetApp Files サービスと、 AWS や GCP の Cloud Volumes Service をサポートしています。</block>
  <block id="92d1656d06303733c5e1398fb273a17e" category="section-title">トラブルシューティングとサポート</block>
  <block id="9985a592486717ae388709b9267da4f9" category="section-title">ネットアップは Astra Trident をサポートしていますか。</block>
  <block id="cc56e0da96ceaf708545923f1094815b" category="paragraph">Astra Trident はオープンソースであり、無償で提供されますが、ネットアップのバックエンドがサポートされていれば、完全にサポートされています。</block>
  <block id="a3d907947129a58ee6f9e23074840c8f" category="section-title">サポートケースを作成するにはどうすればよいですか？</block>
  <block id="0265687df6c09d532b03477776c6d075" category="paragraph">サポートケースを作成するには、次のいずれかを実行します。</block>
  <block id="5dab8cca21a0ff4e72d4e2a1ee5156ea" category="list-text">サポートアカウントマネージャーに連絡して、チケットの発行に関するサポートを受けてください。</block>
  <block id="09ea0908fbfc4cde85bf416e35dc55c8" category="inline-link">ネットアップサポート</block>
  <block id="a13956d424374973d31e5883b8bf8b6a" category="list-text">連絡してサポートケースを作成します<block ref="116f7ad90a3c7441981f82d8f8fba4d5" category="inline-link-rx"></block>。</block>
  <block id="3e77e87e5ee8fb4f6f910f4cf0594fc2" category="section-title">サポートログバンドルを生成するにはどうすればよいですか？</block>
  <block id="7938aed248d09a5120eaf414e6c1d574" category="paragraph">tridentctl logs-a を実行して ' サポートバンドルを作成できますバンドルでキャプチャされたログに加えて、 kubelet ログをキャプチャして、 Kubernetes 側のマウントの問題を診断します。kubelet ログの取得手順は、 Kubernetes のインストール方法によって異なります。</block>
  <block id="2c3543f339dc749a508ed5e5e5aaae23" category="section-title">新しい機能のリクエストを発行する必要がある場合は、どうすればよいですか。</block>
  <block id="42bfc6e3acd67192d42135138102a1de" category="inline-link">Trident Github の利用</block>
  <block id="c2146fea25aea76bae1b5853f60a2f87" category="paragraph">に問題を作成します<block ref="47273b71915582ec6db59ad21099cfb9" category="inline-link-rx"></block> そして、概要の件名と問題に「 * RFE * 」と明記してください。</block>
  <block id="0aa1d7a95d75c0faa8302a803356b7b7" category="section-title">不具合を発生させる場所</block>
  <block id="4c1d312c39e7048d2c634824e243fdba" category="inline-link">Astra Trident Github</block>
  <block id="a814c59a6fef2fb64a2a32dedcf6f82e" category="paragraph">に問題を作成します<block ref="e71a8230f1c77ee7d957187295b859e4" category="inline-link-rx"></block>。問題に関連する必要なすべての情報とログを記録しておいてください。</block>
  <block id="fd0759571f12527967b660b5b327c65b" category="section-title">ネットアップが Trident の Astra について簡単に質問できたらどうなりますか。コミュニティやフォーラムはありますか？</block>
  <block id="3561f3a3c5576e2ce0dc0d1e268bb9b2" category="inline-link">Slack</block>
  <block id="f549c74b636d0ad80493d063fe6ecfc3" category="paragraph">ご質問、問題、ご要望がございましたら、弊社までお問い合わせください<block ref="2d9f7b5a7f56881c42c3b026a068eb36" category="inline-link-rx"></block> チームまたは GitHub 。</block>
  <block id="264c3819b5a8fdae87f1dc9af1988a90" category="section-title">ストレージシステムのパスワードが変更され、 Astra Trident が機能しなくなった場合、どのように回復すればよいですか。</block>
  <block id="061ec2ab4d383b8f20e15eda656db8f7" category="paragraph">バックエンドのパスワードを tridentctl update backend myBackend-f &lt;/path/to_new_backend.json &gt;-n trident` で更新します。この例の「 m yBackend` 」をバックエンド名に置き換え、「 /path/to _new_backend.json 」を正しい「 backend.json 」ファイルへのパスに置き換えます。</block>
  <block id="6100f37d544e87e462129f21e52bae7f" category="section-title">Astra Trident が Kubernetes ノードを検出できない。この問題を解決するにはどうすればよいですか</block>
  <block id="d5cf5c734786394c838bacc6597594c6" category="paragraph">Trident が Kubernetes ノードを検出できない場合、次の 2 つのケースが考えられます。Kubernetes または DNS 問題内のネットワーク問題が原因の場合もあります。各 Kubernetes ノードで実行される Trident ノードのデデーモンが Trident コントローラと通信し、 Trident にノードを登録できる必要があります。Astra Trident のインストール後にネットワークの変更が発生した場合、この問題が発生するのはクラスタに追加された新しい Kubernetes ノードだけです。</block>
  <block id="bcd549c9f0199c5b8d0b55f782bff9e8" category="section-title">Trident ポッドが破損すると、データは失われますか？</block>
  <block id="136fed1edd42bf8ca22358da037d17fa" category="paragraph">Trident ポッドが削除されても、データは失われません。Trident のメタデータは、 CRD オブジェクトに格納されます。Trident によってプロビジョニングされた PVS はすべて正常に機能します。</block>
  <block id="3de05f78e401869f4630ec8cabf339df" category="section-title">古いバージョンから新しいバージョンに直接アップグレードできますか（いくつかのバージョンはスキップします）？</block>
  <block id="ce44cbbc54839f39b351c091b0e3caa5" category="paragraph">ネットアップでは、 Astra Trident のメジャーリリースから次回のメジャーリリースへのアップグレードをサポートしています。バージョン 18.xx から 19.xx 、 19.xx から 20.xx にアップグレードできます。本番環境の導入前に、ラボでアップグレードをテストする必要があります。</block>
  <block id="0399b9e6348e554937a4d65efc97a1b8" category="section-title">Trident を以前のリリースにダウングレードできますか。</block>
  <block id="d307563c01953bd90a41ddd049f96d51" category="inline-link-macro">ダウングレードに関するセクション</block>
  <block id="0dedfa196a76d45ea496a2b3ebca850a" category="paragraph">ダウングレードする場合は、いくつかの要因を評価する必要があります。を参照してください <block ref="4734dc58d0c9739f3584035ff28dc1f1" category="inline-link-macro-rx"></block>。</block>
  <block id="ba9c59aa9d07b25e124dcf6ca88d689a" category="section-title">バックエンドとボリュームを管理</block>
  <block id="ffe72215dff9a93d62ee68905212025e" category="section-title">ONTAP バックエンド定義ファイルに管理 LIF とデータ LIF の両方を定義する必要がありますか。</block>
  <block id="3a35d35cc18d96684d78b36a81422e0c" category="paragraph">バックエンド定義ファイルには両方を指定することを推奨します。必須の管理 LIF は 1 つだけです。</block>
  <block id="f3997f0b9446951754e665cfe7591cef" category="section-title">Astra Trident が ONTAP バックエンドに CHAP を設定できるか。</block>
  <block id="805f73dde029c6c119993b4496bbdc9e" category="paragraph">はい。20.04 以降、 Astra Trident は ONTAP バックエンドに対して双方向 CHAP をサポートします。バックエンド構成では 'useCHAP =true' を設定する必要があります</block>
  <block id="952cc22022a80bb8079f6dd7afb289d2" category="section-title">Astra Trident を使用してエクスポートポリシーを管理するにはどうすればよいですか。</block>
  <block id="700815d44ae9a359311f64dbebbd8d42" category="paragraph">Astra Trident では、バージョン 20.04 以降からエクスポートポリシーを動的に作成、管理できます。これにより、ストレージ管理者はバックエンド構成に 1 つ以上の CIDR ブロックを指定でき、 Trident では、その範囲に含まれるノード IP を作成したエクスポートポリシーに追加できます。このようにして、 Astra Trident は特定の CIDR 内に IP アドレスが割り当てられたノードのルールの追加と削除を自動的に管理します。この機能には CSI Trident が必要です。</block>
  <block id="ddd61a9bf73a6cb2a2375bcdfbecbe15" category="section-title">データ LIF にポートを指定できるか。</block>
  <block id="c7449c080f216d9be59d8ff995985d39" category="paragraph">Astra Trident 19.01 以降では、 DataLIF にポートを指定できます。「 backend.json 」ファイルに「 managementlif 」として設定します。 &lt;IP アドレス &gt;:&lt;port&gt;`` 。たとえば、管理 LIF の IP アドレスが 192.0.2.1 で、ポートが 1000 の場合、「 managementlif 」：「 192.0.2.1 ： 1000」 を設定します。</block>
  <block id="1d08384060bd88a7801faae4fe346d06" category="section-title">管理 LIF とデータ LIF に IPv6 アドレスを使用できますか。</block>
  <block id="955e051838e60a39384f98e20ef67d47" category="paragraph">はい。Astra Trident 20.01 は、 ONTAP バックエンドの管理 LIF パラメータとデータ LIF パラメータに対して IPv6 アドレスを定義できます。アドレスが IPv6 のセマンティクスに準拠していること、および管理 LIF が角かっこで囲まれて定義されていることを確認する必要があります（例： [ec0d:6504:a9c1:ae67:53d1:4bdf:ab32:e233]`` ）。また、 IPv6 で動作するためには、 Astra Trident が「 --use-ipv6' 」フラグを使用してインストールされていることを確認する必要があります。</block>
  <block id="4c0e813a0bfed033d75bbfd8b18f556c" category="section-title">バックエンドの管理 LIF を更新できますか。</block>
  <block id="66d8fee83a94421ca416a2bdb33703b4" category="paragraph">はい。 tridentctl update backend コマンドを使用してバックエンド管理 LIF を更新できます。</block>
  <block id="c56cd7a01da4acc4fc86aa498cabfd99" category="section-title">バックエンドのデータ LIF を更新できるか。</block>
  <block id="9f811ba6d553275226edbacf07b2828b" category="paragraph">いいえ、バックエンドのデータ LIF を更新できません。</block>
  <block id="1e0e6fcec605e6450ba12b95969c8959" category="section-title">Kubernetes 向け Astra Trident で複数のバックエンドを作成できますか。</block>
  <block id="fb3cb30bfe23466a98407256c8b5164f" category="paragraph">Astra Trident では、同じドライバまたは別々のドライバを使用して、多数のバックエンドを同時にサポートできます。</block>
  <block id="6454319cc2398418b67f5b2df5aa5cd3" category="section-title">Astra Trident はバックエンドクレデンシャルをどのように保存しますか。</block>
  <block id="1d406f7ac7268b602da0989a4675480e" category="paragraph">Astra Trident では、バックエンドのクレデンシャルを Kubernetes のシークレットとして格納します。</block>
  <block id="64a610ffaa66abeebc73d8159b9f73ec" category="section-title">Astra Trident ではどのようにして特定のバックエンドを選択しますか。</block>
  <block id="c6e9fbb586ad55ddf4bbda9814c6adc9" category="paragraph">バックエンド属性を使用してクラスに適切なプールを自動的に選択できない場合は 'toragePools' パラメータと additionalStoragePools' パラメータを使用して ' 特定のプールセットを選択します</block>
  <block id="3beefa69a05dde01d93a438a943a5a7a" category="section-title">Astra Trident が特定のバックエンドからプロビジョニングされないようにするにはどうすればよいですか。</block>
  <block id="b5c265487a1fed6a3367664ccab664bb" category="paragraph">excludeStoragePools' パラメータを使用して 'Astra Trident がプロビジョニングに使用する一連のプールをフィルタリングし ' 一致するプールをすべて削除します</block>
  <block id="e124ac30adf3eea60a13cd5f93980e7e" category="section-title">同じ種類のバックエンドが複数ある場合、 Astra Trident はどのバックエンドを使用するかをどのように選択しますか。</block>
  <block id="c02ba3e7f8a02e0d1e29e2190a86e352" category="paragraph">同じタイプのバックエンドが複数設定されている場合、 Astra Trident は、「 torageClass 」および「 PersistentVolumeClaim 」にあるパラメータに基づいて適切なバックエンドを選択します。たとえば、複数の ONTAP-NAS ドライババックエンドがある場合、 Astra Trident は「 S torageClass 」と「 PersistentVolumeClaim 」のパラメータを組み合わせて照合し、「 S torageClass 」と「 PersistentVolumeClaim 」に記載された要件を提供できるバックエンドと照合します。この要求に一致するバックエンドが複数ある場合、 Astra Trident はいずれかのバックエンドからランダムに選択します。</block>
  <block id="7a2fd62f4a63259a7f94543a0ae01e76" category="section-title">Astra Trident は、 Element / SolidFire で双方向 CHAP をサポートしていますか。</block>
  <block id="b127099c71415d532da3a26ed73eb041" category="paragraph">はい。</block>
  <block id="7880810a250adc4ccf5108fe88325055" category="section-title">Trident が ONTAP ボリュームに qtree を導入する方法を教えてください。1 つのボリュームに配置できる qtree の数はいくつですか。</block>
  <block id="657cbdac1a85665b0b38b37c9a306925" category="paragraph">「 ONTAP-NAS-エコノミー 」ドライバは、同一の FlexVol （ 50 ～ 300 の範囲で設定可能）で最大 200 個の qtree を作成し、クラスタ・ノードあたり 100,000 個の qtree を作成し、クラスタあたり 240 万個を作成します。エコノミー・ドライバーがサービスを提供する新しい「 PersistentVolumeClaim 」を入力すると、ドライバーは新しい qtree にサービスを提供できる FlexVol がすでに存在するかどうかを確認します。qtree を提供できる FlexVol が存在しない場合は、新しい FlexVol が作成されます。</block>
  <block id="abbdd4298bb3e525fd172b2bbe5a451c" category="section-title">ONTAP NAS でプロビジョニングされたボリュームに UNIX アクセス権を設定するにはどうすればよいですか。</block>
  <block id="a535e502931280dfaa539ecd1cbdfc0c" category="paragraph">Astra Trident でプロビジョニングしたボリュームに対して UNIX 権限を設定するには、バックエンド定義ファイルにパラメータを設定します。</block>
  <block id="094ef47e6456d60b656401b0f2bbfcbd" category="section-title">ボリュームをプロビジョニングする際に、明示的な ONTAP NFS マウントオプションを設定するにはどうすればよいですか。</block>
  <block id="84ae0d345d4b749efbbc8103b0770e68" category="paragraph">Trident では、デフォルトでマウントオプションが Kubernetes でどの値にも設定されていません。Kubernetes ストレージクラスでマウントオプションを指定するには、次の例を実行します<block ref="cd55c45fce745b7032050d3a7a9ec326" category="inline-link-rx"></block>。</block>
  <block id="ae6bc3659bb0be0a7d9f98a63775b7c2" category="section-title">プロビジョニングしたボリュームを特定のエクスポートポリシーに設定するにはどうすればよいですか？</block>
  <block id="700a2008fea63d02c24b85f2f75d357e" category="paragraph">適切なホストにボリュームへのアクセスを許可するには、バックエンド定義ファイルに設定されている「 exportPolicy 」パラメータを使用します。</block>
  <block id="9d5813dee71bcbf3d3a03c62354c3e55" category="section-title">ONTAP を使用して Astra Trident 経由でボリューム暗号化を設定する方法を教えてください。</block>
  <block id="5467ffdca7c34378117097446e6a4408" category="paragraph">Trident によってプロビジョニングされたボリュームで暗号化を設定するには、バックエンド定義ファイルの暗号化パラメータを使用します。</block>
  <block id="ef1581716b653c4364dd5005dbe9e40a" category="section-title">Trident 経由で ONTAP に QoS を実装するには、どのような方法が最適ですか。</block>
  <block id="f412d672b51ea3c57812ebf3be0ddccb" category="paragraph">ONTAP の QoS を実装するには、「 torageClasses 」を使用します。</block>
  <block id="1c771b761835123a135e64f70567d768" category="section-title">Trident 経由でシンプロビジョニングやシックプロビジョニングを指定するにはどうすればよいですか。</block>
  <block id="0d97afe7a571dc39db1c810013844332" category="paragraph">ONTAP ドライバは、シンプロビジョニングまたはシックプロビジョニングをサポートします。ONTAP ドライバはデフォルトでシンプロビジョニングに設定されています。シックプロビジョニングが必要な場合は、バックエンド定義ファイルまたは「 torageClass 」を設定する必要があります。両方が設定されている場合は、「 torageClass 」が優先されます。ONTAP で次の項目を設定します。</block>
  <block id="2d0384de8b72e53c3476a478a5d4ec53" category="list-text">'S torageClass' で 'provisioningType' 属性を thick に設定します</block>
  <block id="3764067c4b14276efb241c511c8b0cc2" category="list-text">バックエンド定義ファイルで 'backend spaceReserve パラメータを volume に設定して ' シックボリュームを有効にします</block>
  <block id="d4391b26a81fead46afc74243c4029aa" category="section-title">誤って PVC を削除した場合でも、使用中のボリュームが削除されないようにするにはどうすればよいですか。</block>
  <block id="e58a684cd1a44d4879defbb2ec06b9a4" category="paragraph">Kubernetes では、バージョン 1.10 以降、 PVC 保護が自動的に有効になります。</block>
  <block id="8d766c7d692523686b8954d72ee86ea4" category="section-title">Astra Trident によって作成された NFS PVC を拡張できますか。</block>
  <block id="328e34871ba32779f27f3e8a8e78499a" category="paragraph">はい。Astra Trident によって作成された PVC を拡張できます。ボリュームの自動拡張は ONTAP の機能であり、 Trident には適用されません。</block>
  <block id="f2f324d5d940b44cd307b613c6990e0c" category="section-title">Astra Trident の外部で作成したボリュームを Astra Trident にインポートできますか。</block>
  <block id="c894ce628e51d8d9d062a1e83cda37c8" category="paragraph">19.04 以降では、ボリュームインポート機能を使用してボリュームを Kubernetes に移行できます。</block>
  <block id="3319194e0ba07a6aa327aefa1ab1e41f" category="section-title">ボリュームが SnapMirror データ保護（ DP ）モードまたはオフラインモードの間にインポートできますか。</block>
  <block id="0b10afe39923054016a71caf423fdec6" category="paragraph">外部ボリュームが DP モードになっているかオフラインになっている場合、ボリュームのインポートは失敗します。次のエラーメッセージが表示されます。</block>
  <block id="9fd7d017b60cc366b6bc3b6e55213abe" category="section-title">Astra Trident によって作成された iSCSI PVC を拡張できますか。</block>
  <block id="29e2faaced65d1dd4c920c60e854e550" category="paragraph">Trident 19.10 は CSI プロビジョニング担当者を使用した iSCSI PVS の拡張をサポートしています。</block>
  <block id="eed67b2d196c61d9c6cf4a50878ba446" category="section-title">リソースクォータをネットアップクラスタに変換する方法</block>
  <block id="45f78013e46c8f3e884ed0f7becbd5ab" category="paragraph">Kubernetes ストレージリソースクォータは、ネットアップストレージの容量があるかぎり機能します。容量不足が原因でネットアップストレージが Kubernetes のクォータ設定を受け入れられない場合、 Astra Trident はプロビジョニングを試みますがエラーになります。</block>
  <block id="491a93842f7a65b8cbe82aca71db0d3f" category="section-title">Trident を使用してボリューム Snapshot を作成できますか。</block>
  <block id="9792ac41ce6f91861f84548e1b4a2b1c" category="paragraph">はい。Trident が、 Snapshot からオンデマンドのボリューム Snapshot と永続的ボリュームを作成できるようになりました。スナップショットから PVS を作成するには 'VolumeSnapshotDataSource フィーチャーゲートが有効になっていることを確認します</block>
  <block id="1eedb8a6574b0c07ea61689a7e3ec8d4" category="section-title">Astra Trident のボリュームスナップショットをサポートするドライバを教えてください。</block>
  <block id="24c649a639a2c31810a4dfc6ed0190da" category="section-title">ONTAP を使用して Astra Trident でプロビジョニングしたボリュームの Snapshot バックアップを作成する方法を教えてください。</block>
  <block id="0bdcd128fab544a7df404bc496a4126e" category="paragraph">これは 'ONTAP-NAS' 'ONTAP-SAN' および 'ONTAP-NAS-flexgroup ドライバで利用できますFlexVol レベルでは「 ONTAP-SAN-エコノミー 」ドライバに「スナップショットポリシー」を指定することもできます。</block>
  <block id="933b520ff6d70262ddb482995c684d57" category="paragraph">これは「 ONTAP-NAS-エコノミー 」ドライバでも利用できますが、 FlexVol レベルの細分性ではなく、 qtree レベルの細分性で利用できます。Astra Trident によってプロビジョニングされたボリュームのスナップショットを作成できるようにするには、バックエンドパラメータオプション「 napshotPolicy 」を、 ONTAP バックエンドで定義されている目的のスナップショットポリシーに設定します。ストレージコントローラで作成された Snapshot は Astra Trident で認識されません。</block>
  <block id="594e8a352537de25938bdd663d6211b5" category="section-title">Trident 経由でプロビジョニングしたボリュームの Snapshot リザーブの割合を設定できますか。</block>
  <block id="8db5662205f3a6430af4bea6f08e7d45" category="paragraph">はい。バックエンド定義ファイルで「スナップショット予約」属性を設定することで、 Astra Trident を介してスナップショットコピーを保存するためのディスク領域の特定の割合を予約できます。バックエンド定義ファイルで「 napshotPolicy 」と「 napshotReserve 」を設定した場合、バックエンドファイルに記載されている「 napshotReserve 」の割合に従ってスナップショット予約の割合が設定されます。「スナップショット予約」の割合の数値が指定されていない場合、 ONTAP はデフォルトでスナップショット予約の割合を 5 に設定します。「スナップショット予約」オプションが「なし」に設定されている場合、スナップショット予約の割合は 0 に設定されます。</block>
  <block id="6b0d34d8a0749198a6b80eec69479c86" category="section-title">ボリュームの Snapshot ディレクトリに直接アクセスしてファイルをコピーできますか。</block>
  <block id="eb3a2d1eb3c4022269f4c6837332311a" category="paragraph">はい。バックエンド定義ファイルで「 snapmirror directionDir 」パラメータを設定することで、 Trident によってプロビジョニングされたボリューム上のスナップショットディレクトリにアクセスできます。</block>
  <block id="81dbf5e91cc69bfcf6477128389d8a25" category="section-title">Astra Trident を使用して、ボリューム用の SnapMirror をセットアップできますか。</block>
  <block id="64dd4ea74b402889a9c341da491f4933" category="paragraph">現時点では、 SnapMirror は ONTAP CLI または OnCommand System Manager を使用して外部に設定する必要があります。</block>
  <block id="e321bf6d54ded18df56a41ea51223a2a" category="section-title">永続ボリュームを特定の ONTAP Snapshot にリストアするにはどうすればよいですか？</block>
  <block id="5325f5d2cf63aaaa6610f09e8aa4dc35" category="paragraph">ボリュームを ONTAP Snapshot にリストアするには、次の手順を実行します。</block>
  <block id="4e789db936072df2058e9f271a9b8db8" category="list-text">永続ボリュームを使用しているアプリケーションポッドを休止します。</block>
  <block id="b34baa75f4f799a23b19de9b94e86868" category="list-text">ONTAP CLI または OnCommand システムマネージャを使用して、必要な Snapshot にリバートします。</block>
  <block id="08754f2800804f1fe3673c858b4b56e0" category="list-text">アプリケーションポッドを再起動します。</block>
  <block id="0d3ef54a4cc337b5d907b6639e51c6d4" category="section-title">お客様 / テナントごとにストレージクラスの使用状況を分離するにはどうすればよいですか。</block>
  <block id="fda1b35892cb6f61447f0e49415937d9" category="paragraph">Kubernetes では、ネームスペース内のストレージクラスは使用できません。ただし、 Kubernetes を使用すると、ネームスペースごとにストレージリソースクォータを使用することで、ネームスペースごとに特定のストレージクラスの使用量を制限できます。特定のストレージへのネームスペースアクセスを拒否するには、そのストレージクラスのリソースクォータを 0 に設定します。</block>
  <block id="30d965eef5ba25c6b9998ae38270b43e" category="doc">法的通知</block>
  <block id="c59ae8d7beeb519a23478ab048af482c" category="paragraph"><block ref="c59ae8d7beeb519a23478ab048af482c" category="inline-link-macro-rx"></block></block>
  <block id="55847a7d73d44b84804f47ee7863b80f" category="summary">Astra Trident の導入が完了したら、バックエンドの作成、ストレージクラスの作成、ボリュームのプロビジョニング、ポッドでのボリュームのマウントを実行できます。</block>
  <block id="0b0ca016c0d99a4845777aeeebb032ac" category="section-title">手順 1 ：バックエンドを作成する</block>
  <block id="4f374e8dd911d1e70f7b7a53fdac1f2a" category="paragraph">これで、 Astra Trident がボリュームのプロビジョニングに使用するバックエンドを作成できるようになります。そのためには、必要なパラメータを含む「 backend.json 」ファイルを作成します。さまざまなバックエンドタイプのサンプル構成ファイルは 'sample-input' ディレクトリにあります</block>
  <block id="8b389d7be97d6c697a4e775ff8338905" category="paragraph">を参照してください <block ref="49641f5ab61d7a6ce07b1b6ba31204f8" category="inline-link-macro-rx"></block> バックエンドタイプのファイルを設定する方法の詳細については、を参照してください。</block>
  <block id="af445e1d9a0a481ba7f9b5f01df23a3d" category="paragraph">作成に失敗した場合は、バックエンド設定に何か問題があります。次のコマンドを実行すると、ログを表示して原因を特定できます。</block>
  <block id="00715976efdc0cc3b7c5a8512fb0e08d" category="inline-link-macro">トラブルシューティング</block>
  <block id="936067ad00da88d877acb024c96f3129" category="paragraph">問題に対処したら、この手順の最初に戻ってやり直してください。トラブルシューティングのヒントについては、を参照してください <block ref="fa8c952f2dea85664a3e3e5dc210aa4c" category="inline-link-macro-rx"></block> セクション。</block>
  <block id="0cf7ce61dd48f9396923c05ab8f5e302" category="section-title">手順 2 ：ストレージクラスを作成する</block>
  <block id="8c566ff50efde64c700b1188e862c328" category="inline-link">ストレージクラス</block>
  <block id="c44e939795fbf61079e70122d3e77735" category="paragraph">Kubernetes ユーザは、を指定する Persistent Volume クレーム（ PVC ）を使用してボリュームをプロビジョニングします<block ref="bc70014ff50467618a31ef39142ab151" category="inline-link-rx"></block> 名前で検索できます。詳細情報はユーザには表示されませんが、ストレージクラスは、そのクラスに使用されるプロビジョニングツール（この場合は Trident ）と、そのクラスがプロビジョニングツールにもたらす意味を特定します。</block>
  <block id="56cc6184a3bc4387f839993b204e4c5f" category="paragraph">ストレージクラスの Kubernetes ユーザがボリュームを必要なときに指定するストレージクラスを作成します。このクラスの構成では、前の手順で作成したバックエンドをモデリングし、 Astra Trident が新しいボリュームのプロビジョニングにこのバックエンドを使用するようにする必要があります。</block>
  <block id="45a1f9131ca1bec07f47f45a194d9d58" category="paragraph">最もシンプルなストレージクラスは ' インストーラに付属の 'sample -input/storage-class-csI.yamml.templ' ファイルに基づいていますこれは '__ backend_type___ をストレージドライバ名に置き換えます</block>
  <block id="b4987be37083b7196f23d63ddd5d56df" category="paragraph">これは Kubernetes オブジェクトなので 'kubectl' を使用して Kubernetes で作成します</block>
  <block id="a191af7083288f9d9556f3ebcd821a34" category="paragraph">Kubernetes と Astra Trident の両方で、 * basic-csi * ストレージクラスが表示され、 Astra Trident がバックエンドのプールを検出しました。</block>
  <block id="3bdc1ec6969d1615bb58d7f0443bf1c2" category="section-title">手順 3 ：最初のボリュームをプロビジョニングします</block>
  <block id="a58b17a231318aa42ed47bfe0be43447" category="inline-link">永続的ボリュームの要求</block>
  <block id="512b66e66e82ba09d70c3e9f784aa8af" category="paragraph">これで、最初のボリュームを動的にプロビジョニングできます。これは Kubernetes を作成することで実現されます<block ref="95c09f225fe48abca705fd090f5f4c89" category="inline-link-rx"></block> （ PVC ）オブジェクト。</block>
  <block id="61e8eac65ddef26d4c4230d88cae8498" category="paragraph">作成したストレージクラスを使用するボリュームの PVC を作成します。</block>
  <block id="b357acbdc339437d16e4e967ecc6d0c2" category="paragraph">例については 'sample-input/pvc-basic-csI.yaml を参照してくださいストレージクラス名が、作成した名前と一致していることを確認します。</block>
  <block id="2fe8954464ccf22d2d06423b358f38a7" category="section-title">手順 4 ：ボリュームをポッドにマウントする</block>
  <block id="366556d176e685870d134b7fc6e9ca3c" category="paragraph">次に、ボリュームをマウントします。次に '/usr/share/nginx/html' の下に PV をマウントする nginx ポッドを起動します</block>
  <block id="6f5eca6ad9143d35bb33a1a17df3a848" category="paragraph">この時点でポッド（アプリケーション）は存在しなくなりますが、ボリュームはまだ存在しています。必要に応じて、別のポッドから使用できます。</block>
  <block id="3ba419ecccf23f33a6bae5d23f206fdd" category="paragraph">ボリュームを削除するには、要求を削除します。</block>
  <block id="1a00c9156117d9ec9fa3e45d5a757d04" category="paragraph">これで、次のような追加タスクを実行できます。</block>
  <block id="ce2c6a300f520205e891fc45009ec4c3" category="inline-link-macro">追加のバックエンドを設定</block>
  <block id="642bfa81920103d4177bb3fdf6f9186f" category="list-text"><block ref="642bfa81920103d4177bb3fdf6f9186f" category="inline-link-macro-rx"></block></block>
  <block id="93e8ba41e1ebcadc1338cc7f75109210" category="inline-link-macro">追加のストレージクラスを作成する。</block>
  <block id="daa40449d28fbb16d2bcd8a8434d05e6" category="list-text"><block ref="daa40449d28fbb16d2bcd8a8434d05e6" category="inline-link-macro-rx"></block></block>
  <block id="ccb0658b39bdba7456d6a536d2d07732" category="summary">Trident のインストーラでは、属性をカスタマイズできます。</block>
  <block id="eabcee1fa9f08716f26be6d1b73360fe" category="paragraph">Trident インストーラを使用して属性をカスタマイズできます。たとえば、 Trident イメージをプライベートリポジトリにコピーした場合、 -trident-image' を使用してイメージ名を指定できます。Trident イメージと必要な CSI サイドカーイメージをプライベートリポジトリにコピーした場合は、 --image_registry' スイッチを使用してリポジトリの場所を指定することをお勧めします。この場合、形式は「 &lt;registry fqdn&gt;[:port] 」です。</block>
  <block id="6fdfbf3444ce4e12e3375405bdd10237" category="paragraph">Astra Trident が自動的にワーカーノードを構成するには、「 --enable-node-prep 」を使用します。この機能の詳細については、を参照してください <block ref="144c3ced0f46507a846b2964eace5739" category="inline-link-macro-rx"></block>。</block>
  <block id="d924f91616fe4accc876113a346ee8ad" category="admonition">ワーカーノードの自動準備は * ベータ機能 * で、非本番環境でのみ使用できます。</block>
  <block id="8355509d170c8a61d236e927a5fcc6e2" category="paragraph">通常の「 /var/lib/kubelet 」以外のパスに「 kubelet 」がデータを保持している Kubernetes の配布を使用する場合は、「 --kubelet -dir 」を使用して代替パスを指定できます。</block>
  <block id="47cd697cf3c9dcf916f70a0007956c1d" category="paragraph">インストーラの引数で許可される範囲を超えてインストールをカスタマイズする必要がある場合は、配置ファイルをカスタマイズすることもできます。--generate-custom-yaml パラメータを使用して、インストーラの「 etup 」ディレクトリに次の YAML ファイルを作成します。</block>
  <block id="0858f0ee003d52951161848adffe1b31" category="list-text">trident-clusterrolebinding.yaml</block>
  <block id="af73689aedfa47bd2a7cf144917b0642" category="list-text">trident-deployment.yaml</block>
  <block id="1d53fd876245951bb003eb47849ff39d" category="list-text">trident-CRDs .YAML</block>
  <block id="b17dbe8acaeca82c72d25948de03eefc" category="list-text">trident-clusterrolment.yaml</block>
  <block id="ecb2b56a094cc1cbd3ac263b23d91f8b" category="list-text">trident-demimonimon.yamml`</block>
  <block id="c5e462ae653234d0ea0e98a000e62a97" category="list-text">trident-service.yaml</block>
  <block id="f1347677de6873f8ddce6d736cba9a63" category="list-text">trident-namespac.yaml</block>
  <block id="2539c7e25ada2a2cdae0eb4c4633b893" category="list-text">trident-ServiceAccount.yaml</block>
  <block id="385d099ed91e83dbe20ea05fbed68e22" category="paragraph">これらのファイルを生成したら、必要に応じて変更し、「 --use-custom-yaml 」を使用してカスタム展開をインストールできます。</block>
  <block id="237bc513b62b16e8ddd1661150fb7f94" category="summary">Trident のオペレータが、 Astra Trident を導入できます。Trident オペレータは、手動または Helm を使用して導入できます。</block>
  <block id="cba9c445dab954e3483f9e5bef9f12c5" category="doc">Trident オペレータとともに導入</block>
  <block id="4a052772dca278b7be31d54ca9f21831" category="inline-link-macro">基本概念</block>
  <block id="e029dd3737acab556b62bda0be50840c" category="admonition">をまだ理解していない場合は、を参照してください <block ref="0342248ee22d08eaf42465a29ddd67ec" category="inline-link-macro-rx"></block>今こそ、そのための絶好の機会です。</block>
  <block id="df2aaa5fa27e9bdafcb6bb0a4367b7d6" category="paragraph">Astra Trident を導入するには、次の前提条件を満たしている必要があります。</block>
  <block id="3a1ac050b1160a02cbd3c9ea84228191" category="list-text">サポートされているネットアップストレージシステムを利用できるようにしておきます。</block>
  <block id="6a477d2ddba6ea3bc12088f821ce4e64" category="list-text">すべての Kubernetes ワーカーノードからボリュームをマウントできます。</block>
  <block id="6d8c90e9c1152c55e27e8166d128b927" category="list-text">使用する Kubernetes クラスタを管理するために 'kubectl( OpenShift を使用している場合は 'OC) をインストールして構成した Linux ホストがあります</block>
  <block id="c40e5b69838954fb37e4c3a433e341a8" category="list-text">「 KUBECONFIG 」環境変数を、 Kubernetes クラスタ構成を指すように設定しておきます。</block>
  <block id="fe116e93fbfba0aec359f5fde363784c" category="inline-link-macro">Astra Trident に必要な機能ゲート</block>
  <block id="6cb07e07cf0a13978f0d7384acc48f1a" category="list-text">を有効にしておきます <block ref="53fb1a9f15d8db1182d68d20590366cf" category="inline-link-macro-rx"></block>。</block>
  <block id="dd3de2609b612d76ef4c71b97b8d6100" category="inline-link">CLI へのアクセスを有効にする手順は、ユーザが行ってください</block>
  <block id="c585967fa32d82c5e3c24bd63926c6a0" category="list-text">Kubernetes と Docker Enterprise を併用する場合は、<block ref="57562caf1c76e1a261b7e2f8c3d113f9" category="inline-link-rx"></block>。</block>
  <block id="b430504ce0f6755a2be91a9a221c144e" category="paragraph">それはすべてですか？最高！それでは始めましょう。</block>
  <block id="f9589cad119238efbce2b063d5225fb4" category="section-title">Helm を使用して Trident オペレータを導入します</block>
  <block id="8a414e5c564a0c9e7a0f799a3c8cf47c" category="paragraph">Helm を使用して Trident オペレータを導入するには、以下の手順を実行します。</block>
  <block id="dc2d0674739dcd145f5287a7d619ee05" category="paragraph">上記の前提条件に加え、 Helm を使用して Trident Operator を導入するには、次のものが必要です。</block>
  <block id="8f5e62e2d03d87aeaafa8d4776fb7a79" category="list-text">Kubernetes 1.17 以降</block>
  <block id="2e1b3f44683eee188be985693c4af5e1" category="list-text">Helm バージョン 3</block>
  <block id="8a247589aa6f5931b3416e5dd64ba361" category="inline-link">Trident GitHub</block>
  <block id="c8435da18bdd7e5fe967b241d24c9849" category="list-text">からインストーラバンドルをダウンロードします<block ref="27269fc0a05ad3df94013b630291d22b" category="inline-link-rx"></block> ページインストーラバンドルには 'Helm チャートが用意されています</block>
  <block id="bfd69e00e956b426c17001fc7ae7afbe" category="list-text">「 helm install 」コマンドを使用して、展開の名前を指定します。次の例を参照してください。</block>
  <block id="e366a20246a41520da551be510c1d658" category="paragraph">インストール中に設定データを渡すには、次の 2 つの方法があります。</block>
  <block id="a61e25800624ce452a1c4082ce082d9b" category="list-text">`--values] ( または '-f`) : オーバーライドを含む YAML ファイルを指定しますこれは複数回指定でき、右端のファイルが優先されます。</block>
  <block id="7dc8a47a7055ee868486daae4c256916" category="list-text">`--set`: コマンドラインでオーバーライドを指定します</block>
  <block id="f64fcf716c27478cdc36b1f36306d5eb" category="paragraph">たとえば ' デフォルト値の `debug` を変更するには ' 次のように --set` コマンドを実行します</block>
  <block id="24da04b0777d00c6fe43de99895058bd" category="paragraph">Helm チャートの一部である `values] の .yaml ファイルには、キーのリストとデフォルト値が表示されます。</block>
  <block id="1294c366742670bd28702f7cafffc981" category="paragraph">「 helm list 」は、名前、名前空間、グラフ、ステータスなど、インストールに関する詳細を表示します。 アプリケーションのバージョン、リビジョン番号など。</block>
  <block id="3470548c691fb90c7ea544350c2c7052" category="section-title">Trident オペレータを手動で導入</block>
  <block id="8f3f1888bbf317edb14f0f439c7d142f" category="paragraph">Trident のオペレータを手動で導入するには、以下の手順を実行します。</block>
  <block id="f7fca6c4035d50dff676b2d20fe511ba" category="section-title">ステップ 1 ： Kubernetes クラスタを確認する</block>
  <block id="ea8cda06a0e70ad34c1b9ab1b7135105" category="inline-link-macro">サポートされる Kubernetes クラスタ</block>
  <block id="619cde7335e798082dc3bfdbe30708a0" category="paragraph">まず、 Linux ホストにログインして、 _working _ 、 <block ref="ac355729d1ddc95a290738ca862fed08" category="inline-link-macro-rx"></block> に必要な権限があることを確認します。</block>
  <block id="e420b75ec3bc014e3f69c43b2383768b" category="admonition">OpenShift では、以降のすべての例で「 kubectl 」ではなく「 OC 」を使用し、「 OC login-u SYSTEM ： admin 」または「 OC login-u kube-admin 」を実行して最初に「 *system:admin 」としてログインします。</block>
  <block id="d14fa1adb2805f01b2a616f5ef9d25be" category="paragraph">Kubernetes クラスタ管理者の権限があるかどうかを確認するには、次のコマンドを実行します。</block>
  <block id="f67b776be47148789a46badee3f77607" category="paragraph">Docker Hub のイメージを使用してポッドを起動し、ポッドネットワーク経由でストレージシステムにアクセスできるかどうかを確認するには、次のコマンドを実行します。</block>
  <block id="b51ca564a2763a36e8eff661a1e45814" category="section-title">手順 2 ：オペレータをダウンロードして設定します</block>
  <block id="2078c81a90072659fba28be2f6863a52" category="admonition">21.01 以降、 Trident Operator はクラスタを対象とします。Trident オペレータを使用して Trident をインストールするには、「 TridentOrchestrator 」カスタムリソース定義（ CRD ）を作成し、その他のリソースを定義する必要があります。Astra Trident をインストールする前に、次の手順を実行してオペレータをセットアップする必要があります。</block>
  <block id="76e266ddd09c36b072fda03f840a24df" category="list-text">の最新バージョンをダウンロードします<block ref="d4cf8040e05d7d00be7e40a7abf8ee09" category="inline-link-rx"></block> _Downloads_section から抽出します</block>
  <block id="f3d3e6090d613a233f190256fd5f4fa3" category="list-text">適切な CRD マニフェストを使用して、「 TridentOrchestrator 」 CRD を作成します。次に、後で「 TridentOrchestrator 」カスタムリソースを作成して、オペレータによってインストールをインスタンス化します。</block>
  <block id="337d79852891a37d41285c9101c3fff4" category="paragraph">次のコマンドを実行します。</block>
  <block id="2fd9409a1ac929d355820ffd5accc531" category="list-text">「 TridentOrchestrator 」 CRD が作成されたら、オペレータの展開に必要な次のリソースを作成します。</block>
  <block id="cb410399b5d1d9b73f065ed14123f45d" category="list-text">オペレータのサービスアカウント</block>
  <block id="8078c9a60d1b454fe7572e23c307625e" category="list-text">ClusterRole および ClusterRoleBinding をサービスアカウントにバインドする</block>
  <block id="5e5472e17b92112eb99dbbae729e1a4b" category="list-text">専用の PodSecurityPolicy</block>
  <block id="dbbf8c6ec95775d28c3c6da1878bf8c3" category="list-text">演算子自体</block>
  <block id="3eb35ab5560d306167480f5846c3f66a" category="paragraph">Trident インストーラには、これらのリソースを定義するマニフェストが含まれています。デフォルトでは ' 演算子は trident' 名前空間に配置されます'trident' 名前空間が存在しない場合は ' 次のマニフェストを使用して名前空間を作成します</block>
  <block id="9d010a8f9df48de6abe7351f048fe2f7" category="list-text">デフォルトの 'trident` 名前空間以外の名前空間に演算子を配備するには '`erviceaccount.yaml 'clusterrolebinding.yaml ' および `operator.yML' マニフェストを更新し 'bundle.yaml を生成する必要があります</block>
  <block id="16f1c44dd25afde65aacbc201617651f" category="paragraph">次のコマンドを実行して YAML マニフェストを更新し、「 customizization.yaml 」を使用して「 bundle.yaml 」を生成します。</block>
  <block id="05f465d1f3f89d87686947655659abc3" category="paragraph">次のコマンドを実行してリソースを作成し、オペレータを配置します。</block>
  <block id="a0fa1784e85c80577b8b123157bd45da" category="list-text">展開後にオペレータのステータスを確認するには、次の手順を実行します。</block>
  <block id="1c76f442bb494f18915f305a59518ed1" category="paragraph">オペレータによる導入で、クラスタ内のいずれかのワーカーノードで実行されるポッドが正常に作成されます。</block>
  <block id="a770ca95121cc795b602f9af6af024fb" category="admonition">Kubernetes クラスタには、オペレータのインスタンスが * 1 つしか存在しないようにしてください。Trident のオペレータが複数の環境を構築することは避けてください。</block>
  <block id="b22134de94bce671f8ac945536b7497c" category="section-title">手順 3 ： Trident をインストールする</block>
  <block id="5693b155707eefef50a904b3b1523862" category="paragraph">これで、オペレータを使って Astra Trident をインストールする準備ができました。これには 'TridentOrchestrator を作成する必要がありますTrident インストーラには 'TridentOrchestrator を作成するための定義例が付属していますこれは 'trident' 名前空間にインストールされます</block>
  <block id="eda3cb9b284c6edd303631dd83beca97" category="inline-link-macro">Trident の導入をカスタマイズ</block>
  <block id="df1a9b2505f9a695dab238c459f4c11e" category="paragraph">Trident オペレータは 'TridentOrchestrator 仕様の属性を使用して 'Astra Trident のインストール方法をカスタマイズできますを参照してください <block ref="5d22c6b05e889509f3b16bf34345783f" category="inline-link-macro-rx"></block>。</block>
  <block id="f463fa7de78b2d3c00a2d47f9fc4ca50" category="paragraph">「 TridentOrchestrator 」のステータスは、インストールが成功したかどうかを示し、インストールされている Trident のバージョンを表示します。</block>
  <block id="ec53a8c4f07baed5d8825072c89799be" category="cell">ステータス</block>
  <block id="2763f33c904a183bd0ef06f9c4fb4403" category="cell">インストール中です</block>
  <block id="64162845794ff7262e665deec58a84f5" category="cell">オペレータは、この「 TridentOrchestrator 」 CR を使用して Astra Trident をインストールしています。</block>
  <block id="98dd43dfae05b11befe1f140e0ec787a" category="cell">インストール済み</block>
  <block id="2fe2cc0adf9b69a871d33ba220695cd4" category="cell">Astra Trident のインストールが完了しました。</block>
  <block id="c2aaea4dacecce78b34302e41fcef75e" category="cell">アンインストール中です</block>
  <block id="c27ff0e050a671f2eab32a372c9636bd" category="cell">オペレータは 'stra Trident をアンインストールしていますこれは 'pec.uninstall=true だからです</block>
  <block id="b78846123fdd78d5ab62451b855194e3" category="cell">アンインストール済み</block>
  <block id="f8a32612e33c768b5fa0dd033d91ce8d" category="cell">Astra Trident がアンインストールされました。</block>
  <block id="d7c8c85bf79bbe1b7188497c32c3b0ca" category="cell">失敗しました</block>
  <block id="273b9a9e933220f1963cbac7a7a46645" category="cell">オペレータは Astra Trident をインストール、パッチ適用、更新、またはアンインストールできませんでした。オペレータはこの状態からのリカバリを自動的に試みます。この状態が解消されない場合は、トラブルシューティングが必要です。</block>
  <block id="6909beea5b50605780e3411f879fe916" category="cell">更新中です</block>
  <block id="3201d58137fab497dea740d761a9733b" category="cell">オペレータが既存のインストールを更新しています。</block>
  <block id="902b0d55fddef6f8d651fe1035b7d4bd" category="cell">エラー</block>
  <block id="efaeca66375c8663b6d1d64f4886f267" category="cell">「 TridentOrchestrator 」は使用されません。別のファイルがすでに存在します。</block>
  <block id="e09245effc62059e51f926fad603e413" category="inline-link-macro">トラブルシューティング</block>
  <block id="06a69b41e25711d4ae5a561ed9518f18" category="paragraph">インストール中に 'TridentOrchestrator のステータスが Installing から Installed に変わります「失敗」ステータスが表示され、オペレータが自身で回復できない場合は、オペレータのログを確認する必要があります。を参照してください <block ref="d5a4e07afa9c1e3e2869e1c17ce11b3d" category="inline-link-macro-rx"></block> セクション。</block>
  <block id="a62e37b5d24190e57c50856ed67d1f30" category="paragraph">Astra Trident のインストールが完了しているかどうかを確認するには、作成したポッドを確認します。</block>
  <block id="cb61ddc6afc630830f76a754c29c509e" category="paragraph">また 'tridentctl を使用して 'Astra Trident のバージョンを確認することもできます</block>
  <block id="1c3da07a8a73bf0d4070c8c4b10d14c8" category="inline-link-macro">導入後のタスク</block>
  <block id="017115d0fb78b96eca56297dcaae750a" category="paragraph">これで、バックエンドを作成できます。を参照してください <block ref="6bfdfe984198635473da869595980b46" category="inline-link-macro-rx"></block>。</block>
  <block id="a03102a9f58cbddc7c8c4a6a8e198bc0" category="admonition">導入時の問題のトラブルシューティングについては、を参照してください <block ref="d5a4e07afa9c1e3e2869e1c17ce11b3d" category="inline-link-macro-rx"></block> セクション。</block>
  <block id="732d0805e41f2db48aa120c357324ee4" category="summary">Trident の導入には、 Trident のオペレータまたは tridentctl を使用できます。</block>
  <block id="42f8643eb52a942747937327c72c8361" category="doc">導入の概要</block>
  <block id="2a4a70c87489dab5d6f93148a8c11c3d" category="section-title">導入方法を選択します</block>
  <block id="c41362d320971e4e8dbaa3c6a25fbdf8" category="paragraph">使用する導入方法を決定するには、次の点を考慮してください。</block>
  <block id="6e43a74295a2af0eedc17051e56d7e1c" category="section-title">Trident のオペレータが必要な理由</block>
  <block id="4f5dbc74e3448e08fe0e7bfd62876fc8" category="inline-link-macro">Trident オペレータ</block>
  <block id="567dcfd6302e5511c1b546a4df21a679" category="inline-link-macro">要件</block>
  <block id="eed9d9604d323a4bec2ced419db3354b" category="paragraph">。 <block ref="78ab30a4c6a9648b8dd64a71e4da2aa2" category="inline-link-macro-rx"></block> は、 Astra Trident のリソースを動的に管理し、セットアップフェーズを自動化する優れた方法です。いくつかの前提条件を満たす必要があります。を参照してください <block ref="746f08a8296c9ad74e67283046d6876c" category="inline-link-macro-rx"></block>。</block>
  <block id="6f5bda8b751f36b2d937ca475d3d67ed" category="paragraph">Trident オペレータには、以下に示すような利点があります。</block>
  <block id="ae2987cb5fe6e18d8d8713ac5616010c" category="section-title">自己回復機能</block>
  <block id="48b572c20004f23dbcac3e03dede686a" category="paragraph">Trident の Astra インストールを監視し、導入が削除されたときや誤って変更された場合など、問題に対処する手段を積極的に講じることができます。オペレータが配備として設定されると 'trident-operator-&lt;generated-id&gt;'POD が作成されますこのポッドは 'TridentOrchestrator CR と Astra Trident のインストールを関連付けて ' 常にアクティブな TridentOrchestrator が 1 つだけになるようにしますつまり、オペレータは、 Astra Trident のインスタンスがクラスタ内に 1 つしかないことを確認し、セットアップを制御して、インストールがべきでないことを確認します。インストールに変更が加えられると（展開またはノードのデミスタなど）、オペレータはそれらを識別し、個別に修正します。</block>
  <block id="69ef8379c893c23746ed9a34e42c57c7" category="section-title">既存のインストール環境を簡単に更新できます</block>
  <block id="0f2d0458d6fc7f6d4317735207021e82" category="paragraph">既存の展開をオペレータと簡単に更新できます。「 TridentOrchestrator 」 CR を編集するだけで、インストールを更新できます。たとえば、 Astra Trident を有効にしてデバッグログを生成する必要があるシナリオを考えてみましょう。</block>
  <block id="9b5a5950e97bab4497fbaaaf8c5fadc8" category="paragraph">これを行うには、「 TridentOrchestrator 」に「 pec.debug` 」を「 true 」に設定するパッチを適用します。</block>
  <block id="c9534512c045771d255bf1068862beec" category="paragraph">TridentOrchestrator が更新されると、オペレータは既存のインストールの更新とパッチを処理します。これにより、新しいポッドの作成がトリガーされ、それに応じてインストールが変更される場合があります。</block>
  <block id="1b77eea7dc5cf10bc0ad9e1c69131aae" category="section-title">Kubernetes のアップグレードを自動的に処理</block>
  <block id="f456a413d0506028374e871768a5f176" category="paragraph">Kubernetes バージョンのクラスタをサポート対象バージョンにアップグレードすると、オペレータが既存の Astra Trident インストールを自動的に更新し、 Kubernetes バージョンの要件を確実に満たすように変更します。</block>
  <block id="d1aae6ea63eb5e7fe6a9fcea5f671406" category="admonition">クラスタがサポート対象外のバージョンにアップグレードされた場合、オペレータによって Astra Trident はインストールされません。Astra Trident がすでにオペレータとともにインストールされている場合、サポート対象外の Kubernetes バージョンに Astra Trident がインストールされていることを示す警告が表示されます。</block>
  <block id="fc6b134742229ab95b893ec9c711b3f2" category="section-title">Helm を使用する必要があるのはなぜですか？</block>
  <block id="9326f3d9245c1501e5438ffa40011972" category="paragraph">Helm を使用して管理している他のアプリケーションが Astra Trident 21.01 以降である場合は、 Helm を使用して導入を管理することもできます。</block>
  <block id="0f22c891238a7408704280567046b005" category="section-title">tridenctl はいつ使用すればよいですか。</block>
  <block id="c67fd1b99934afa248dfeb285a9a4191" category="inline-link-macro">Tridentctl</block>
  <block id="5e8800ee18d9ba2737f70cf6fea5358c" category="paragraph">既存の導入環境をにアップグレードする必要がある場合や、高度にカスタマイズする場合は、のを参照してください <block ref="bbba36f756eac01f0bd418bf08e6f580" category="inline-link-macro-rx"></block>。これは、従来の方法であった Astra Trident を導入する方法です。</block>
  <block id="992d57abd493d38bda22d9ebcaaee856" category="section-title">導入方法間での移動に関する考慮事項</block>
  <block id="4f4cd969ebbb49473d74a80bfd59025e" category="paragraph">導入方法を切り替える必要があるシナリオを想像するのは難しいことではありません。tridentctl 配備からオペレータベースの配備に移行する前に ' またはその逆を行う前に ' 次の点を考慮してください</block>
  <block id="62f2d30ac579a0d9c48f7e9af4709419" category="list-text">Astra Trident のアンインストールには、常に同じ方法を使用します。tridentctl を使用して導入した場合は 'tridentctl' バイナリの適切なバージョンを使用して Astra Trident をアンインストールする必要があります同様に、オペレータとともに展開する場合は、「 TridentOrchestrator 」 CR を編集し、「 PEC.uninstall=true 」を設定して Astra Trident をアンインストールする必要があります。</block>
  <block id="6c85b80ffcdbeb3004a53881f1c1517d" category="list-text">Astra Trident を削除して tridentctl を使用して Astra Trident を導入するオペレータベースの導入環境の場合は、最初に「 TridentOrchestrator 」を編集し、「 PEC.uninstall=true 」を設定して Astra Trident をアンインストールする必要があります。次に 'TridentOrchestrator とオペレータの配備を削除します次に 'tridentctl を使用してインストールできます</block>
  <block id="67ccf99745298db9f1f4f60c814a2b14" category="list-text">オペレータベースの手動導入環境で、 Helm ベースの Trident オペレータ環境を使用する場合は、最初に手動でオペレータをアンインストールしてから Helm インストールを実行する必要があります。これにより、 Helm は必要なラベルとアノテーションを使用して Trident オペレータを導入できます。これを行わないと、 Helm ベースの Trident オペレータの導入が失敗し、ラベル検証エラーとアノテーション検証エラーが表示されます。tridentctl ベースの配備を使用している場合は 'Helm ベースの配備を問題なく使用できます</block>
  <block id="30c8006f6e30b48cb471941d09dc21cc" category="section-title">導入モードを理解する</block>
  <block id="47bd3e1ef636594512d55b147acaaff7" category="paragraph">Trident を導入する方法は 3 種類あります。</block>
  <block id="e9ae623c81f6793165935a11caf208d7" category="section-title">標準的な導入</block>
  <block id="1c116faa754a12fc9d2268596b076e8e" category="paragraph">Trident を Kubernetes クラスタに導入すると、 Astra Trident インストーラで次の 2 つの作業を実行できます。</block>
  <block id="2344f699f8a17dcc73e51dd0cebc6f44" category="list-text">インターネット経由でコンテナイメージを取得しています</block>
  <block id="3571f2c25b314afef195d39c88bd9f51" category="list-text">導入環境とノードのデプロイを作成し、 Kubernetes クラスタ内のすべての対象ノードで Astra Trident ポッドがスピンアップする。</block>
  <block id="7c3f361ece5e08ed30d45bef79680ec2" category="paragraph">このような標準的な導入は、次の 2 つの方法で実行できます。</block>
  <block id="3ee6b5e142a466872153196fc7ef6dcc" category="list-text">tridentctl install を使用</block>
  <block id="80bede3741fe5e63f3218cf6d74c7a18" category="list-text">Trident 演算子を使用する。Trident オペレータは、手動で導入することも、 Helm を使用して導入することもできます。</block>
  <block id="33515d7582595afb015b366316a74170" category="paragraph">このインストールモードは、 Astra Trident をインストールする最も簡単な方法であり、ネットワークの制限を課すことのないほとんどの環境で機能します。</block>
  <block id="2b4393c0483ca76851a031e3e29fa399" category="section-title">オフラインでの導入</block>
  <block id="8b115025dda49a5d962758844e90a452" category="inline-link">Trident の画像</block>
  <block id="72df3b7d5f8e79581be68db816189e82" category="inline-link">Trident AutoSupport の画像</block>
  <block id="bce707f4572096decf6c60bb5636eefb" category="paragraph">エアギャップ導入を実行するには 'tridentctl install を呼び出すときに --image-registry フラグを使用して ' プライベートイメージレジストリを参照しますTrident 演算子を使用して展開する場合は、「 TridentOrchestrator 」で「 PEC.imageRegistry 」を指定することもできます。このレジストリにはが含まれている必要があります<block ref="2352a006645179366e38df69d0f9f618" category="inline-link-rx"></block>、<block ref="7bacde8b4a2cd45903f29d77cc1c5e5e" category="inline-link-rx"></block>および CSI のサイドカーイメージ（ Kubernetes バージョンで必要な場合）</block>
  <block id="91255a4adf69521acddc8c1d55903014" category="paragraph">導入環境をカスタマイズするには 'tridentctl' を使用して Trident のリソースのマニフェストを生成します導入、開始、サービスアカウント、 Astra Trident がインストールの一部として作成するクラスタロールが含まれます。</block>
  <block id="4c774e8a2d80dbc16b0bf55be6c7b358" category="paragraph">導入環境のカスタマイズの詳細については、次のリンクを参照してください。</block>
  <block id="711011f15ff69da45006043e93ed8981" category="inline-link-macro">オペレータベースの展開をカスタマイズします</block>
  <block id="8f863c0ccd38c8782b36eedbea08fc5b" category="list-text"><block ref="8f863c0ccd38c8782b36eedbea08fc5b" category="inline-link-macro-rx"></block></block>
  <block id="85cda507040c129ee606d4d8df583b90" category="inline-link-macro">tridentctl ベースの配備をカスタマイズします</block>
  <block id="16486d6f9e6411719306bdb76f0b34fa" category="list-text"><block ref="16486d6f9e6411719306bdb76f0b34fa" category="inline-link-macro-rx"></block></block>
  <block id="d18dc7a4e8caf207dc9c1b49eda35b70" category="admonition">プライベート・イメージ・リポジトリを使用している場合は '1.17 より前のバージョンの Kubernetes には '/k8scsi' を ' プライベート・レジストリ URL の末尾には '1.17 より後のバージョンの Kubernetes には '/si' を追加する必要がありますtridentctl 配備にプライベートレジストリを使用する場合は '--trident-image' と --autosupport.image' を --image-registry' とともに使用する必要がありますTrident 演算子を使用して Astra Trident を導入する場合は、 Orchestrator CR にインストールパラメータに「 tridentImage 」と「 autosupportImage 」が含まれていることを確認してください。</block>
  <block id="47c0166da57a75ed65ddb766c838a91c" category="section-title">リモート導入</block>
  <block id="761bf14d8b8339a8f345e63dc12c36bb" category="paragraph">次に、リモート導入プロセスの概要を示します。</block>
  <block id="37dbca6cb8ca55a471ebc072575c0a46" category="list-text">Astra Trident を導入するリモートマシンに適切なバージョンの kubectl を導入します。</block>
  <block id="02ed10abbc71334918b1acb54df6e3f3" category="list-text">Kubernetes クラスタから構成ファイルをコピーし、リモートマシンで「 KUBECONFIG 」環境変数を設定します。</block>
  <block id="da693b77cde91654c6296abe8f901988" category="list-text">「 kubectl get nodes 」コマンドを開始して、必要な Kubernetes クラスタに接続できることを確認します。</block>
  <block id="df65ec31c6f96e95301e3c6ff8863335" category="list-text">標準のインストール手順を使用して、リモートマシンからの導入を完了します。</block>
  <block id="13c852fce58f7c6981fa0a952dcd76af" category="summary">Trident オペレータは 'TridentOrchestrator 仕様の属性を使用して 'Astra Trident のインストール方法をカスタマイズできます</block>
  <block id="b9d69225e5cf4da0389ed6b1f6b66a10" category="doc">Trident オペレータの環境をカスタマイズ</block>
  <block id="02e0835b3015839cde731027c217d70b" category="paragraph">属性のリストについては、次の表を参照してください。</block>
  <block id="83f499a540b1323009c200d6f8cc9396" category="cell">パラメータ</block>
  <block id="7a1920d61156abc05a60135aefe8bc67" category="cell">デフォルト</block>
  <block id="f3f30d479f6e3b393d917a3b2f88c770" category="cell">「 namespace 」を参照してください</block>
  <block id="c9db68ea6cff44f42ac5acbbfccec399" category="cell">Astra Trident をインストールするネームスペース</block>
  <block id="9aa82da0cffe247b84587c1cc8e32746" category="cell">デフォルト</block>
  <block id="a67cf6b087ff88dbfacec8375928995c" category="cell">「バグ」</block>
  <block id="4f72bc786a1a01d5a1a8bc09d33334cc" category="cell">Astra Trident のデバッグを有効にします</block>
  <block id="68934a3e9455fa72420237eb05902327" category="cell">いいえ</block>
  <block id="16e20a5ba5cd6442f3cdd49b16e8a5f3" category="cell">「 IPv6 を使用」</block>
  <block id="3dd791c4864e77ae6cf11572e2d7b374" category="cell">IPv6 経由の Astra Trident をインストール</block>
  <block id="077e99fe42ced522b462656cffffe09c" category="cell">k8sTimeout</block>
  <block id="4448b73eac083e33b7142f0e5790fac5" category="cell">Kubernetes 処理のタイムアウト</block>
  <block id="e4d71bf2abad047425f4463e27bb83b0" category="cell">30 秒</block>
  <block id="42cf123e93ecc5c0297652edbc547fc0" category="cell">'ilenceAutosupport</block>
  <block id="4a213b7c3b997ffb0794b25909381d16" category="cell">AutoSupport バンドルをネットアップに自動的に送信しない</block>
  <block id="34d0f4a447cd1d7f59000d3be2c39320" category="cell">enableNodePrep</block>
  <block id="2472256a6487b0917d32f6a044a4e0ac" category="cell">ワーカーノードの依存関係を自動的に管理（ * beta * ）</block>
  <block id="2bccac20e55391730a985f9819e1cc41" category="cell">「 autosupportImage 」を参照してください</block>
  <block id="84448c234dfdfd2a7367341fd4b56a80" category="cell">AutoSupport テレメトリのコンテナイメージ</block>
  <block id="deb59c9b1f7c5aab7803950edd48fbdb" category="cell">「 NetApp/trident-autosupport ： 21.04.0 」</block>
  <block id="f4a6821b04b9ce6b90148068341347b6" category="cell">「 autosupportProxy 」と入力します</block>
  <block id="7f54ca385f028308d19e228ce0534a47" category="cell">AutoSupport テレメトリを送信するプロキシのアドレス / ポート</block>
  <block id="256acfe307251e7444859851d87d5735" category="cell"><block ref="256acfe307251e7444859851d87d5735" category="inline-link-rx"></block></block>
  <block id="e9f06180af644cfa6e5d20bd67c03bc5" category="cell">uninstall</block>
  <block id="076bc379a24183ce77834bac007ca852" category="cell">Astra Trident のアンインストールに使用するフラグ</block>
  <block id="cad060d2f14dbf08315c20014ed31daa" category="cell">「 logFormat 」</block>
  <block id="acfc4a8e6d53bad27d4e2d393bfff61e" category="cell">Astra Trident のログ形式が使用 [text 、 JSON]</block>
  <block id="20cd815523e5806aec29a57282b0d49f" category="cell">テキスト（ Text ）</block>
  <block id="7610c5cc7910022402c4fbd450d889ce" category="cell">「 tridentImage 」のように入力します</block>
  <block id="20f408a3276af1f7f1bf02ba374786ca" category="cell">インストールする Astra Trident イメージ</block>
  <block id="896185b87765c519346253a5f54ecbe4" category="cell">「 NetApp / Trident ： 21.04 」</block>
  <block id="8088435dc0e1c8b85217d850d3e7a602" category="cell">「 imageRegistry 」と入力します</block>
  <block id="4f25f4cca5c1939f4a728d2678e719f7" category="cell">内部レジストリへのパス。形式は「 &lt;registry fqdn&gt;[:port][/ssubpath]] 」です</block>
  <block id="1f147978ca8c4561ff70857129f3fa13" category="cell">"k83.gcr.io/sig-storage (k8s 1.17+) または Qua.io/k8scsi"</block>
  <block id="e6b96cbb467923e86672bb25db5ecebb" category="cell">「 kubeletDir 」を参照してください</block>
  <block id="31aad37dce0c28e12908582a0d63736a" category="cell">ホスト上の kubelet ディレクトリへのパス</block>
  <block id="5b9febd4bd647dae5abfddaf99b9c540" category="cell">「 /var/lib/kubelet 」</block>
  <block id="b6e0e2c4168573f0ed61c842470342ba" category="cell">「 wippeout 」</block>
  <block id="4e33345575b5a443dec89767624a1ee8" category="cell">Astra Trident を完全に削除するために削除するリソースのリスト</block>
  <block id="2d30d1348c4d2533a165827a22516caa" category="cell">「 imagePullSecrets 」</block>
  <block id="f73bb4a0bc9913e7fc6db5f9e5f2afeb" category="cell">内部レジストリからイメージをプルするシークレット</block>
  <block id="d4d1a6713550b631ed2a47905a5ac4fa" category="admonition">「 TridentOrchestrator 」では、どのネームスペース Astra Trident がにインストールされているかを示すために pec.namespace` が指定されています。このパラメータ * は、 Astra Trident のインストール後に更新できません * 。これを実行すると、「 TridentOrchestrator 」のステータスが「 Failed 」に変わります。Astra Trident は、ネームスペース間での移行を意図したものではありません。</block>
  <block id="c1aa6523e4a912445f9d4b8b9fb560be" category="admonition">自動ワーカーノードの前処理は、非本番環境でのみ使用することを目的とした * ベータ機能です。</block>
  <block id="0b3c55a2173aa8e730bca967a8dd7cf5" category="paragraph">「 TridentOrchestrator 」を定義するときに上記の属性を使用して、インストールをカスタマイズできます。次に例を示します。</block>
  <block id="27421a0c5ebcff7855c7c87dc579b371" category="paragraph">「 TridentOrchestrator 」引数で許可される範囲を超えてインストールをカスタマイズする場合は、「 tridentctl 」を使用して必要に応じて変更できるカスタム YAML マニフェストを生成することを検討してください。</block>
  <block id="b9966b5f76510c4c81d397b732dc0ced" category="summary">サポートされるフロントエンド、バックエンド、およびホスト構成を確認することから始めましょう。</block>
  <block id="5a2ebfb8baa378cfcfcba58bbb1380c2" category="doc">要件</block>
  <block id="0582c93c9857a8b6d0380be79128eefc" category="admonition">Trident が使用するポートについては、を参照してください <block ref="c6b87a878d50568ac1e654ad3964af7b" category="inline-link-macro-rx"></block>。</block>
  <block id="c777be7f669397b0a376fe32ca5cd9c3" category="section-title">サポートされるフロントエンド（オーケストレーションツール）</block>
  <block id="74aefc05d193afd5c50a0df882997656" category="paragraph">Trident Astra は、次のような複数のコンテナエンジンとオーケストレーションツールをサポート</block>
  <block id="37696641960d6c73a7dadab603c1877e" category="list-text">Mirantis Kubernetes Engine 3.4</block>
  <block id="201eb37826a33e35adff9119f25946bd" category="paragraph">Trident オペレータは、次のリリースでサポートされています。</block>
  <block id="5596419ed8318cabbcb138ef27fd3035" category="inline-link">バグ修正のお知らせ</block>
  <block id="3943a2e0490c50c43f31a486978ea80b" category="paragraph">Astra Trident は、 Google Cloud の Google Kubernetes Engine （ GKE ）、 AWS の Elastic Kubernetes Services （ EKS ）、 Azure の Azure Kubernetes Service （ AKS ）、 Rancher など、フルマネージドで自己管理型の Kubernetes サービスを数多く提供しています。</block>
  <block id="f787cd4b6963b13f12fa53131f58ef6c" category="section-title">サポートされるバックエンド（ストレージ）</block>
  <block id="843e2f0c722d25903a6010b62ac4f13b" category="paragraph">Astra Trident を使用するには、次のバックエンドを 1 つ以上サポートする必要があります。</block>
  <block id="a3c559e0541e9bb860178ce6fe414224" category="list-text">Cloud Volumes Service for GCP</block>
  <block id="ff617c70912e62b6adb0266e42f9d4f5" category="list-text">FAS/AFF / Select 9.3 以降</block>
  <block id="1d3d126b8a5bad69c46ed03734beed47" category="list-text">ネットアップオール SAN アレイ（ ASA ）</block>
  <block id="c7c7a6a5641f33e348244f9c43010e16" category="section-title">機能の要件</block>
  <block id="8c67111ad59dd108156a3e7c9a32b63c" category="paragraph">次の表は、このリリースの Astra Trident で利用できる機能と、サポートする Kubernetes のバージョンをまとめたものです。</block>
  <block id="21021ea0e52be8e9c599f4dff41e5be0" category="cell">フィーチャー（ Feature ）</block>
  <block id="80afba45eb055fc9bdc48c90d1debd06" category="cell">Kubernetes のバージョン</block>
  <block id="10f295a61d2a793ac8936a69cf458654" category="cell">フィーチャーゲートが必要ですか？</block>
  <block id="f336592ca417cff322b935bc0eeaff8f" category="cell">CSI Trident</block>
  <block id="51c52843a7958626357cfc8e1ef94e50" category="paragraph">1.17 以降</block>
  <block id="e830b7e4d1fb7f84600876af87cb4381" category="cell">ボリューム Snapshot</block>
  <block id="ea8ed249117e76cb53766e218fe2b7c7" category="cell">ボリューム Snapshot からの PVC</block>
  <block id="28dcded20f550dcad1bd9bb03a5bbe73" category="cell">iSCSI PV のサイズ変更</block>
  <block id="1673543ed032e46f3572ba65bc070693" category="cell">ONTAP 双方向 CHAP</block>
  <block id="176e16df4faab1a1e06e9585c813d5fe" category="cell">動的エクスポートポリシー</block>
  <block id="1f7219b07d5bce7feec002a9f4dc2201" category="cell">Trident のオペレータ</block>
  <block id="bf0d42cfb33347700a1060d7b0cf07c1" category="cell">自動ワーカーノード準備（ベータ版）</block>
  <block id="443432948b68bb63d707ce7ecc4a021a" category="cell">CSI トポロジ</block>
  <block id="4fa506be8cc1c8c936a3eff8a374fe26" category="list-text">RHEL または CentOS 7.4 以降</block>
  <block id="2d736ed9cdbf58b500e9715daeb267e6" category="list-text">Ubuntu 18.04 以降</block>
  <block id="11ea58814ce429c3e3254a63f8cde7a4" category="paragraph">tridentctl ユーティリティーは ' これらの Linux ディストリビューションでも動作します</block>
  <block id="13d80777c8fd43e555c1f5b1b72d7ef0" category="section-title">ホストの設定</block>
  <block id="62df396fbf0c4fd30e1e851335e8b26b" category="paragraph">使用しているバックエンドによっては、 NFS や iSCSI のユーティリティをクラスタ内のすべてのワーカーにインストールする必要があります。を参照してください <block ref="8e0b40cac942de59585b1131f9197d7b" category="inline-link-macro-rx"></block> を参照してください。</block>
  <block id="2139fe384d5ae165545994dff01961d9" category="section-title">ストレージシステムの構成：</block>
  <block id="923680056b0f0258907f498670b4ead1" category="section-title">コンテナイメージと対応する Kubernetes バージョン</block>
  <block id="aa92c4c233bc01609d957e469736b699" category="cell">コンテナイメージ</block>
  <block id="3b29886980a3307188a882bdc7cad63b" category="cell">v1.17.0</block>
  <block id="ca2e728c8f17fef48811518aaed4de43" category="list-text">k83.gcr.io/sig-storage/csi-snapshotter ： v3.0.3</block>
  <block id="b8f1a143b913482d06bc0abdd94e9fc7" category="cell">v1.18.0</block>
  <block id="79f59ba516b478a970a428a795414034" category="cell">v1.19.0</block>
  <block id="4b977ef7367155e20f954fe7b0a00c4f" category="cell">v1.20.0</block>
  <block id="6f0b081bef5e745ef2429ef74472d9bd" category="cell">v1.21.0</block>
  <block id="721d66fc3896f0caf2122a92b3f1c017" category="admonition">Kubernetes バージョン 1.20 以降では、検証済みの「 k8es.cr.io/sig-storage/csi-snapshotter ： v4.x 」イメージを使用します。これは、「 v1' バージョンが「 volumesnapshotes.snapshot.storage.k88.io`CRD 」に対応している場合にのみ使用します。v1beta` のバージョンが v1beta` のバージョンの有無に関わらず CRD にサービスを提供している場合は、検証済みの「 k83.gcr.io/sig-storage/csi-snapshotter: v3.x' 」イメージを使用します。</block>
  <block id="a60c2f57df655a9ac5fcaa0750886195" category="summary">Kubernetes の使用を開始したばかりの場合は、手順に従って Kubernetes をインストールして試してください。この説明では、 Trident をデモ用に統合できるベアボーンのシングルノードクラスタについて説明しています。</block>
  <block id="62bdbe048d174b559cb770f9ebaf0895" category="doc">ぜひお試しください</block>
  <block id="e8dadc588901af436e2c6036acf23973" category="inline-link-macro">ネットアップのテスト用ドライブ</block>
  <block id="476652843c9581434ab31739d97c955a" category="paragraph">ネットアップでは、リクエストに応じてすぐに使用できるラボイメージを提供しています <block ref="eb9c34df0ed196dd801ef85207c8bf2c" category="inline-link-macro-rx"></block>。テストドライブは、 3 ノードの Kubernetes クラスタと Astra Trident がインストールおよび設定されたサンドボックス環境を提供します。Astra Trident をよく理解し、機能を調べるのに最適な方法です。</block>
  <block id="8685ac2061f9dca7ab48f41e0871f7af" category="inline-link-macro">kubeadm インストールガイド</block>
  <block id="37bdb0f602c1d2a2a6f285533e4ce5c8" category="paragraph">もう 1 つのオプションは、を参照することです <block ref="c7dbb75618a5e106a360075f923cb87f" category="inline-link-macro-rx"></block> Kubernetes が提供します。</block>
  <block id="2cf0c4e99dd3c0b2e7e0f63af3531622" category="admonition">本番環境では、この手順で構築した Kubernetes クラスタを使用しないでください。本番環境向けのクラスタを作成するには、ディストリビューションに付属の本番環境導入ガイドを使用します。</block>
  <block id="e3ecede511471cf67c294e427e2f012e" category="paragraph">Kubernetes を初めて使用する場合は、概念とツールについて理解しておいてください <block ref="22f850f308b2d2016502017a1dcd1044" category="inline-link-macro-rx"></block>。</block>
  <block id="aa452927f1dec9709a523a0de496d6c5" category="summary">tridentctl を使用して Astra Trident を導入できます。</block>
  <block id="be932f6f71d4b0b1a7f80c2e5b584b34" category="admonition">展開をカスタマイズするには、を参照してください <block ref="b336c95c8f5c7bbe82e004b1378c2302" category="inline-link-macro-rx"></block>。</block>
  <block id="6a64bc5a34f75dde015dc7dd8ece8c61" category="list-text">サポート対象の Kubernetes クラスタに対するすべての権限が必要です。</block>
  <block id="ed000d2029e135f34f854fa4e820940b" category="admonition">導入環境のカスタマイズについては、を参照してください <block ref="b336c95c8f5c7bbe82e004b1378c2302" category="inline-link-macro-rx"></block>。</block>
  <block id="665cf0ff23392f7e380041a2b34a5f5a" category="paragraph">まず、 Linux ホストにログインして、 _working _ 、 <block ref="ac355729d1ddc95a290738ca862fed08" category="inline-link-macro-rx"></block> に必要な権限があることを確認します。</block>
  <block id="8a0f5f61d4ea2fb3a2f0ee6de4b7cf40" category="admonition">OpenShift では、以降のすべての例で「 kubectl 」の代わりに「 OC 」を使用します。まず、「 OC login-u SYSTEM ： admin 」または「 OC login-u kube-admin 」を実行して、「 admin 」としてログインする必要があります。</block>
  <block id="09ea6b05f579a1e9903c54dfcd6a0dc9" category="paragraph">Kubernetes のバージョンを確認するには、次のコマンドを実行します。</block>
  <block id="b80293f6b9048d95e7f975e831ef4da6" category="paragraph">Kubernetes サーバのバージョンを確認します。このポートは、 Astra Trident のインストール時に使用します。</block>
  <block id="57786106edaa9a7d85847431f0aa5559" category="section-title">手順 2 ：インストーラをダウンロードして展開します</block>
  <block id="f838f032d9e83a6229936c3a7784f752" category="admonition">Trident インストーラは Trident ポッドを作成し、そのステートを維持するために使用される CRD オブジェクトを構成し、プロビジョニングやクラスタホストへのボリュームの接続などのアクションを実行する CSI サイドカーを初期化します。</block>
  <block id="92c4cf66727cb67866ebf0c3ec416382" category="paragraph">の最新バージョンをダウンロードできます<block ref="e796e94083ba305bee55a53ec1dc755d" category="inline-link-rx"></block> _Downloads_section から ' 抽出します</block>
  <block id="31dfa917b0ab09bc8fa9aa62c5b68b9b" category="paragraph">たとえば、最新バージョンが 21.07.1 の場合は、次のようになります。</block>
  <block id="9b7632bed019c72ffa74193e1808fd78" category="section-title">手順 3 ： Astra Trident をインストールする</block>
  <block id="326f6498f188018e71d4ea9c3a240042" category="paragraph">tridentctl install コマンドを実行して 'Astra Trident を目的の名前空間にインストールします</block>
  <block id="ed1112be79a7a22fdbf9b294f3ed718b" category="paragraph">インストーラが完了すると、次のように表示されます。Kubernetes クラスタ内のノードの数によっては、ポッドをさらに確認することもできます。</block>
  <block id="e3828f7a456f3c91d25ec19bbf457e6d" category="paragraph">上記の例のような出力が表示された場合、この手順は完了していますが、 Astra Trident の設定はまだ完了していません。次の手順に進みます。を参照してください <block ref="6bfdfe984198635473da869595980b46" category="inline-link-macro-rx"></block>。</block>
  <block id="a0015d3671af62700240db94388892fb" category="paragraph">ただし、インストーラが正常に完了しなかった場合、または * running * trident-csi-&lt; generated id&gt; が表示されない場合は、プラットフォームがインストールされていません。</block>
  <block id="b928e0aee19c1e2cc91c85e8a0856936" category="summary">Astra Trident のインストール中および使用中に発生する可能性のある問題のトラブルシューティングには、ここに記載されているポインタを使用してください。</block>
  <block id="231cf4c70d866b616c21baddaeed0696" category="doc">トラブルシューティング</block>
  <block id="8ef0ab9bbedaa7608c9abed7c7213218" category="admonition">Astra Trident のヘルプを参照するには 'tridentctl logs-a -n trident` を使用してサポートバンドルを作成し 'NetApp Support &lt; 困ったときは &gt; に送信してください</block>
  <block id="40e41fb2db11266b8f751c0d5c67cba0" category="inline-link">ネットアップナレッジベース（ログインが必要）</block>
  <block id="01005ecf4349194d1ec13d0ba516c9e5" category="admonition">トラブルシューティングに関する記事の包括的なリストについては、を参照してください<block ref="57f5c759ada931c6a2051314ca6ee99e" category="inline-link-rx"></block>。また、 Astra に関連する問題のトラブルシューティングに関する情報も参照できます<block ref="695f48b1d8b7348c0e2828947d24161e" category="inline-link-rx"></block>。</block>
  <block id="163fb9eb00818e2c7109900db1a3cc82" category="section-title">全般的なトラブルシューティング</block>
  <block id="f504c27d1ad305a988958b64f34468cb" category="list-text">Trident ポッドが正常に起動しない場合（たとえば、 Trident ポッドが 2 つ未満の「 ContainerCreating 」フェーズで停止した場合）、「 kubectl-n trident 」を実行して、展開が trident 、「 kubectl-n trident 」が pod trident-******** を記述します -**** 追加のインサイトを提供できます。kubelet ログの取得 (journalctl -xeu kubelet など ) も役立ちます。</block>
  <block id="87248f7afe198418bdbedd919695631e" category="list-text">バックエンド定義に「 debugTraceFlags 」を含めると、バックエンドごとにデバッグログを取得することもできます。たとえば、 Trident ログで API 呼び出しとメソッドの逆数を取得するには、「 `debugTraceFlags: {"API":true,"method" :true,}` を指定します。既存のバックエンドには 'tridentctl backend update で構成された 'ebugTraceFlags' を設定できます</block>
  <block id="6cc37a0664d7f97f87d34eadef23dbad" category="list-text">RedHat CoreOS を使用する場合は 'iscsid がワーカー・ノードで有効になっており ' デフォルトで起動されていることを確認しますこの設定には、 OpenShift MachineConfig を使用するか、イグニッションテンプレートを変更します。</block>
  <block id="4582245538a41243a95713a7d0c21b64" category="list-text">Trident をで使用する際によく発生する問題です<block ref="4568986ef6397d7c901269fc0e190ede" category="inline-link-rx"></block> テナントとクライアントのシークレットが、必要な権限がないアプリケーションの登録から取得された場合です。Trident の要件の詳細については、を参照してください <block ref="c09112d17e34405b7a5c3d246f91583f" category="inline-link-macro-rx"></block> 設定</block>
  <block id="7f0ecdfa510b31b01d331c2760643b83" category="list-text">コンテナへの PV のマウントに問題がある場合は 'rpcbind' がインストールされていて実行されていることを確認してくださいホスト OS に必要なパッケージ・マネージャを使用して 'rpcbind' が実行されているかどうかを確認しますrpcbind サービスのステータスは 'systemctl status rpcbind' またはそれに相当する処理を実行することで確認できます</block>
  <block id="78aeadc89feb4cf244398a7d35a0d656" category="list-text">Trident バックエンドが、以前に作業したことがあるにもかかわらず「 failed 」状態であると報告した場合は、バックエンドに関連付けられている SVM/admin クレデンシャルの変更が原因である可能性があります。「 tridentctl update backend 」または Trident ポッドのバウンスを使用してバックエンド情報を更新すると、この問題は修正されます。</block>
  <block id="dd5955dd3991dcacca2b395215df8ecd" category="list-text">Kubernetes クラスタや Trident をアップグレードしてベータ版のボリューム Snapshot を使用する場合は、既存の alpha スナップショット CRS がすべて削除されていることを確認してください。次に 'tridentctl コマンドを使用して ' アルファスナップショットの CRD を削除できますを参照してください<block ref="f3109660248c628e79ddf256944df58b" category="inline-link-rx"></block> アルファスナップショットの移行手順を理解する。</block>
  <block id="b851cfc28cd6e5cb9aaf87bdb59a68aa" category="list-text">Docker をコンテナランタイムとして Trident をインストールするときに権限の問題が発生した場合は、「 --in cluster=false」 フラグを付けて Trident のインストールを試みてください。これはインストーラポッドを使用せず、「 trident-installer 」ユーザのために発生する許可の問題を回避します。</block>
  <block id="6f7d49547ff47cfaf1fd93d134b603be" category="list-text">実行に失敗した後のクリーンアップには 'uninstall パラメータ &lt;Uninstalling Trident &gt; を使用しますデフォルトでは、スクリプトは Trident によって作成された CRD を削除しないため、実行中の導入環境でも安全にアンインストールしてインストールできます。</block>
  <block id="f1112223b41fddc71fd6a626582dfb78" category="inline-link">Trident のバージョン</block>
  <block id="c731d984dfa8e536efa9efa455347faa" category="list-text">Trident の以前のバージョンにダウングレードする場合は、まず tridenctl uninstall コマンドを実行して Trident を削除します。必要なをダウンロードします<block ref="f3d78353f8dac3e49bbefeb5f6a2383b" category="inline-link-rx"></block> tridentctl install コマンドを使用してインストールします新しい PVS が作成されておらず、既存の PVS / バックエンド / ストレージクラスに変更がない場合にのみ、ダウングレードを検討してください。Trident は現在、ステートの維持に CRD を使用しているため、作成されたすべてのストレージエンティティ（バックエンド、ストレージクラス、 PVS 、およびボリュームスナップショット）には、以前にインストールされた Trident のバージョンで使用されていた PV に書き込まれたデータではなく、「関連 CRD オブジェクト」が含まれています。* 以前のバージョンに戻すと、新しく作成した PVS は使用できなくなります。 * バックエンド、 PVS 、ストレージクラス、ボリュームスナップショット（作成 / 更新 / 削除）などのオブジェクトに加えた変更は、ダウングレード時に Trident に表示されません * 。以前のバージョンの Trident で使用されていた PV は、 Trident から見ることができます。以前のバージョンに戻しても、アップグレードされていないかぎり、以前のリリースを使用してすでに作成された PVS へのアクセスは中断されません。</block>
  <block id="7dc9f8824c461c84d9bb1563a0615526" category="list-text">Trident を完全に削除するには、「 tridentctl identviate CRD 」コマンドを実行します。これにより、すべての CRD オブジェクトが削除され、 CRD が定義解除されます。Trident は、すでにプロビジョニングされている PVS を管理しなくなります。</block>
  <block id="e7fc3eac0c0cea530e0f52e3ddf37079" category="admonition">Trident はその後、最初から再構成する必要があります。</block>
  <block id="51748ba3d16ecfd8c45c7ebf2043b738" category="list-text">インストールが成功した後、 PVC が「保留中」段階で停止した場合、「 kubectl 」を実行して PVC を記述すると、 Trident がこの PVC の PV のプロビジョニングに失敗した理由を追加情報に提供できます。</block>
  <block id="a900bd1dbd5690f78a30ca74d138d0b7" category="section-title">オペレータを使用して失敗した Trident の導入をトラブルシューティングします</block>
  <block id="0e89989064bf4afdc37fd5a7be4f607d" category="paragraph">オペレータを使用して Trident を導入する場合 'TridentOrchestrator のステータスは 'Installing から Installed に変わります'Failed' ステータスが表示され ' オペレータがそれ自体で回復できない場合は ' 次のコマンドを実行してオペレータのログを確認する必要があります</block>
  <block id="df9771dbb13da45493e576499910c0b4" category="paragraph">trident-operator コンテナのログの末尾には、問題のある場所を示すことができます。たとえば、このような問題の 1 つは、エアーギャップ環境のアップストリームレジストリから必要なコンテナイメージをプルできないことです。</block>
  <block id="0fd4c6187c561958bc76052df7774593" category="paragraph">Trident のインストールが失敗した理由を理解するには、「 TridentOrchestrator 」のステータスを確認する必要があります。</block>
  <block id="1e054f4c292a5388d6318461fe73d749" category="paragraph">このエラーは、 Trident のインストールに使用された「 TridentOrchestrator 」がすでに存在することを示します。各 Kubernetes クラスタは Trident のインスタンスを 1 つしか保持できないため、オペレータは任意の時点で作成可能なアクティブな TridentOrchestrator が 1 つだけ存在することを確認します。</block>
  <block id="568fcf9beb0dbd37c57dff251a3164ed" category="paragraph">また、 Trident ポッドのステータスを確認することで、適切でないものがあるかどうかを確認できます。</block>
  <block id="f89c17ddb9f8bdaf5c95a466d5f6a500" category="paragraph">1 つ以上のコンテナイメージがフェッチされなかったため、ポッドが完全に初期化できないことがわかります。</block>
  <block id="d57d1a6de03b2ddf3ee54f680152e2b6" category="paragraph">この問題に対処するには、「 TridentOrchestrator 」 CR を編集する必要があります。また、「 TridentOrchestrator 」を削除して、変更された正確な定義を持つ新しいものを作成することもできます。</block>
  <block id="a8ee4098038ba3eb2d8c3093ddfe6536" category="section-title">tridentctl を使用した失敗した Trident 導入のトラブルシューティング</block>
  <block id="021e9ae5361eb14975bf9a30f99770f5" category="paragraph">何が問題になったかを特定するために、インストーラをもう一度「 -d`` 」引数を使用して実行すると、デバッグモードが有効になり、問題の内容を理解するのに役立ちます。</block>
  <block id="01539f4f1fd20792cbbae6bb0506cc20" category="paragraph">問題を解決した後 ' 次のようにインストールをクリーンアップし 'tridentctl install コマンドを再度実行できます</block>
  <block id="c109878131f34375d85b7eff9721dcde" category="summary">ネットアップが提供する Trident インストールで Element バックエンドを作成して使用する方法をご確認ください。</block>
  <block id="f2733a323df72dea4b230205225bdc13" category="doc">NetApp HCI または SolidFire バックエンドを設定します</block>
  <block id="a711863513c11f3a6d86294acc7be0ba" category="list-title">必要なもの</block>
  <block id="d1d184cecc23825cff20fabf3cdfb862" category="list-text">Element ソフトウェアを実行する、サポート対象のストレージシステム。</block>
  <block id="4055116469942da7f6ed83abcf57d0a4" category="list-text">NetApp HCI / SolidFire クラスタ管理者またはボリュームを管理できるテナントユーザのクレデンシャル。</block>
  <block id="d5fa5f22855b065d96647dfb0c06d685" category="inline-link-macro">ワーカーノードの準備情報</block>
  <block id="fa81a6b0253aea3dd9eccc6f72c94371" category="list-text">すべての Kubernetes ワーカーノードに適切な iSCSI ツールをインストールする必要があります。を参照してください <block ref="33b3e91de73abed89a447676724b5cce" category="inline-link-macro-rx"></block>。</block>
  <block id="c443982ebc2d61b1fdf8348209939f8b" category="paragraph">'olidfire -SAN' ストレージ・ドライバは ' ファイル・モードとブロック・モードの両方をサポートしています「 Filesystem 」 volumeMode の場合、 Astra Trident はボリュームを作成し、ファイルシステムを作成します。ファイルシステムのタイプは StorageClass で指定されます。</block>
  <block id="02017e70674a0c740b2b95fbb0cc2aa1" category="paragraph">ファイルシステムがありません。raw ブロックデバイスです。</block>
  <block id="e1f3ce04f7f587f86c154146eace2807" category="admonition">Astra Trident は強化された CSI プロビジョニング担当者として機能する場合、 CHAP を使用します。CSI のデフォルトである CHAP を使用している場合は、これ以上の準備は必要ありません。CSI 以外の Trident で CHAP を使用する場合は 'UseCHAP' オプションを明示的に設定することをお勧めしますそれ以外は、を参照してください <block ref="195a24f2e3cd9264b9f38d5f581c56cd" category="inline-link-macro-rx"></block>。</block>
  <block id="156ef6dbbdc5c1984194012f4d3505a5" category="admonition">ボリュームアクセスグループは、従来の非 CSI フレームワークである Astra Trident でのみサポートされています。CSI モードで動作するように設定されている場合、 Astra Trident は CHAP を使用します。</block>
  <block id="03362d64938adda17736eff8a3b091cc" category="paragraph">AccessGroups または UseCHAP のどちらも設定されていない場合は ' 次のいずれかの規則が適用されます</block>
  <block id="44b5e5595eea45ebf8e49f88409afdaa" category="list-text">デフォルトの trident' アクセスグループが検出された場合は ' アクセスグループが使用されます</block>
  <block id="f3bf91f3dbbbaec039ad830cc87a1013" category="list-text">アクセスグループが検出されず、 Kubernetes バージョンが 1.7 以降の場合は、 CHAP が使用されます。</block>
  <block id="15b7c7ffe264d7b8c61915ff2a6ef96c" category="section-title">バックエンド構成オプション</block>
  <block id="9d370350f8d0178b5dfbec9def10d13a" category="paragraph">バックエンド設定オプションについては、次の表を参照してください。</block>
  <block id="7877022c956918624cc0373ff564cad4" category="cell">「バージョン」</block>
  <block id="40e27006e7b709772172391a3d17b331" category="cell">常に 1</block>
  <block id="868dff7060d78b6417dc8e065eca8374" category="cell">'torageDriverName'</block>
  <block id="5aae2c40b50d296edbd4ba9cfb462b49" category="cell">ストレージドライバの名前</block>
  <block id="2353a0a3a06283f07550efc7bad8a90e" category="cell">常に「 solidfire-san-」</block>
  <block id="f5b55596d3f53b1857a4980dac9db979" category="cell">backendName`</block>
  <block id="5afd6479855e8d63f324b6ec2fa787b4" category="cell">カスタム名またはストレージバックエンド</block>
  <block id="f4210b28f3cf7c1f7e6e328bb42c6060" category="cell">「 iSCSI_ 」 + ストレージ（ iSCSI ） IP アドレス SolidFire</block>
  <block id="06981b2729b4b522b21d903c7738a2ca" category="cell">「エンドポイント」</block>
  <block id="41eba2d95ecaf35c8bd3a972c263ffe4" category="cell">テナントのクレデンシャルを使用する SolidFire クラスタの MVIP</block>
  <block id="955f5caa2495689258902533d1a6cd44" category="cell">「 VIP 」</block>
  <block id="b07ca7de83de58a699966c9bc9003020" category="cell">ストレージ（ iSCSI ）の IP アドレスとポート</block>
  <block id="eea443d4fcc24d4cd2cab08c2a6c062f" category="cell">「ラベル」</block>
  <block id="749df53d02481e75dd919dddf42fbbef" category="cell">ボリュームに適用する任意の JSON 形式のラベルのセット。</block>
  <block id="1d76382e861d2df96647216b26d38948" category="cell">「」</block>
  <block id="4e25fe4a614b527d9b3d89ee6abe5d35" category="cell">「 tenantname 」</block>
  <block id="251f1fc42c38ca55f30e5e9d11dac168" category="cell">使用するテナント名（見つからない場合に作成）</block>
  <block id="f016e2c01f2bafa45e6b537d49f0f9da" category="cell">「 InitiatorIFCace 」</block>
  <block id="4381b3c378885de93e2166f240096338" category="cell">iSCSI トラフィックを特定のホストインターフェイスに制限します</block>
  <block id="6522432847a0e6902318a976e5533f62" category="cell">デフォルト</block>
  <block id="5ff567e0863a47346f44f87ed793f508" category="cell">UseCHAP'</block>
  <block id="d390e6782f0a0af41ea0397e46b5368e" category="cell">CHAP を使用して iSCSI を認証します</block>
  <block id="2d1474e8b52ef42851337fb3fef4e1a1" category="cell">"nfsvers=3 "</block>
  <block id="32738663b16444872e4e5721c7c37660" category="cell">「アクセスグループ」</block>
  <block id="c4ca01925aae0c37398f0b30a4ce1273" category="cell">使用するアクセスグループ ID のリスト</block>
  <block id="e64099a24f6ef8bbbdb23c2a803cd065" category="cell">「 trident 」という名前のアクセスグループの ID を検索します。</block>
  <block id="26194deaf50c44db6eb5983237bdaf25" category="cell">「タイプ」</block>
  <block id="ee1aea1de97320ad8e98436f68b01b4a" category="cell">QoS の仕様</block>
  <block id="91590ee78f1b4751284f4f9ea80cfe86" category="cell">「 limitVolumeSize 」と入力します</block>
  <block id="18320b2a705a7bed37a6bc0af4aee093" category="cell">要求されたボリュームサイズがこの値を超えている場合、プロビジョニングが失敗します</block>
  <block id="7962423206a6704e20fa94085d19b517" category="cell">“”（デフォルトでは適用されません）</block>
  <block id="f2f2c7c3c767da610bd95934104674f6" category="cell">「バグトレースフラグ」</block>
  <block id="ae0784115c8f815d4a2ca170c59f3c99" category="cell">トラブルシューティング時に使用するデバッグフラグ。例： {"API" ： false 、 "method" ： true}</block>
  <block id="37a6259cc0c1dae299a7866489dff0bd" category="cell">null</block>
  <block id="88dce60232453383ab0d1c3c59cc931d" category="admonition">トラブルシューティングを行い、詳細なログダンプが必要な場合を除き、「 ebugTraceFlags 」は使用しないでください。</block>
  <block id="fcca02e29a08e37c6faf37a418b8d5c8" category="admonition">Astra Trident は、ボリュームを作成すると、ストレージプール上のすべてのラベルを、プロビジョニング時にバッキングストレージ LUN にコピーします。ストレージ管理者は、ストレージプールごとにラベルを定義し、ストレージプール内に作成されたすべてのボリュームをグループ化できます。これにより、バックエンド構成で提供されるカスタマイズ可能な一連のラベルに基づいてボリュームを簡単に区別できます。</block>
  <block id="a52b8d71eedc2812fe762b3ec88bfc2e" category="section-title">例 1 ：ボリュームタイプが 3 つの solidfire-san-driver のバックエンド構成</block>
  <block id="3185240fb49cba19667fbdf639f3271e" category="paragraph">次の例は、 CHAP 認証を使用するバックエンドファイルと、特定の QoS 保証を適用した 3 つのボリュームタイプのモデリングを示しています。その場合 ' ストレージ・クラスを定義して 'iops`storage クラス・パラメータを使用します</block>
  <block id="d030a0e9c177498f4267bf1a6a4eab28" category="section-title">例 2 ：仮想ストレージプールを使用する solidfire-SAN ドライバ用のバックエンドとストレージクラスの設定</block>
  <block id="fe8fbdb035f6bebecaf9a52e36d8a595" category="paragraph">この例は、仮想ストレージプールで設定されたバックエンド定義ファイルと、それらを参照する StorageClasses を示しています。</block>
  <block id="87af0508250ed6f900914914280a5eaf" category="paragraph">以下に示すバックエンド定義ファイルの例では ' すべてのストレージ・プールに対して特定のデフォルトが設定されていますこれにより 'type' が Silver に設定されます仮想ストレージプールは「ストレージ」セクションで定義します。この例では、一部のストレージプールで独自のタイプが設定されており、一部のプールでは上記で設定したデフォルト値が上書きされます。</block>
  <block id="dc4edcc28563e022c1d21dec9d28dcca" category="paragraph">次の StorageClass 定義は、上記の仮想ストレージプールを参照してください。parameters.selector` フィールドを使用すると ' 各 StorageClass は ' ボリュームのホストに使用できる仮想プールを呼び出しますボリュームには、選択した仮想プール内で定義された要素があります。</block>
  <block id="e4af8ad03936f6a7724e17f6e83c09c8" category="paragraph">最初の StorageClass （ 'olidfire-gold -f4` ）は、最初の仮想ストレージプールにマップされます。ゴールドのボリューム・タイプ QoS を備えた唯一のゴールド・パフォーマンスを提供するプールです最後の StorageClass （ 'olidfire-cin`) は、シルバーパフォーマンスを提供するストレージプールをすべて呼び出します。Trident が、どの仮想ストレージプールを選択するかを判断し、ストレージ要件を確実に満たすようにします。</block>
  <block id="4d0d37d727675761e4c0e324eb57ca2f" category="list-text"><block ref="4d0d37d727675761e4c0e324eb57ca2f" category="inline-link-macro-rx"></block></block>
  <block id="ac8d6c792ab9df0b15a26713390895f1" category="summary">Cloud Volumes Service for Google Cloud を Astra Trident のバックエンドとして設定する方法を、提供されている構成例を使用して説明します。</block>
  <block id="fd1248bc6e4583a3f250f8e575cd59fe" category="doc">GCP バックエンドの CVS を設定します</block>
  <block id="2562e7447cd588d1768109da5ba66ef1" category="paragraph">提供されている構成例を使用して、ネットアップ Cloud Volumes Service （ CVS ） for Google Cloud Platform （ GCP ）を Astra Trident インストールのバックエンドとして設定する方法を説明します。</block>
  <block id="b85237ff884eb3aa5c20d9ffcdabbeac" category="admonition">NetApp Cloud Volumes Service for Google Cloud では、サイズが 100GiB 未満の CVS パフォーマンスボリュームや 300GiB 未満の CVS ボリュームはサポートされていません。Trident は、要求されたボリュームが最小サイズより小さい場合、最小サイズのボリュームを自動的に作成します。</block>
  <block id="da195e41c537042ae77405110c4512ff" category="paragraph">を設定して使用します<block ref="5129d3f1116e9c5221bfcf965a1ede35" category="inline-link-rx"></block> バックエンドには次のものが必要です。</block>
  <block id="6801d56ba08d1acc2876c196223d531a" category="list-text">ネットアップ CVS で設定された Google Cloud アカウント</block>
  <block id="2c00ff9c7700dc3529c57f0a5281bbe2" category="list-text">Google Cloud アカウントのプロジェクト番号</block>
  <block id="43752d169c5729fffa3a6557a0978cb8" category="list-text">「 netappcloudvolumes .admin 」ロールを持つ Google Cloud サービスアカウント</block>
  <block id="5d6ade9bdfebc79abf4c55e55a2c9941" category="list-text">CVS サービスアカウントの API キーファイル</block>
  <block id="7d0ee86ffc673e47ce20265e1e21317f" category="inline-link">GCP 上の CVS サービスタイプ</block>
  <block id="1f57356f89e79e6730290eddcf7b84ee" category="paragraph">Astra Trident に、小規模なボリュームがデフォルトでサポートされるようになりました<block ref="fc2935a8a76e337f6e814f65964a47b6" category="inline-link-rx"></block>。「 torageClass=software 」で作成されたバックエンドの場合、ボリュームのプロビジョニングサイズは最小 300GiB になります。現在、 CVS ではこの機能が限定的な可用性で提供されており、テクニカルサポートは提供されていません。1TiB 未満のボリュームにアクセスするには、ユーザがサインアップする必要があります<block ref="daab940ca038632df7b3bcdb2ce67b4b" category="inline-link-rx"></block>。** 非本番 ** のワークロードでは 1TiB 未満のボリュームを使用することを推奨します。</block>
  <block id="adf38902d2794fb5eb0ede6324a90db7" category="admonition">デフォルトの CVS サービスタイプ（「 torageClass=software 」）を使用してバックエンドを導入する場合、該当するプロジェクト番号とプロジェクト ID について、 GCP の 1TiB 未満のボリューム機能へのアクセス権をユーザが取得する必要があります。これは Astra Trident で sub-1TiB 個のボリュームをプロビジョニングするために必要です。この条件を指定しない場合、 600 GiB 未満の PVC でボリュームの作成が失敗します。を使用して 1TiB 未満のボリュームへのアクセスを取得します<block ref="d5347d47b24e3303f1c7b0ae61e08dc7" category="inline-link-rx"></block>。</block>
  <block id="3e6d0b5d82e6a07b21f37953b4f07f2b" category="paragraph">デフォルトの CVS サービスレベル用に Astra Trident で作成されたボリュームは、次のようにプロビジョニングされます。</block>
  <block id="b0f9c06798383f1aa62530b497a530f7" category="list-text">300GiB 未満の PVC があると、 Astra Trident によって 300GiB の CVS ボリュームが作成されます。</block>
  <block id="f8d45755378c123e72db60a65c99c9eb" category="list-text">300GiB から 600GiB の PVC があると、 Astra Trident が要求されたサイズの CVS ボリュームを作成します。</block>
  <block id="60f847f16dcff8ca2ff2ce3434bcb4c9" category="list-text">600GiB から 1TiB までの PVC の場合、 Astra Trident によって 1TiB の CVS ボリュームが作成されます。</block>
  <block id="96ca04bda01b9542611aa702d16b37ee" category="list-text">1TiB を超える PVC の場合、要求サイズの CVS ボリュームが Astra Trident に作成されます。</block>
  <block id="07cc9934740ba3dd46a0d7d2c9502d39" category="cell">"GCP-cvs"</block>
  <block id="f476273c71e20fc5a845a5345a620117" category="cell">ドライバ名 + "_" + API キーの一部</block>
  <block id="6eb82a822b962404b9694b93f2967679" category="cell">'torageClass'</block>
  <block id="f26f4f79d1de66f6ce1a2d9a1663dc5e" category="cell">ストレージのタイプ「ハードウェア」（パフォーマンス最適化）または「ソフトウェア」（ CVS サービスタイプ）から選択可能</block>
  <block id="c96383270cbab23de47b4f0961f64929" category="cell">「 ProjectNumber 」</block>
  <block id="6a9b4c6a3586ab6a85d6c78e7dda0570" category="cell">Google Cloud アカウントのプロジェクト番号。この値は、 Google Cloud ポータルのホームページにあります。</block>
  <block id="2086191016950a784040f7d22ab27f60" category="cell">「 apiRegion 」と入力します</block>
  <block id="c785bbb8190e6c0c816762918e34a0d7" category="cell">CVS アカウント地域。バックエンドがボリュームをプロビジョニングするリージョンです。</block>
  <block id="a34d72a685d5e27eb6bc18f54a7bab1d" category="cell">「 apiKey 」と入力します</block>
  <block id="3e4dad689bfe319e0980748c1c2175a7" category="cell">「 netappcloudvolumes 」ロールを持つ Google Cloud サービスアカウントの API キー。このレポートには、 Google Cloud サービスアカウントの秘密鍵ファイルの JSON 形式のコンテンツが含まれています（バックエンド構成ファイルにそのままコピーされます）。</block>
  <block id="af18429250667f805769a7755a008c1f" category="cell">「 ProxyURL 」と入力します</block>
  <block id="99d5bed813f066a1a1551b1bdab48e21" category="cell">CVS アカウントへの接続にプロキシサーバが必要な場合は、プロキシ URL を指定します。プロキシサーバには、 HTTP プロキシまたは HTTPS プロキシを使用できます。HTTPS プロキシの場合、プロキシサーバで自己署名証明書を使用するために証明書の検証はスキップされます。認証が有効になっているプロキシサーバはサポートされていません。</block>
  <block id="2b45af5c768d7b2495ef631c991ecd78" category="cell">「 nfsvMountOptions 」のように入力します</block>
  <block id="b9cc8276829a756e7a22476617204267" category="cell">NFS マウントオプションのきめ細かな制御。</block>
  <block id="2288620b3dc019c6359bcc7f50b72ab3" category="cell">要求されたボリュームサイズがこの値を超えている場合はプロビジョニングが失敗します</block>
  <block id="567c7f0eca746ed7513764be5ecf6d03" category="cell">"" （デフォルトでは適用されません）</block>
  <block id="0322003a3502f221fdb74b059dfff46e" category="cell">「サービスレベル」</block>
  <block id="5a5b2759e0577a3e22002ed8430f2b4f" category="cell">新しいボリュームの CVS サービスレベル。「 Standard 」、「 Premium 」、「 Extreme 」のいずれかです。</block>
  <block id="e472abc54914c303a14c29f7e853a28a" category="cell">標準</block>
  <block id="e39a04a98487bb1fd113f63d47331565" category="cell">トラブルシューティング時に使用するデバッグフラグ。例： \\{"API":false," メソッド ":true}`トラブルシューティングを行って詳細なログダンプが必要な場合を除き、このオプションは使用しないでください。</block>
  <block id="e96ca96c25a07de5f03e2535b0c2f7fc" category="paragraph">共有 VPC ネットワークを使用する場合は、「 ProjectNumber 」と「 hostProjectNumber 」の両方を指定する必要があります。その場合、「 ProjectNumber 」はサービスプロジェクト、「 hostProjectNumber 」はホストプロジェクトです。</block>
  <block id="34c1edfb4ac8581528c3791be680aeb3" category="inline-link">CVS サービスタイプ</block>
  <block id="457c2f1fead29343fe617ea61b06aaff" category="admonition">'torageClass' は、目的のを選択するために使用できるオプションのパラメータです<block ref="46dc1bdb584c5005116d9d2a4d889e1d" category="inline-link-rx"></block>。基本の CVS サービスタイプ (`torageClass=software') または CVS-Performance サービスタイプ (`torageClass=hardware') から選択できます。このサービスタイプは、 Trident がデフォルトで使用します。バックエンド定義でそれぞれの CVS の torageClass を提供する 'apiRegion' を指定していることを確認します</block>
  <block id="8ae8f69dea7cff0617560bc62f9c8c21" category="admonition">Astra Trident は、 Google Cloud 上の基本 CVS サービスタイプと統合されている ** ベータ版の機能 ** で、本番環境のワークロード向けではありません。Trident は、 CVS パフォーマンスサービスタイプでは完全にサポートされている ** で、デフォルトで使用されます。</block>
  <block id="4dd7128ceae058946c44bbbb0985ec6f" category="paragraph">各バックエンドは、 1 つの Google Cloud リージョンにボリュームをプロビジョニングします。他のリージョンにボリュームを作成する場合は、バックエンドを追加で定義します。</block>
  <block id="5477b38834c7f5d99403326a17f0bf55" category="paragraph">構成ファイルの特別なセクションで次のオプションを指定することで、各ボリュームのデフォルトのプロビジョニング方法を制御できます。以下の設定例を参照してください。</block>
  <block id="9c64942fe493cb70c474ff447429d8a4" category="cell">「 exportRule 」</block>
  <block id="4e69ff68e3ee9207d53a76748485f3d8" category="cell">新しいボリュームのエクスポートルール</block>
  <block id="1274e36c193ec0ce8b5c49d5e78ffd7b" category="cell">"0.0.0.0/0 "</block>
  <block id="ce8f82152151ae2aadaec166eca744a9" category="cell">「スナップショット方向」</block>
  <block id="51b2015e6da8653f4041b71312ad43fe" category="cell">「 .snapshot 」ディレクトリにアクセスします</block>
  <block id="c07fbc0b2a1a865fe9e3a55c05b4f690" category="cell">いいえ</block>
  <block id="7556d5a1b0c5f68b7cb5aedaa3156008" category="cell">「スナップショット予約」</block>
  <block id="31ed61cc3c85d0bb697cd12b77f37fd1" category="cell">Snapshot 用にリザーブされているボリュームの割合</block>
  <block id="e76dcf1d6497658a2994b5f1f65b7a83" category="cell">"" （ CVS のデフォルト値をそのまま使用）</block>
  <block id="a48a8458539e489328f4d6d3fc0ee288" category="cell">「 size 」</block>
  <block id="dc78a90de250a0f2ca8ad52ee0c5d21b" category="cell">新しいボリュームのサイズ</block>
  <block id="33b57ed56f35d9bd9c44a151d47870c5" category="cell">"100Gi"</block>
  <block id="b2a2a92e6239fca01cafbcfd41760043" category="paragraph">「 exportRule 」の値は、 CIDR 表記の IPv4 アドレスまたは IPv4 サブネットの任意の組み合わせをカンマで区切ったリストにする必要があります。</block>
  <block id="24ee58a4f143adf08af9c1d30049aab9" category="admonition">CVS Google Cloud バックエンドで作成されたすべてのボリュームについて、 Trident は、ストレージプールにあるすべてのラベルを、プロビジョニング時にストレージボリュームにコピーします。ストレージ管理者は、ストレージプールごとにラベルを定義し、ストレージプール内に作成されたすべてのボリュームをグループ化できます。これにより、バックエンド構成で提供されるカスタマイズ可能な一連のラベルに基づいてボリュームを簡単に区別できます。</block>
  <block id="25f4894ddaab3c1182f12732d3bcf889" category="section-title">例 1 ：最小限の構成</block>
  <block id="9fe036cdf8651713d44464a40094dc62" category="paragraph">これは、バックエンドの絶対的な最小構成です。</block>
  <block id="db7f67d90a618d3698e7aab6ddef7169" category="section-title">例 2 ：基本 CVS サービスタイプの設定</block>
  <block id="22765d2acb079f52fa8f5b179e9a74fc" category="paragraph">この例は、基本 CVS サービスタイプを使用するバックエンド定義を示しています。このサービスタイプは、汎用ワークロード向けであり、パフォーマンスが低く、ゾーンの可用性も高くなります。</block>
  <block id="32c780bbc74d6c4f4c9ff8d54332fef9" category="section-title">例 3 ：単一のサービスレベルの設定</block>
  <block id="3862c5daf26e4fabfbac9261779b440a" category="paragraph">この例は、 Google Cloud us-west2 リージョン内のすべての Astra Trident で作成されたストレージに同じ要素を適用するバックエンドファイルを示しています。この例は ' バックエンド構成ファイルでの ProxyURL の使用方法も示しています</block>
  <block id="3a050f4cfb1985247f813dd3432ed5e6" category="section-title">例 4 ：仮想ストレージプールの構成</block>
  <block id="59e397d220ba994003ab3439526d48d1" category="paragraph">この例は、仮想ストレージプールで構成されたバックエンド定義ファイルと、それを参照する「 torageClasses 」を示しています。</block>
  <block id="a1306d5e7389ac9f3740a973a3175a2c" category="paragraph">以下に示すバックエンド定義ファイルの例では ' 特定のデフォルトがすべてのストレージプールに設定されていますこれにより 'napshotReserve が 5% に設定され 'exportRule' が 0.0.0.0/0 に設定されます仮想ストレージプールは「ストレージ」セクションで定義します。この例では ' 各ストレージ・プールが独自のサービス・レベルを設定し ' 一部のプールがデフォルト値を上書きします</block>
  <block id="7229192fbc3d9420b90f84958fee3b0d" category="paragraph">次の StorageClass 定義は、上記のストレージプールを参照してください。parameters.selector` フィールドを使用すると ' ボリュームのホストに使用される仮想プールを各 StorageClass に指定できますボリュームには、選択したプールで定義された要素があります。</block>
  <block id="b60daecbb1685b08e94947d4137aa916" category="paragraph">最初の StorageClass （「 cvs-mextreme -extra-protection 」）は、最初の仮想ストレージプールにマッピングされます。スナップショット予約が 10% の非常に高いパフォーマンスを提供する唯一のプールです。最後の StorageClass （「 cvs-extra-protection 」）は、 10% のスナップショット予約を提供するストレージプールを呼び出します。Trident が、どの仮想ストレージプールを選択するかを決定し、 Snapshot リザーブの要件を確実に満たします。</block>
  <block id="3f297ef15cde0668e93b35f2752fd4fd" category="section-title">次の手順</block>
  <block id="3ad256eea0abb551eaab63c84aa3d1f9" category="paragraph">バックエンド構成ファイルを作成したら、次のコマンドを実行します。</block>
  <block id="a61ed3c1ecae587dbee1f2c0ace81e3b" category="paragraph">バックエンドの作成に失敗した場合は、バックエンドの設定に何か問題があります。次のコマンドを実行すると、ログを表示して原因を特定できます。</block>
  <block id="8427b84145b88f048d5caa532324cd11" category="paragraph">構成ファイルで問題を特定して修正したら、 create コマンドを再度実行できます。</block>
  <block id="fe328cbae90d1a295c7e45733450d711" category="summary">Trident を使用すると、 Kubernetes クラスタ内のノードに必要な NFS ツールと iSCSI ツールを自動的にインストールできます。</block>
  <block id="878a6c37d04e0b8f6746f8b1caf14789" category="doc">ワーカーノードの自動準備</block>
  <block id="360deb71f11973ab55dca824207c8594" category="paragraph">Astra Trident は、 Kubernetes クラスタ内のノードに必要な「 nfs 」ツールと「 iscsi 」ツールを自動的にインストールできます。これは * ベータ版の機能 * であり、本番環境クラスタ向けの機能ではありません。現在、この機能は、 CentOS 、 RHEL 、および Ubuntu * を実行するノードで使用できます。</block>
  <block id="c105a7b612eafd056a1525c7dea9ddda" category="paragraph">この機能のために 'Astra Trident には 'tridentctl を使用して導入されたインストール用の --enable-node-prep という新しいインストール・フラグが含まれていますTrident 演算子を使用する展開の場合は、ブール値オプションの「 enableNodePrep 」を使用します。</block>
  <block id="f6aec0bd36e5ab01303aa37ab52ec8d8" category="admonition">--enable-node-prep のインストール・オプションは 'Astra Trident に 'NFS および iSCSI のパッケージやサービスが 'Worker ノードにマウントされているときに確実にインストールされ ' 実行されるように指示しますこの機能は * ベータ版で、本番環境での使用が認められていない * 開発 / テスト環境で使用することを目的としています。</block>
  <block id="f587ac26702eec76a28d335e634449b1" category="paragraph">--enable-node-prep フラグが 'tridentctl' とともに導入された Astra Trident のインストールに含まれている場合は ' 次のようになります</block>
  <block id="7a63850885709e4125994faba4bd1667" category="list-text">インストールの一環として、 Astra Trident が実行するノードを登録します。</block>
  <block id="c1ebfd51cbff72f2afbe7f30f827eda5" category="list-text">Persistent Volume Claim （ PVC ；永続的ボリューム要求）が行われると、 Astra Trident は管理対象のバックエンドの 1 つから PV を作成します。</block>
  <block id="5b70ed42b3c8f8528cef50ad01425fb3" category="list-text">ポッド内の PVC を使用するには、ポッドが稼働するノードに Astra Trident がボリュームをマウントする必要があります。Trident が、必要な NFS / iSCSI クライアントユーティリティをインストールし、必要なサービスがアクティブになっていることを確認します。これは、ボリュームがマウントされる前に実行します。</block>
  <block id="ac5aafb0e9591a4bede4be4f37f141cf" category="paragraph">ワーカーノードの準備は、最初にボリュームをマウントしようとしたときに 1 回だけ実行されます。Astra Trident の外部では 'NFS' および iSCSI ユーティリティに変更が加えられていない限り ' 後続のすべてのボリューム・マウントは正常に実行されます</block>
  <block id="bf3c2b9140b25189d7032529446cfaf4" category="paragraph">このようにして、 Astra Trident は、 Kubernetes クラスタ内のすべてのノードに、ボリュームのマウントと接続に必要なユーティリティを確実に提供します。NFS ボリュームの場合は、エクスポートポリシーでボリュームのマウントも許可する必要があります。Trident では、バックエンドごとにエクスポートポリシーを自動的に管理できます。また、エクスポートポリシーをアウトオブバンドで管理することもできます。</block>
  <block id="8f828c7344e7fe65d66237a25193068b" category="summary">ONTAP SAN ドライバを使用して ONTAP バックエンドを設定するための準備方法について説明します。</block>
  <block id="9a5f09cf66e692efdae493ce4c9aa64f" category="doc">準備</block>
  <block id="b5c795328aa98beaf5bdc15b54a533c1" category="paragraph">ONTAP SAN ドライバを使用して ONTAP バックエンドを設定するための準備方法について説明します。ONTAP バックエンドすべてに対して、 Astra Trident が SVM に少なくとも 1 つのアグリゲートを割り当てておく必要があります。</block>
  <block id="5475028f502d04bc17cdfdf613d28cbf" category="paragraph">複数のドライバを実行し、 1 つまたは複数のドライバを参照するストレージクラスを作成することもできます。たとえば 'ONTAP-SAN' ドライバを使用する「 -dev 」クラスと 'ONTAP-SAN-エコノミー 'one を使用する「デフォルト」クラスを設定できます</block>
  <block id="3b40a8d4978192509495ce411fe8db8c" category="paragraph">すべての Kubernetes ワーカーノードに適切な iSCSI ツールをインストールしておく必要があります。を参照してください <block ref="9ec363a49b52db56773849151c5853d4" category="inline-link-macro-rx"></block> 詳細：</block>
  <block id="c75f7811d70d17dbcd88e9d03752cbed" category="section-title">認証</block>
  <block id="51e35cec1e001fb8abfbe474a18dd282" category="paragraph">Astra Trident には、 ONTAP バックエンドを認証する 2 つのモードがあります。</block>
  <block id="00cbc0e7ed0014813b07fc8452f60df1" category="list-text">credential based ：必要な権限を持つ ONTAP ユーザのユーザ名とパスワード。ONTAP バージョンとの互換性を最大限に高めるために 'admin' または vsadmin などの事前定義されたセキュリティ・ログイン・ロールを使用することを推奨します</block>
  <block id="e2cd9c84c3ebf14f3c81be4692848e5b" category="list-text">証明書ベース： Astra Trident は、バックエンドにインストールされた証明書を使用して ONTAP クラスタと通信することもできます。この場合、バックエンド定義には、 Base64 でエンコードされたクライアント証明書、キー、および信頼された CA 証明書（推奨）が含まれている必要があります。</block>
  <block id="f3a85dfc22761b09346aa0134d77d4f9" category="paragraph">また、既存のバックエンドを更新したり、クレデンシャルベースから証明書ベースに移行したり、その逆に移行したりすることもできます。クレデンシャルと証明書の両方が * 提供されている場合、 Astra Trident は、バックエンド定義からクレデンシャルを削除するように警告を発行しながら、デフォルトで証明書を使用します。</block>
  <block id="a2f8f419bf420960ef8cca73e1999e09" category="section-title">クレデンシャルベースの認証を有効にします</block>
  <block id="ceae351bc6b26100a9b1685a5d477c0a" category="paragraph">Trident が ONTAP バックエンドと通信するには、 SVM を対象とした管理者またはクラスタを対象とした管理者のクレデンシャルが必要です。「 admin 」や「 vsadmin 」など、事前定義された標準的な役割を使用することをお勧めします。これにより、今後のリリースの ONTAP との互換性が今後のリリースの Astra Trident で使用される機能 API が公開される可能性があります。カスタムのセキュリティログインロールは Astra Trident で作成して使用できますが、推奨されません。</block>
  <block id="2312b8f77f99c346269b67308afc3649" category="paragraph">バックエンド定義の例は次のようになります。</block>
  <block id="2a2ef6dcf08a8789a55301af5f71304c" category="paragraph">バックエンド定義は、クレデンシャルがプレーンテキストで保存される唯一の場所であることに注意してください。バックエンドが作成されると、ユーザ名とパスワードが Base64 でエンコードされ、 Kubernetes シークレットとして格納されます。クレデンシャルの知識が必要なのは、バックエンドの作成と更新だけです。この処理は管理者専用で、 Kubernetes / ストレージ管理者が実行します。</block>
  <block id="052f76b486189a7b01340d5134eb7985" category="section-title">証明書ベースの認証を有効にします</block>
  <block id="0778b06c5ea9fded4fd7b586b248dd86" category="paragraph">新規または既存のバックエンドは証明書を使用して ONTAP バックエンドと通信できます。バックエンド定義には 3 つのパラメータが必要です。</block>
  <block id="d5b9c9db262b1927d7914504f3587adb" category="list-text">clientCertificate ： Base64 でエンコードされたクライアント証明書の値。</block>
  <block id="8f2b750dd6a57864f0e36828c248ddfc" category="list-text">clientPrivateKey ： Base64 でエンコードされた、関連付けられた秘密鍵の値。</block>
  <block id="200c2d2a44dec6455fa1c947f9c1f534" category="list-text">trustedCACertifate: 信頼された CA 証明書の Base64 エンコード値。信頼された CA を使用する場合は、このパラメータを指定する必要があります。信頼された CA が使用されていない場合は無視してかまいません。</block>
  <block id="6b634823c19ebc37c9e4fdbf08de1fff" category="paragraph">一般的なワークフローは次の手順で構成されます。</block>
  <block id="c92e58d7dd251e6e6cdb16291a6dec90" category="list-text">クライアント証明書とキーを生成します。生成時に、 ONTAP ユーザとして認証するように Common Name （ CN ；共通名）を設定します。</block>
  <block id="69b521cddbc52a2d14539e349e2930f0" category="list-text">信頼された CA 証明書を ONTAP クラスタに追加します。この処理は、ストレージ管理者がすでに行っている可能性があります。信頼できる CA が使用されていない場合は無視します。</block>
  <block id="2f3945695e5ca88abb46af80d87c6972" category="list-text">ONTAP クラスタにクライアント証明書とキーをインストールします（手順 1 ）。</block>
  <block id="e81810c4035ad015ad3f0d8c4f2c6454" category="list-text">ONTAP セキュリティ・ログイン・ロールが 'cert' 認証方式をサポートしていることを確認します</block>
  <block id="ea3bf76b270384627e7bcfb197ddb17b" category="list-text">生成された証明書を使用して認証をテストONTAP 管理 LIF &gt; と &lt;vserver name&gt; は、管理 LIF の IP アドレスおよび SVM 名に置き換えてください。</block>
  <block id="83f2adf143dc8f5fbbb9d924f840c1ce" category="list-text">Base64 で証明書、キー、および信頼された CA 証明書をエンコードする。</block>
  <block id="8d36e570f1edac5ae19e6733e3fbb4d5" category="list-text">前の手順で得た値を使用してバックエンドを作成します。</block>
  <block id="2ab8ad0fce083cd02635b9126cf4353c" category="section-title">認証方法を更新するか、クレデンシャルをローテーションして</block>
  <block id="85a73bd1a3fad449b226a7eecb546c6b" category="paragraph">既存のバックエンドを更新して、別の認証方式を使用したり、クレデンシャルをローテーションしたりすることができます。これはどちらの方法でも機能します。ユーザ名とパスワードを使用するバックエンドは証明書を使用するように更新できますが、証明書を使用するバックエンドはユーザ名とパスワードに基づいて更新できます。これを行うには ' tridentctl backend update を実行するために必要なパラメータを含む更新された backend.json ファイルを使用します</block>
  <block id="5e36c3d66bd47ae551071244dc48df17" category="admonition">パスワードのローテーションを実行する際には、ストレージ管理者が最初に ONTAP でユーザのパスワードを更新する必要があります。この後にバックエンドアップデートが続きます。証明書のローテーションを実行する際に、複数の証明書をユーザに追加することができます。その後、バックエンドが更新されて新しい証明書が使用されるようになります。この証明書に続く古い証明書は、 ONTAP クラスタから削除できます。</block>
  <block id="6819218365fe3a3d66752f663feecddb" category="paragraph">バックエンドを更新しても、すでに作成されているボリュームへのアクセスは中断されず、その後のボリューム接続にも影響しません。バックエンドの更新が成功した場合、 Astra Trident が ONTAP バックエンドと通信し、以降のボリューム処理を処理できることを示しています。</block>
  <block id="93a4f17ec735c794a2d38eb0d9dc736b" category="section-title">igroup を指定します</block>
  <block id="f66329c2f28d3aade033dade4fa02359" category="paragraph">Astra Trident は、 igroup を使用して、プロビジョニングするボリューム（ LUN ）へのアクセスを制御します。管理者はバックエンドに igroup を指定する方法として、次の 2 つを選択できます。</block>
  <block id="caf7ba3262c90c77b09b7d53946b7be4" category="list-text">Astra Trident では、バックエンドごとに igroup を自動的に作成、管理できます。バックエンド定義に igroupName が含まれていない場合、 Astra Trident は、 SVM 上に trident-&lt;backend-UUID&gt; という名前の igroup を作成します。これにより、各バックエンドに専用の igroup が割り当てられ、 Kubernetes ノードの IQN の自動追加や削除が処理されます。</block>
  <block id="b325b5680680ba28771d11978100bf3a" category="list-text">また、事前に作成された igroup もバックエンドの定義で提供できます。これは 'igroupName'config パラメータを使用して実行できますAstra Trident が、 Kubernetes ノードの IQN を既存の igroup に追加または削除します。</block>
  <block id="ccdb9f53393401f058dcfc9c1de74547" category="paragraph">igroupName が定義されているバックエンドの場合 'igroupName を tridentctl バックエンド・アップデートで削除して 'Astra Trident の自動ハンドル・ igroup を持つことができますすでにワークロードに接続されているボリュームへのアクセスが中断されることはありません。今後作成される igroup Astra Trident を使用して接続を処理します。</block>
  <block id="8841675f2e0dbba5719034b41ac52435" category="admonition">Astra Trident の一意のインスタンスごとに igroup を専用にすることを推奨します。これは、 Kubernetes 管理者とストレージ管理者にとって有益です。CSI Trident は、クラスタノード IQN の igroup への追加と削除を自動化し、管理を大幅に簡易化します。Kubernetes 環境（および Astra Trident インストール）全体で同じ SVM を使用する場合、専用の igroup を使用することで、ある Kubernetes クラスタに対する変更が、別の Kubernetes クラスタに関連付けられた igroup に影響しないようにできます。また、 Kubernetes クラスタ内の各ノードに一意の IQN を設定することも重要です。前述のように、 Astra Trident は IQN の追加と削除を自動的に処理します。ホスト間で IQN を再使用すると、ホスト間で誤って認識されて LUN にアクセスできないような、望ましくないシナリオが発生する可能性があります。</block>
  <block id="a3a4bece92a1c7bb017b9bc2681621f7" category="paragraph">Astra Trident が CSI Provisioner として機能するように設定されている場合、 Kubernetes ノード IQN は自動的に igroup に追加 / 削除されます。Kubernetes クラスタにノードを追加すると 'trident-csi ’ DemonSet によって ' 新しく追加されたノードにポッド（ trident-csi-xxxxx ）が導入され ' ボリュームを接続できる新しいノードが登録されますノード IQN もバックエンドの igroup に追加されます。ノードが遮断され、削除され、 Kubernetes から削除された場合も、同様の手順で IQN の削除が処理されます。</block>
  <block id="3882232e20d620974a87db190a124fe7" category="paragraph">Astra Trident が CSI Provisioner として実行されない場合は、 Kubernetes クラスタ内のすべてのワーカーノードからの iSCSI IQN を含むように、 igroup を手動で更新する必要があります。Kubernetes クラスタに参加するノードの IQN を igroup に追加する必要があります。同様に、 Kubernetes クラスタから削除されたノードの IQN を igroup から削除する必要があります。</block>
  <block id="42f93278b0d15c8d0f6613813bf586d5" category="section-title">双方向 CHAP を使用して接続を認証します</block>
  <block id="5d34ca21e19aa85f2e3cbc5bc90702fb" category="paragraph">Astra Trident は 'ONTAP-SAN' ドライバと 'ONTAP-SAN-エコノミー ドライバの双方向 CHAP を使用して iSCSI セッションを認証できますこれには ' バックエンド定義で useCHAP オプションを有効にする必要がありますtrue に設定すると 'Astra Trident は SVM のデフォルトイニシエータセキュリティを双方向 CHAP に構成し ' バックエンドファイルからのユーザ名とシークレットを設定します接続の認証には双方向 CHAP を使用することを推奨します。次の設定例を参照してください。</block>
  <block id="12dd7bfa072b5a1eecf975f6a5a6eaa7" category="admonition">「 useCHAP 」パラメータは、 1 回だけ設定できるブール型のオプションです。デフォルトでは false に設定されています。true に設定したあとで、 false に設定することはできません。</block>
  <block id="bc601528678aeeb582101ed205a054bc" category="paragraph">「 useCHAP=true' に加えて、「 chapInitiatorSecret 」、「 chapTargetInitiatorSecret 」、「 chapTargetUsername 」、および「 chapUsername 」フィールドもバックエンド定義に含める必要があります。シークレットは 'tridentctl update を実行してバックエンドを作成した後に変更できます</block>
  <block id="9ffdb95250e26c7a6b468126ac7c75b0" category="section-title">動作の仕組み</block>
  <block id="adbaa30840aebfe537058f72e0989326" category="paragraph">「 useCHAP 」を true に設定すると、ストレージ管理者は、ストレージバックエンドで CHAP を構成するように Astra Trident に指示します。これには次のものが含まれます。</block>
  <block id="29b4db879e4cc96a6b71bc763367624b" category="list-text">SVM で CHAP をセットアップします。</block>
  <block id="951e8b45bc49a5475337a1b55e3e3dc4" category="list-text">SVM のデフォルトのイニシエータセキュリティタイプが none （デフォルトで設定） * で、ボリュームに既存の LUN がない場合、 Astra Trident はデフォルトのセキュリティタイプを「 CHAP 」に設定し、 CHAP イニシエータとターゲットのユーザ名とシークレットの設定に進みます。</block>
  <block id="313818ab0cd3579429d5bd6e5faab8ff" category="list-text">SVM に LUN が含まれている場合、 Trident は SVM で CHAP を有効にしません。これにより、 SVM にすでに存在する LUN へのアクセスが制限されることはありません。</block>
  <block id="13e0c564d5e1fbd33279fb276166653d" category="list-text">CHAP イニシエータとターゲットのユーザ名とシークレットを設定します。これらのオプションは、バックエンド構成で指定する必要があります（上記を参照）。</block>
  <block id="9154c9db577ccbf466ca622a07931896" category="list-text">バックエンドに与えられた 'igroupName' へのイニシエータの追加を管理する指定されていない場合、デフォルトは「 trident 」になります。</block>
  <block id="2c7856e86a0cd46cb4fb48fa0886745e" category="paragraph">バックエンドが作成されると、 Astra Trident は対応する「 tridentbackend 」 CRD を作成し、 CHAP シークレットとユーザ名を Kubernetes シークレットとして保存します。このバックエンドの Astra Trident によって作成されたすべての PVS がマウントされ、 CHAP 経由で接続されます。</block>
  <block id="81f2df0265026a1a04bda5484798a10d" category="section-title">クレデンシャルをローテーションし、バックエンドを更新</block>
  <block id="a7fe005c9f49619f4438aac8932fb361" category="paragraph">CHAP 証明書を更新するには 'backend.json ファイルの CHAP パラメータを更新しますこれには 'CHAP シークレットを更新し 'tridentctl update コマンドを使用してこれらの変更を反映する必要があります</block>
  <block id="8959ac16a58b09dc5a158e86ab02cb53" category="admonition">バックエンドの CHAP シークレットを更新する場合は 'tridentctl' を使用してバックエンドを更新する必要がありますAstra Trident では変更を取得できないため、 CLI / ONTAP UI からストレージクラスタのクレデンシャルを更新しないでください。</block>
  <block id="1a59d0d7850406f157c314978eb3b821" category="paragraph">既存の接続は影響を受けません。 SVM の Astra Trident でクレデンシャルが更新されても、引き続きアクティブです。新しい接続では更新されたクレデンシャルが使用され、既存の接続は引き続きアクティブです。古い PVS を切断して再接続すると、更新されたクレデンシャルが使用されます。</block>
  <block id="fe1db7f37fb893d9995534febe29a78b" category="summary">Cloud Volumes Service for AWS を Astra Trident のバックエンドとして設定する方法を、提供されている構成例を使用して説明します。</block>
  <block id="6e399579bcb032270367d78455e1976f" category="doc">CVS for AWS バックエンドを設定する</block>
  <block id="f7dc2116b38f0f6097d64ca1dfdcd0b7" category="paragraph">提供されている構成例を使用して、ネットアップ Cloud Volumes Service （ CVS ） for AWS を Astra Trident のバックエンドとして設定する方法を説明します。</block>
  <block id="0eb1a8be2d6b9505f3b9940718c0c492" category="admonition">Cloud Volumes Service for AWS では、 100GB 未満のボリュームはサポートされません。Trident は、小さいボリュームが要求された場合は、 100GB のボリュームを自動的に作成します。</block>
  <block id="11873d2393ac3286e0e2949c7fb94c92" category="paragraph">を設定して使用します<block ref="9185b014ee020a0dd27e376023f04353" category="inline-link-rx"></block> バックエンドには次のものが必要です。</block>
  <block id="162fd644b5a366df1c98de24d39a28e4" category="list-text">ネットアップ CVS で設定された AWS アカウント</block>
  <block id="65e26b8fa373ad7924b14a196242b605" category="list-text">CVS アカウントの API リージョン、 URL 、およびキー</block>
  <block id="f8d960efa7386a75b65e6abbdb9e3c36" category="cell">「 aws -cvs 」</block>
  <block id="a6a8368ae9ff89e7a4ca4c9e2b64ab56" category="cell">CVS アカウント地域。この値は、 CVS Web ポータルのアカウント設定 / API アクセスで確認できます。</block>
  <block id="3639c86d22a854ef10a2cacfe9eed25d" category="cell">「 apiURL 」と入力します</block>
  <block id="9aea3113f9edf591b1b341775bd7d092" category="cell">CVS アカウント API の URL 。この値は、 CVS Web ポータルのアカウント設定 / API アクセスで確認できます。</block>
  <block id="3fc6085f3573a8e927eea401950de8d3" category="cell">CVS アカウントの API キー。この値は、 CVS Web ポータルのアカウント設定 / API アクセスで確認できます。</block>
  <block id="9a5b66949f53f92871d3e1a8aae0cc19" category="cell">「 ecretKey 」</block>
  <block id="e3891e2d275bb1f55f9de70059eed199" category="cell">CVS アカウントのシークレットキー。この値は、 CVS Web ポータルのアカウント設定 / API アクセスで確認できます。</block>
  <block id="1394ee99ba1680da948a315df62a7b62" category="admonition">「 apiURL 」は、「 apiRegion 」ごとに一意です。たとえば 'us-west-2 'apiRegion' にはがあります<block ref="445c370e1a8fd8a5bb35e4bcf66dc8ff" category="inline-link-rx"></block> 「 apiURL 」と入力します。同様に、 us-east-1 の apiRegion にもがあります<block ref="89a36317c553c294eadd1c2b2e179f46" category="inline-link-rx"></block> 「 apiURL 」と入力します。バックエンド構成に対応する正しい「 apiRegion 」パラメータと「 apiURL 」パラメータが CVS ダッシュボードにあることを確認してください。</block>
  <block id="b4ba9ff8dbbcd251a1cb4e16ba80c36c" category="paragraph">各バックエンドは、 1 つの AWS リージョンにボリュームをプロビジョニングします。他のリージョンにボリュームを作成する場合は、バックエンドを追加で定義します。</block>
  <block id="781e781b44169c656fb79130bd8bd062" category="cell">「 .snapshot 」ディレクトリの表示性を制御します</block>
  <block id="ef81b740be2293b7e3c41047afe98764" category="cell">" 100G "</block>
  <block id="635686d413c736dacb149d183959f020" category="admonition">CVS AWS バックエンドで作成されたすべてのボリュームに対して、 Astra Trident は、ストレージプールに含まれるすべてのラベルを、プロビジョニング時にストレージボリュームにコピーします。ストレージ管理者は、ストレージプールごとにラベルを定義し、ストレージプール内に作成されたすべてのボリュームをグループ化できます。これにより、バックエンド構成で提供されるカスタマイズ可能な一連のラベルに基づいてボリュームを簡単に区別できます。</block>
  <block id="2f51b29f400aa735b4f4bd32f0eeed4f" category="paragraph">この構成は、 CVS AWS を初めて使用して何か試してみるところですが、実際にはプロビジョニングするボリュームの範囲をさらに設定することを検討しています。</block>
  <block id="55c1dd55273b867b995333cc3abd250e" category="section-title">例 2 ：単一のサービスレベルの設定</block>
  <block id="f8ee3192003a383290a06e5d20105030" category="paragraph">次の例は、 AWS us-east-1 リージョンで作成されたすべての Astra Trident ストレージに同じ設定を適用するバックエンドファイルを示しています。この例は ' バックエンド・ファイルでの ProxyURL の使用方法も示しています</block>
  <block id="2b00c4aa6134b525e9355d880ecb0c8d" category="section-title">例 3 ：仮想ストレージプールの構成</block>
  <block id="ff342df7522d6b527768cc6bfe5f9fae" category="summary">Astra Trident により、 Kubernetes ユーザは作成後にボリュームを拡張できます。ここでは、 iSCSI ボリュームと NFS ボリュームの拡張に必要な設定について説明します。</block>
  <block id="15d79b565b148caa23e6f2b53813413d" category="section-title">iSCSI ボリュームを展開します</block>
  <block id="0b981ab19df55a28a02578aa5f326db8" category="paragraph">CSI プロビジョニングを使用して、 iSCSI Persistent Volume （ PV ）を拡張できます。</block>
  <block id="f8f338469c62eb8604f5304af08466ba" category="admonition">iSCSI ボリュームの拡張は 'ONTAP-SAN''ONTAP-SAN-エコノミー ''olidfire-SAN' ドライバによってサポートされており 'Kubernetes 1.16 以降が必要です</block>
  <block id="13311fb741bdb3b9d877937311a2d64d" category="paragraph">iSCSI PV の拡張には、次の手順が含まれます。</block>
  <block id="5141e3596f63bc5db3fd9ee32b736127" category="list-text">StorageClass 定義を編集して 'allowVolumeExpansion フィールドを true に設定します</block>
  <block id="9e7362e47322994c4d272d377e83f31b" category="list-text">PVC 定義を編集し 'PEC.resources.requests.storage を更新して ' 新たに必要とされるサイズを反映しますこれは ' 元のサイズより大きくなければなりません</block>
  <block id="0860a1b7122f04033fb722b29d878468" category="list-text">サイズを変更するには、 PV をポッドに接続する必要があります。iSCSI PV のサイズ変更には、次の 2 つのシナリオがあります。</block>
  <block id="7ac758b4597806f6880d9618fa093e52" category="list-text">PV がポッドに接続されている場合、 Astra Trident はストレージバックエンドのボリュームを拡張し、デバイスを再スキャンし、ファイルシステムのサイズを変更します。</block>
  <block id="7efffb2478ff651b7e45343b4e9f6fa8" category="list-text">未接続の PV のサイズを変更しようとすると、 Astra Trident がストレージバックエンドのボリュームを拡張します。PVC がポッドにバインドされると、 Trident はデバイスを再スキャンし、ファイルシステムのサイズを変更します。展開操作が正常に完了すると、 Kubernetes は PVC サイズを更新します。</block>
  <block id="ec3e34c26eaf059dc3ac58d8efc9fa37" category="paragraph">次の例は、 iSCSI PVS の仕組みを示しています。</block>
  <block id="fe9ee1935ea7894fe4fd2f600993cd7d" category="section-title">手順 1 ：ボリュームの拡張をサポートするようにストレージクラスを設定する</block>
  <block id="c83b8171dcc233263cf7eeaef8da6a4d" category="paragraph">既存の StorageClass の場合は 'allowVolumeExpansion パラメータを含めるように編集します</block>
  <block id="59973fd7be015512b53fe121a13d5580" category="section-title">手順 2 ：作成した StorageClass を使用して PVC を作成します</block>
  <block id="8592e7b08d26d1aa2ef3c44409c736fa" category="paragraph">Astra Trident が、永続的ボリューム（ PV ）を作成し、この永続的ボリューム要求（ PVC ）に関連付けます。</block>
  <block id="8dacc1d7fdb5bfd3f8a4daedf3ccdd88" category="section-title">手順 3 ： PVC を接続するポッドを定義します</block>
  <block id="85f5dec267aa48cff82ccaf993019e6d" category="paragraph">この例では、ポッドが作成され、「 1-pvc 」が使用されます。</block>
  <block id="ebae1958b6002fb43077a474d845284c" category="section-title">ステップ 4 ： PV を展開します</block>
  <block id="63188b171689bcd93b1ca818b3a2ab9c" category="paragraph">1Gi から 2Gi に作成された PV のサイズを変更するには、 PVC の定義を編集し、「 PEC.resources.request.storage 」を 2Gi に更新します。</block>
  <block id="eabf614ed44fe1c3e78cb2300949eb63" category="section-title">手順 5 ：拡張を検証する</block>
  <block id="28abbd693f528f04d0ff068b3013fcd6" category="paragraph">PVC 、 PV 、 Astra Trident のボリュームのサイズを確認することで、拡張が正しく機能しているかどうかを検証できます。</block>
  <block id="75b8249751a8ea5869a0b5a8e465efc1" category="section-title">NFS ボリュームを拡張します</block>
  <block id="b5d3e13cbbf4f66f0d6b13357e86f974" category="paragraph">Astra Trident は 'ONTAP-NAS'ONTAP-NAS-エコノミー 'ONTAP-NAS-flexp`'ONTAP-NAS-flexp`'AWS- 対 'GCP-cvs` でプロビジョニングされた NFS PVS のボリューム拡張をサポートしています 「 azure-NetApp-files 」バックエンド。</block>
  <block id="578f10bb7cad2abad1cbbcb9a9a732f9" category="paragraph">NFS PV のサイズを変更するには ' まず 'allowVolumeExpansion フィールドを true に設定してボリュームを拡張できるようにストレージ・クラスを構成する必要があります</block>
  <block id="27b4a9ed8609e35526601aa8d8be1ab9" category="paragraph">このオプションを指定せずにすでにストレージ・クラスを作成している場合は 'kubectl Edit storageclass を使用して既存のストレージ・クラスを編集するだけで ' ボリュームの拡張が可能になります</block>
  <block id="784f78e647973a0dcfa11b7a028c7eae" category="paragraph">Astra Trident が、この PVC に対して 20MiB の NFS PV を作成する必要があります。</block>
  <block id="3b16cea25bd4a9aaf5a9c3dcc13ea7eb" category="section-title">ステップ 3 ： PV を展開します</block>
  <block id="e5c2c0bfcfbe01e6174199aaff9616a5" category="paragraph">新しく作成した 20MiB PV のサイズを 1GiB に変更するには、 PVC を編集し、「 pec.resources.request.storage 」を 1GB に設定します。</block>
  <block id="4a59ce1bc63fd7e6333968fb4bbd9d45" category="section-title">手順 4 ：拡張を検証する</block>
  <block id="c70f05fed7c73e0be4a0b24c8532a87c" category="paragraph">PVC 、 PV 、 Astra Trident のボリュームのサイズを確認することで、サイズ変更が正しく機能しているかどうかを検証できます。</block>
  <block id="cf13ba16f33b5f6772614929649be6c2" category="summary">tridentctl import を使用して、既存のストレージボリュームを Kubernetes PV としてインポートできます。</block>
  <block id="5f48c343984786005c9830d96c6fca87" category="doc">ボリュームをインポート</block>
  <block id="3cf3b5626cbcac07ab0c5304e90870e8" category="section-title">ボリュームインポートをサポートするドライバ</block>
  <block id="be8c8810fd80d5e84acf47d57d4e0dbc" category="paragraph">次の表は、ボリュームのインポートをサポートするドライバと、それらのアップグレードが導入されたリリースを示しています。</block>
  <block id="b8e7b465df7c5979dc731d06e84ce2cf" category="cell">リリース。</block>
  <block id="b7a56ff81a861dd454ce0ee6725a66c2" category="paragraph">19.04</block>
  <block id="cb4e2f5c0cf3e43444774c2af2ada914" category="section-title">ボリュームをインポートする理由</block>
  <block id="b347f0936a6b1f232605f50447a930de" category="paragraph">Trident にボリュームをインポートするユースケースはいくつかあります。</block>
  <block id="cbccddedba4ba9a336f83d60dd1454f0" category="list-text">アプリケーションのコンテナ化と既存のデータセットの再利用</block>
  <block id="f0dd3bee13b8c14005d98bfbb9a48bf3" category="list-text">エフェメラルアプリケーション用のデータセットのクローンを使用する</block>
  <block id="97161389816216aabbaffd954ef4a1f4" category="list-text">障害が発生した Kubernetes クラスタの再構築</block>
  <block id="fd045b8743b2b7018e0480bc9a2dd4c5" category="list-text">ディザスタリカバリ時にアプリケーションデータを移行する</block>
  <block id="92f0642c89b416c59d914adfb1e33828" category="section-title">インポートはどのように機能しますか。</block>
  <block id="902881a0ede032887467576928b25fe0" category="paragraph">Persistent Volume Claim （ PVC ；永続ボリューム要求）ファイルは、ボリュームインポートプロセスで PVC を作成するために使用されます。少なくとも、次の例に示すように、 PVC ファイルには name 、 namespace 、 accessModes 、および storageClassName フィールドが含まれている必要があります。</block>
  <block id="be25b6ff84fa0d015f05f46bbbb6abd1" category="paragraph">tridentctl クライアントは ' 既存のストレージ・ボリュームをインポートするために使用されますTrident は、ボリュームのメタデータを保持し、 PVC と PV を作成することで、ボリュームをインポートします。</block>
  <block id="bcf64a12adc519c7d409f80e5cccbe24" category="paragraph">ストレージボリュームをインポートするには、ボリュームが含まれている Astra Trident バックエンドの名前と、ストレージ上のボリュームを一意に識別する名前（ ONTAP FlexVol 、 Element Volume 、 CVS ボリュームパスなど）を指定します。ストレージボリュームは、読み取り / 書き込みアクセスを許可し、指定された Astra Trident バックエンドからアクセスできる必要があります。引数 -f 文字列は必須であり、 YAML または JSON PVC ファイルへのパスを指定します。</block>
  <block id="021814b63472d2b6dab37ce7d62c3ea2" category="paragraph">Astra Trident がインポートボリューム要求を受信すると、既存のボリュームサイズが決定され、 PVC で設定されます。ストレージドライバによってボリュームがインポートされると、 PV は ClaimRef を使用して PVC に作成されます。再生ポリシーは、最初に PV 内の「そのまま」に設定されます。Kubernetes が PVC と PV を正常にバインドすると、再利用ポリシーがストレージクラスの再利用ポリシーに合わせて更新されます。ストレージクラスの再利用ポリシーが「削除」の場合、 PV を削除するとストレージボリュームは削除されます。</block>
  <block id="9d0bcc94449080a9fef1873acd638fb3" category="paragraph">--no-manage 引数を指定してボリュームをインポートすると、 Trident はオブジェクトのライフサイクルについて PVC または PV に対する追加の操作を実行しません。Trident は '--no-managed' オブジェクトの PV イベントと PVC イベントを無視するため 'PV を削除してもストレージ・ボリュームは削除されませんボリュームのクローンやサイズ変更などの他の処理も無視されます。このオプションは、コンテナ化されたワークロードに Kubernetes を使用するが、 Kubernetes 以外でストレージボリュームのライフサイクルを管理する場合に便利です。</block>
  <block id="76057e180d7b3edcebaa935c7ccab687" category="paragraph">PVC と PV にアノテーションが追加されます。このアノテーションは、ボリュームがインポートされたこと、および PVC と PV が管理されていることを示す二重の目的を果たします。このアノテーションは変更または削除しないでください。</block>
  <block id="b20cebeefba038b396f3fe0494dad01b" category="paragraph">Trident 19.07 以降では、 PVS の添付ファイルを処理し、ボリュームをインポートの一環としてマウントします。以前のバージョンの Astra Trident を使用しているインポートの場合、データパスに処理は存在しないため、ボリュームをマウントできるかどうかがボリュームインポートで検証されません。ボリュームのインポートに誤りがあった場合（ StorageClass が正しくない場合など）は、 PV の再利用ポリシーを「リカバリ」に変更し、 PVC と PV を削除してから、 volume import コマンドを再試行してリカバリできます。</block>
  <block id="420279975083139d76ba010ce1956b74" category="section-title">ONTAP-NAS および ONTAP-NAS-flexgroup のインポート</block>
  <block id="1b539ba5a07e124e582b2e4bfc489200" category="paragraph">「 ontap/nas 」ドライバで作成される各ボリュームは、 ONTAP クラスタ上の FlexVol です。「 ontap/nas 」ドライバを使用して FlexVol をインポートする方法は同じです。ONTAP クラスタにすでに存在する FlexVol は 'ONTAP-NAS'PVC としてインポートできます同様に、 FlexGroup ボリュームは「 ONTAP-NAS-flexgroup 」 PVC としてインポートできます。</block>
  <block id="62a991a68d1e323e147c11deeaecdad2" category="admonition">Trident がインポートする ONTAP のタイプは RW である必要があります。DP タイプのボリュームは SnapMirror デスティネーションボリュームです。 Trident にボリュームをインポートする前に、ミラー関係を解除する必要があります。</block>
  <block id="b368a23170f18969c0c51a21bc3e2754" category="admonition">「 ONTAP - NAS 」ドライバは、 qtree のインポートおよび管理を行うことができません。「 ONTAP-NAS' 」および「 ONTAP-NAS-flexgroup 」ドライバでは、ボリューム名の重複が許可されていません。</block>
  <block id="20a208be23a9e8a96ac28258acb9daa4" category="paragraph">たとえば、「 ONTAP_NAS' 」という名前のバックエンドに「管理されたボリューム」という名前のボリュームをインポートするには、次のコマンドを使用します。</block>
  <block id="deba327c80a83b34abd4ba640b21e454" category="paragraph">Trident が管理しない 'unmanaged_volume' （ ONTAP_NAS バックエンド上）という名前のボリュームをインポートするには ' 次のコマンドを使用します</block>
  <block id="9be12be7e9d5bb9faa5c9a952feafe07" category="paragraph">--no-manage 引数を使用する場合、 Trident はボリュームの名前を変更したり、ボリュームがマウントされたかどうかを検証したりしません。ボリュームが手動でマウントされていない場合、ボリュームインポート処理は失敗します。</block>
  <block id="4004cfbd69335a9d1ba9357ea0dfb079" category="admonition">UnixPermissions カスタムのボリュームをインポートするという既存のバグが修正されました。PVC 定義またはバックエンド構成に unixPermissions を指定し、必要に応じて Astra Trident にボリュームをインポートするように指示できます。</block>
  <block id="d346ffc6ef3483fea67a321732823960" category="section-title">ontap - SAN インポート</block>
  <block id="d995f4307341e76349912869caa5e2fb" category="paragraph">Astra Trident は、 1 つの LUN を含む ONTAP SAN FlexVol をインポートすることもできます。これは 'ONTAP-SAN' ドライバと一致しています FlexVol は 'PVC ごとに FlexVol 内の 1 つの LUN に対して を作成しますtridentctl import コマンドは ' 他の場合と同じ方法で使用できます</block>
  <block id="1dd2cc952267be6c2cc8e5cff2b5aab1" category="list-text">「 ontap - san 」バックエンドの名前を含めます。</block>
  <block id="e395471eab1d4c8fbc8452e98a95d0c5" category="list-text">インポートする必要がある FlexVol の名前を指定します。この FlexVol には、インポートが必要な LUN が 1 つしか含まれていないことに注意してください。</block>
  <block id="9e6bd670c6fd6b2808fae744834b7675" category="list-text">「 -f 」フラグとともに使用する必要がある PVC 定義のパスを指定します。</block>
  <block id="36b577af0f959f68e5e66336695e816c" category="list-text">PVC を管理するか、管理対象外にするかを選択します。デフォルトでは、 Trident によって PVC が管理され、バックエンドの FlexVol と LUN の名前が変更されます。アンマネージボリュームとしてインポートするには、「 --no-manage 」フラグを渡します。</block>
  <block id="f898748ff73fc5faf70687cbb0051311" category="admonition">管理対象外の「 ONTAP -SAN 」ボリュームをインポートする場合は、 FlexVol 内の LUN が「 lun0 」になっていて、必要なイニシエータを持つ igroup にマッピングされていることを確認する必要があります。Trident が管理対象のインポートに対して自動的に処理します。</block>
  <block id="66f7455d3b73d0f9938704ee67b1f38a" category="paragraph">次に、 Astra Trident が FlexVol をインポートし、 PVC 定義に関連付けます。Astra Trident は、 FlexVol の名前を「 pvc-&lt;uuid&gt; 」形式に変更し、 FlexVol 内の LUN を「 lun0 」に変更します。</block>
  <block id="2d37ad5bcf7d115e10de14a38db72232" category="admonition">既存のアクティブな接続がないボリュームをインポートすることを推奨します。アクティブに使用されているボリュームをインポートする場合は、最初にボリュームをクローニングしてからインポートを実行します。</block>
  <block id="72b3664e6e381ccc62031c13f7ad6df9" category="paragraph">「 ONTAP_SAN_DEFAULT' バックエンドにある「 ONTAP-SAN-managed 」 FlexVol をインポートするには、「 tridentctl import 」コマンドを次のように実行します。</block>
  <block id="26d61ca2331eea0b3aca6c534f2dfcc7" category="admonition">ONTAP ボリュームのタイプが RW であることが Astra Trident でインポートされる必要があります。DP タイプのボリュームは SnapMirror デスティネーションボリュームです。ボリュームを Astra Trident にインポートする前に、ミラー関係を解除する必要があります。</block>
  <block id="4b8f39874197ebe1407531bd66624aa3" category="section-title">エレメントをインポートします</block>
  <block id="b00215e0583bb02c2474fa62f51462fa" category="paragraph">Trident を使用して、 NetApp Element ソフトウェア / NetApp HCI ボリュームを Kubernetes クラスタにインポートできます。必要なのは 'tridentctl import コマンドの引数として 'Astra Trident バックエンドの名前とボリュームおよび PVC ファイルの一意の名前です</block>
  <block id="c517a1b34541565def824e8e9aeb0524" category="admonition">Element ドライバではボリューム名の重複がサポートされます。ボリューム名が重複している場合、 Trident のボリュームインポートプロセスはエラーを返します。回避策として、ボリュームをクローニングし、一意のボリューム名を指定します。次に、クローンボリュームをインポートします。</block>
  <block id="441d2edc083114ed813856f0b61524d4" category="section-title">aws -cvs インポート</block>
  <block id="828c3f28cef558031e2f55632d27b6f4" category="admonition">NetApp Cloud Volumes Service がサポートするボリュームを AWS でインポートするには、名前ではなくボリュームパスでボリュームを特定します。</block>
  <block id="91676978c9f14db1332e3c5b60f4d681" category="paragraph">"awscvs_YEppr" という名前のバックエンド上の "awscvs_YEppr" ボリュームを "adwaimenthi-jolly -swif" のボリュームパスでインポートするには、次のコマンドを使用します。</block>
  <block id="87e30ad820e5b10036bd18284c1f25ad" category="admonition">ボリュームパスは、 / のあとのボリュームのエクスポートパスの部分です。たとえば、エクスポートパスが「 10.0.0.1:/adwiswify-jolly -swift 」の場合、ボリュームパスは「 adwiswy-jolly -swift 」です。</block>
  <block id="3be8989f2135d86f8b2d60f19eed3846" category="section-title">GCP-cvs インポート</block>
  <block id="ea6ab4f91ea921bc82295089f42da373" category="paragraph">「 gcp-cvs 」ボリュームのインポートは、「 aws -cvs 」ボリュームのインポートと同じように機能します。</block>
  <block id="9f25c8d8bca8641faa974c73a8d2f5da" category="section-title">azure-NetApp-files インポート</block>
  <block id="e8945ce1398c6d24aa1d518bca08034c" category="paragraph">ボリューム・パスが importvol1' の 'azurenetappfiles_40517' というバックエンドにある azure-netapp-files' ボリュームをインポートするには ' 次のコマンドを実行します</block>
  <block id="c3417eb755bee1658ae5b42ff2115193" category="admonition">ANF ボリュームのボリュームパスは、 / のあとのマウントパスにあります。たとえば ' マウント・パスが 10.0.0.2::/importvol1 の場合 ' ボリューム・パスは importvol1 になります</block>
  <block id="e4f61797b38c111b04c612b285a06659" category="summary">ONTAP NAS ドライバを使用して ONTAP バックエンドを設定するための準備方法について説明します。</block>
  <block id="9bc537b16cee9c42d1e2aa0048a2c426" category="paragraph">ONTAP NAS ドライバを使用して ONTAP バックエンドを設定するための準備方法について説明します。ONTAP バックエンドすべてに対して、 Astra Trident が SVM に少なくとも 1 つのアグリゲートを割り当てておく必要があります。</block>
  <block id="00b8b321c68facfb94b31690cbd23e00" category="paragraph">ONTAP バックエンドすべてに対して、 Astra Trident が SVM に少なくとも 1 つのアグリゲートを割り当てておく必要があります。</block>
  <block id="c6cd2f38be30f5256f7116692ab56edd" category="paragraph">複数のドライバを実行し、 1 つまたは複数のドライバを参照するストレージクラスを作成することもできます。たとえば 'ONTAP-NAS' ドライバを使用する Gold クラスと 'ONTAP-NAS-エコノミー 'one を使用する Bronze クラスを構成できます</block>
  <block id="fff0b214bfcab1734e0bec7b1d1f6079" category="paragraph">すべての Kubernetes ワーカーノードに適切な NFS ツールをインストールしておく必要があります。を参照してください <block ref="9ec363a49b52db56773849151c5853d4" category="inline-link-macro-rx"></block> 詳細：</block>
  <block id="07b434b23f63ca6490df33b213599320" category="section-title">NFS エクスポートポリシーを管理します</block>
  <block id="9d66483f8378ffe30cde84e1b6dbf484" category="paragraph">Astra Trident は、 NFS エクスポートポリシーを使用して、プロビジョニングするボリュームへのアクセスを制御します。</block>
  <block id="a297d9b7dbc393d5e8a5b3f98bcc9337" category="paragraph">Astra Trident には、エクスポートポリシーを使用する際に次の 2 つのオプションがあります。</block>
  <block id="0c87d42e666bbc299da2143379484281" category="list-text">Astra Trident は、エクスポートポリシー自体を動的に管理できます。このモードでは、許容可能な IP アドレスを表す CIDR ブロックのリストをストレージ管理者が指定します。Astra Trident は、この範囲に含まれるノード IP をエクスポートポリシーに自動的に追加します。または、 CIDRs が指定されていない場合は、ノード上で検出されたグローバルスコープのユニキャスト IP がエクスポートポリシーに追加されます。</block>
  <block id="e6add289c2b1cd5da45e00f3098b35de" category="list-text">ストレージ管理者は、エクスポートポリシーを作成したり、ルールを手動で追加したりできます。構成に別のエクスポートポリシー名を指定しないと、 Astra Trident はデフォルトのエクスポートポリシーを使用します。</block>
  <block id="4603f08ad837f4108ff2fe7665b0b1e3" category="section-title">エクスポートポリシーを動的に管理</block>
  <block id="801eb935808311c71ba522e642d12e3f" category="paragraph">CSI Trident の 20.04 リリースでは、 ONTAP バックエンドのエクスポートポリシーを動的に管理できます。これにより、ストレージ管理者は、明示的なルールを手動で定義するのではなく、ワーカーノードの IP で許容されるアドレススペースを指定できます。エクスポートポリシーの管理が大幅に簡易化され、エクスポートポリシーを変更しても、ストレージクラスタに対する手動の操作は不要になります。さらに、ストレージクラスタへのアクセスを、指定した範囲の IP を持つワーカーノードだけに制限することで、きめ細かな管理と自動化をサポートします。</block>
  <block id="8b78bee43bfa1617b12c311f0ad26e81" category="admonition">エクスポートポリシーの動的管理は CSI Trident でのみ使用できます。ワーカーノードが NAT 処理されていないことを確認することが重要です。</block>
  <block id="44568b7468885ca198a66bb088b9e3b5" category="paragraph">2 つの設定オプションを使用する必要があります。バックエンド定義の例を次に示します。</block>
  <block id="2aaaab87910c3ed67eecb3ea8578619e" category="admonition">この機能を使用する場合は、 SVM のルートジャンクションに、ノードの CIDR ブロックを許可するエクスポートルール（デフォルトのエクスポートポリシーなど）を含む事前に作成されたエクスポートポリシーがあることを確認する必要があります。ネットアップが推奨する、 Astra Trident 専用のベストプラクティスを常に守ってください。</block>
  <block id="4975fc485ff51ca8f82c6ea96f927287" category="paragraph">ここでは、上記の例を使用してこの機能がどのように動作するかについて説明します。</block>
  <block id="acdca8a11423c4bc209db0a1a4909294" category="list-text">「 autoExportPolicy 」は「 true 」に設定されています。これは、 Astra Trident が「 vm1 」 SVM のエクスポートポリシーを作成し、「 autoExportCIDRs 」アドレスブロックを使用してルールの追加と削除を処理することを示しています。たとえば、 UUID 403b5326-842-40dB-96d0-d83fb3f4daec と「 autoExportPolicy 」が「 true 」に設定されているバックエンドは、 SVM 上に「 trident-403b5326-842-40dB-96d0-d83f3f4daec 」という名前のエクスポートポリシーを作成します。</block>
  <block id="1bdcc9b4be16b7ad2f1b54c892491a43" category="list-text">「 autoExportCI` 」には、アドレスブロックのリストが含まれています。このフィールドは省略可能で、デフォルト値は ["0.0.0.0/0" 、 "::/0" です。定義されていない場合は、 Astra Trident が、ワーカーノードで検出されたすべてのグローバルにスコープ指定されたユニキャストアドレスを追加します。</block>
  <block id="96d8905e0d42a0d3573c71fd4ecce0b8" category="paragraph">この例では '192.168.0.0/24 アドレス空間が提供されていますこのアドレス範囲に含まれる Kubernetes ノードの IP が、 Astra Trident が作成するエクスポートポリシーに追加されることを示します。Astra Trident は、実行されているノードを登録すると、ノードの IP アドレスを取得し、「 autoExportCIDRs 」で提供されているアドレスブロックと照合します。IP をフィルタリングすると、 Trident が検出したクライアント IP のエクスポートポリシールールを作成し、特定したノードごとに 1 つのルールが設定されます。</block>
  <block id="4646f167a1fb9819f41f28d5ab11c1fa" category="paragraph">バックエンドの作成後に 'autoExportPolicy' および 'autoExportCIDRs を更新できます自動的に管理されるバックエンドに新しい CIDRs を追加したり、既存の CIDRs を削除したりできます。CIDRs を削除する際は、既存の接続が切断されないように注意してください。バックエンドに対して「 autoExportPolicy 」を無効にし、手動で作成したエクスポートポリシーに戻すこともできます。これには、バックエンド構成で「 exportPolicy 」パラメータを設定する必要があります。</block>
  <block id="18deff64a140a603bdb6070abed4eed4" category="paragraph">Astra Trident がバックエンドを作成または更新した後は 'tridentctl' または対応する tridentbackend`CRD を使用してバックエンドを確認できます</block>
  <block id="83af513d9b9d50c1dc648bfea29797cb" category="paragraph">ノードが Kubernetes クラスタに追加されて Astra Trident コントローラに登録されると、既存のバックエンドのエクスポートポリシーが更新されます（バックエンドの「 autoExportCIDRs 」に指定されたアドレス範囲に含まれる場合）。</block>
  <block id="fd85ad7b0ce4e83937cbc1012086b9b3" category="paragraph">ノードを削除すると、 Astra Trident はオンラインのすべてのバックエンドをチェックして、そのノードのアクセスルールを削除します。管理対象のバックエンドのエクスポートポリシーからこのノード IP を削除することで、 Astra Trident は、この IP がクラスタ内の新しいノードによって再利用されないかぎり、不正なマウントを防止します。</block>
  <block id="cda5977f42a72ef440d3b6233b9970bf" category="paragraph">以前のバックエンドの場合は 'tridentctl update backend でバックエンドを更新することで 'Astra Trident がエクスポートポリシーを自動的に管理できるようになりますこれにより、バックエンドの UUID のあとにという名前の新しいエクスポートポリシーが作成され、バックエンドに存在するボリュームは、新しく作成したエクスポートポリシーを使用して、再びマウントします。</block>
  <block id="de1d1f6b64a5c5b6890c313888b290b7" category="admonition">自動管理されたエクスポートポリシーを使用してバックエンドを削除すると、動的に作成されたエクスポートポリシーが削除されます。バックエンドが再作成されると、そのバックエンドは新しいバックエンドとして扱われ、新しいエクスポートポリシーが作成されます。</block>
  <block id="920708f6d71767dcff22f9e43b4ec0c0" category="paragraph">ライブノードの IP アドレスが更新された場合は、ノード上の Astra Trident ポッドを再起動する必要があります。Trident が管理するバックエンドのエクスポートポリシーを更新して、この IP の変更を反映させます。</block>
  <block id="5f3124ab7224f89a36fbb64fd2ebda15" category="summary">ONTAP SAN ドライバを作成して Astra Trident インストールで使用する方法をご確認ください。このセクションでは、バックエンド構成の例と、バックエンドをストレージクラスにマッピングする方法を詳しく説明します。</block>
  <block id="19ce3b2e7823907e5153f00fe04f64f7" category="doc">設定オプションと例</block>
  <block id="a85f55a18073767a4945eac810e72cb2" category="cell">「 ONTAP-NAS 」、「 ONTAP-NAS-エコノミー 」、「 ONTAP-NAS-flexgroup 」、「 ONTAP-SAN 」、「 ONTAP-SAN-エコノミー 」</block>
  <block id="237d7a1666794b0937adde704bb4795c" category="cell">ドライバ名 + "_" + データ LIF</block>
  <block id="07c54fe26be1e43601e99cd9d4fbe262" category="cell">「管理 LIF 」</block>
  <block id="bf926726f76b2da3a5585d6c7f464adc" category="cell">クラスタ管理 LIF または SVM 管理 LIF の IP アドレス</block>
  <block id="c560b8d02093547d93a87c72d8b16eaf" category="cell">「 10.0.0.1 」、「 [2001:1234:abcd::fefe] 」</block>
  <block id="bd81db53971fda3e688447b28c747d1a" category="cell">「重複排除</block>
  <block id="d78aba84ea5a1453c8c9f4a603a84040" category="cell">プロトコル LIF の IP アドレス。IPv6 には角かっこを使用します。設定後に更新することはできません</block>
  <block id="57b6222ff12a4dc5a5607f02194a83ce" category="cell">特に指定がないかぎり、 SVM が派生します</block>
  <block id="ab4ce1634362493e6de248d103136787" category="cell">「 useCHAP 」</block>
  <block id="3d6bb44641a25033325da197fbb8a670" category="cell">CHAP を使用して ONTAP SAN ドライバ用の iSCSI を認証する [ ブーリアン ]</block>
  <block id="7c6b65d42434282f1555f13b40e9fd25" category="cell">「 chapInitiatorSecret 」</block>
  <block id="c8a7a6136447a56280ecf99e3ed87d65" category="cell">CHAP イニシエータシークレット。「 useCHAP = TRUE 」の場合は必須</block>
  <block id="b5cbbe3dadaab4a036fdb38af67ee936" category="cell">ボリュームに適用する任意の JSON 形式のラベルのセット</block>
  <block id="948938ec6491061ccf17c7ae8eafbd26" category="cell">「 chapTargetInitiatorSecret 」</block>
  <block id="48db71efc42dda989b98744160575f4f" category="cell">CHAP ターゲットイニシエータシークレット。「 useCHAP = TRUE 」の場合は必須</block>
  <block id="28687fafefb2992ff7856dcfd2c29e1f" category="cell">「 chapUsername 」</block>
  <block id="e3f84c141fd3f4682dfb31e0d71c7f5f" category="cell">インバウンドユーザ名。「 useCHAP = TRUE 」の場合は必須</block>
  <block id="62fbbf4cfd0cc0a82f953199d14a61e3" category="cell">「 chapTargetUsername 」</block>
  <block id="a379a576b788ab047d5e6405ff4f3511" category="cell">ターゲットユーザ名。「 useCHAP = TRUE 」の場合は必須</block>
  <block id="cbdaf784161be9806a24fe78a8046c01" category="cell">「 clientCertificate 」をクリックします</block>
  <block id="a84cbedc106b973917ae925d04533f97" category="cell">クライアント証明書の Base64 エンコード値。証明書ベースの認証に使用されます</block>
  <block id="8545e54eea74cf2579fbe1cb56b11862" category="cell">「 clientPrivateKey 」</block>
  <block id="4a54228eb2be79492f8f76bb814ddf63" category="cell">クライアント秘密鍵の Base64 エンコード値。証明書ベースの認証に使用されます</block>
  <block id="b071cd8105f8f59b777098388b7a3322" category="cell">「 trustedCacertifate 」</block>
  <block id="ffe4ce29fe1a6176d496c40332e9cb98" category="cell">信頼された CA 証明書の Base64 エンコード値。任意。証明書ベースの認証に使用されます</block>
  <block id="6d77646a2fd9ab65f8e3344d7dce661a" category="cell">「ユーザ名」</block>
  <block id="83425e975af1b2d60355aa4162300198" category="cell">クラスタ / SVM に接続するためのユーザ名。クレデンシャルベースの認証に使用されます</block>
  <block id="6aa91a7fbb8c9edcf4aa5f9411aec19c" category="cell">「 password 」と入力します</block>
  <block id="63d06d6cc41e485615f99a3aad0002b3" category="cell">クラスタ / SVM に接続するためのパスワード。クレデンシャルベースの認証に使用されます</block>
  <block id="afc423de2be5ca5ab3a6ae9548bbfcf3" category="cell">'VM'</block>
  <block id="972abf48cbbadbcd573754140d35e19a" category="cell">使用する Storage Virtual Machine</block>
  <block id="ef65dd3301d78701f7cfcf8a01834f2f" category="cell">SVM 「管理 LIF 」が指定されている場合に生成されます</block>
  <block id="3b890f58db76bb3003ada171cd18c4db" category="cell">「 igroupName 」と入力します</block>
  <block id="19563dd7f566b71700028a34e74a1107" category="cell">SAN ボリュームで使用する igroup の名前</block>
  <block id="1c59f4b76e4f9bf529f88205cd0a8ac6" category="cell">"trident-&lt;backend-UUID&gt; "</block>
  <block id="c08068da3c5d19547544c4bd424a6b76" category="cell">'toragePrefix'</block>
  <block id="e3f688f3aa653574b3253640aa98f47c" category="cell">SVM で新しいボリュームをプロビジョニングする際に使用するプレフィックスを指定します。設定後に更新することはできません</block>
  <block id="a996d2f8e072c583d6cc26aa1e4aba87" category="cell">Trident</block>
  <block id="12d2394af47293b12d6b5f411f99a6d1" category="cell">「 AggreglimitateUsage 」と入力します</block>
  <block id="b6ea9c09f8ac215ea68be83cd0240aac" category="cell">使用率がこの割合を超えている場合は、プロビジョニングが失敗します。* Amazon FSX for ONTAP * には適用されません</block>
  <block id="c07510d6ca04643a0f81501d2407311b" category="cell">要求されたボリュームサイズがエコノミードライバーのこの値を超えている場合、プロビジョニングは失敗します。</block>
  <block id="9d96dfa28e7454a1119de523123a1e05" category="cell">“”（デフォルトでは適用されません）</block>
  <block id="c9a303edbc714d051896c3a678e59a8a" category="cell">'lunsPerFlexvol</block>
  <block id="79892588cbecd0b88729ea1a55b2a3a4" category="cell">FlexVol あたりの最大 LUN 数。有効な範囲は 50 、 200 です</block>
  <block id="2d782f413944b272c911c548418a18a3" category="cell">100</block>
  <block id="f703d18584e163e18762e4dc13ad96a0" category="cell">「 useREST` 」</block>
  <block id="1cd645595b39c5c8647c3c9a9c395322" category="cell">ONTAP REST API を使用するためのブーリアンパラメータ。* テクニカルプレビュー *</block>
  <block id="32a44f322750e15e2564c4648823248e" category="admonition">「 useREST 」は **tech preview** として提供されています。これはテスト環境では推奨され、本番ワークロードでは推奨されません。「 true 」に設定すると、 Astra Trident は ONTAP REST API を使用してバックエンドと通信します。この機能を使用するには、 ONTAP 9.9 以降が必要です。また ' 使用する ONTAP ログイン・ロールには ONTAP アプリケーションへのアクセス権が必要ですこれは ' 事前に定義された vsadmin ロールと cluster-admin ロールによって満たされます</block>
  <block id="57dc6ee0e65147014833f0586de90e46" category="paragraph">ONTAP クラスタと通信するには、認証パラメータを指定する必要があります。これは、セキュリティログインまたはインストールされている証明書のユーザ名 / パスワードです。</block>
  <block id="928832023634637f59ed58617f382728" category="admonition">NetApp ONTAP バックエンドに Amazon FSX を使用している場合は、「 limitAggregateUsage 」パラメータを指定しないでください。Amazon FSX for NetApp ONTAP が提供する「 fsxadmin 」と「 vsadmin 」の役割には、集計の使用状況を取得したり、 Astra Trident を介して制限したりするために必要なアクセス権限が含まれていません。</block>
  <block id="dba7349d856fb1f0791cb0f6c700266f" category="paragraph">「 ONTAP -SAN 」ドライバの場合、デフォルトでは SVM のすべてのデータ LIF IP が使用され、 iSCSI マルチパスが使用されます。「 ONTAP -SAN 」ドライバのデータ LIF の IP アドレスを指定すると、マルチパスが無効になり、指定したアドレスだけが使用されます。</block>
  <block id="9f86d18c38ffc3e7be07fb38b682a8be" category="admonition">バックエンドを作成するときは、作成後に「 datalif 」と「 toragePrefix 」を変更できないことに注意してください。これらのパラメータを更新するには、新しいバックエンドを作成する必要があります。</block>
  <block id="2fbf62d46404d999a0e6179621b359a3" category="paragraph">igroupName は、 ONTAP クラスタ上ですでに作成されている igroup に設定できます。指定しない場合、 Trident は trident-&lt;backend-UUID&gt; という名前の igroup を自動的に作成します。事前に定義された igroupName を指定する場合は、各 Kubernetes クラスタで igroup を使用することを推奨します。ただし、 SVM が環境間で共有される場合です。これは、 Astra Trident が IQN の追加や削除を自動的に維持するために必要です。</block>
  <block id="22599fe16404024d4ce4c8111293b8c2" category="paragraph">バックエンドは、作成後に igroup を更新することもできます。</block>
  <block id="bc47775cbee2d365887513f379efaf66" category="list-text">igroupName は、 Astra Trident の外部の SVM で作成および管理される新しい igroup を指すように更新できます。</block>
  <block id="3e01e438ad7180641957b0d7d9716f65" category="list-text">igroupName は省略できます。この場合、 Astra Trident は Trident によって trident-&lt;backend-UUID&gt; igroup が自動的に作成および管理されます。</block>
  <block id="73e65f4bf1c67cf81e3531ab80adee7e" category="paragraph">どちらの場合も、ボリュームの添付ファイルには引き続きアクセスできます。以降のボリューム接続では、更新された igroup が使用されます。この更新によって、バックエンドにあるボリュームへのアクセスが中断されることはありません。</block>
  <block id="8a89357317a0c827764c86bc08ee62bd" category="paragraph">「管理 LIF 」オプションには完全修飾ドメイン名（ FQDN ）を指定できます。</block>
  <block id="88afceb4bf710fa1663fc5c08b2b1bda" category="paragraph">すべての ONTAP ドライバ用の「管理 LIF 」を IPv6 アドレスに設定することもできます。--use-ipv6' フラグを付けて Trident をインストールしてください角かっこで囲まれた「管理 LIF 」 IPv6 アドレスを定義するように注意する必要があります。</block>
  <block id="e896e54be988d9d7199d0e796b08b19b" category="admonition">IPv6 アドレスを使用する場合は、 [28e8:d9fb:a825:b7bf:69a8:d02f:9e7b:3555] のように、バックエンド定義に含まれている場合は「 anagementlif` 」と「 datalif 」が角かっこ内に定義されていることを確認してください。「 data lif 」を指定しない場合、 Astra Trident は SVM から IPv6 データ LIF を取得します。</block>
  <block id="18bfd4fb5bd53bc4e45e393e24c47255" category="paragraph">SAN ドライバで CHAP を使用できるようにするには ' バックエンド定義で useCHAP パラメータを true に設定しますその後、 Astra Trident が、バックエンドで指定された SVM のデフォルト認証として双方向 CHAP を設定して使用します。を参照してください <block ref="8665da470a88e198066a0307a2be351b" category="inline-link-macro-rx"></block> その仕組みについては、を参照してください。</block>
  <block id="f9f7357cc7873819dbc075deb62cba4b" category="paragraph">「 ONTAP-SAN-エコノミー 」ドライバの場合は、「 limitVolumeSize 」オプションによって、 qtree および LUN 用に管理するボリュームの最大サイズも制限されます。</block>
  <block id="29669b1b587897fc488d8e332600d528" category="admonition">Astra Trident は 'ONTAP-SAN' ドライバを使用して作成されたすべてのボリュームの Comments フィールドにプロビジョニングラベルを設定します作成された各ボリュームについて、 FlexVol の [Comments] フィールドに、配置先のストレージプールにあるすべてのラベルが入力されます。ストレージ管理者は、ストレージプールごとにラベルを定義し、ストレージプール内に作成されたすべてのボリュームをグループ化できます。これにより、バックエンド構成で提供されるカスタマイズ可能な一連のラベルに基づいてボリュームを簡単に区別できます。</block>
  <block id="193a49bcfb561fea878daa5efe72cad9" category="section-title">ボリュームのプロビジョニング用のバックエンド構成オプション</block>
  <block id="4b162a795c1916b18df8b6a76a8fef49" category="paragraph">これらのオプションを使用して、構成の特別なセクションで各ボリュームをデフォルトでプロビジョニングする方法を制御できます。例については、以下の設定例を参照してください。</block>
  <block id="a0ee23c5b4cbd6a28a4143933891f927" category="cell">「平和の配分」</block>
  <block id="26161d08a960162cd8633d0e23058aed" category="cell">space-allocation for LUN のコマンドを指定します</block>
  <block id="3be488c6a2bc52ceb7e8685ca24927d7" category="cell">正しいです</block>
  <block id="a6bddf19eed00dbe2199864dee8454ce" category="cell">「平和のための準備」を参照してください</block>
  <block id="3bce5b103341500856287f5347e19f28" category="cell">スペースリザベーションモード：「 none 」（シン）または「 volume 」（シック）</block>
  <block id="e84c56670c389b09fcad5da7309a165b" category="cell">なし</block>
  <block id="0ec3875cf79264e4689a646be2f704b6" category="cell">「ナプショットポリシー」</block>
  <block id="77f69e470b8766d2dc5df4b7f469ed72" category="cell">使用する Snapshot ポリシー</block>
  <block id="84d2c2c768bd1900489bad5fb46b4aac" category="cell">「 QOSPolicy 」</block>
  <block id="54b94bba5d336f4e3d5fd7e88544fad1" category="cell">作成したボリュームに割り当てる QoS ポリシーグループ。ストレージプール / バックエンドごとに QOSPolicy または adaptiveQosPolicy のいずれかを選択します</block>
  <block id="952e3a12d35e717bf86a6000b0c08976" category="cell">「 adaptiveQosPolicy 」を参照してください</block>
  <block id="036c0eabd455d8a92d350429f2f5747e" category="cell">アダプティブ QoS ポリシーグループ：作成したボリュームに割り当てます。ストレージプール / バックエンドごとに QOSPolicy または adaptiveQosPolicy のいずれかを選択します</block>
  <block id="11f9fcd55c1d81cf352f86fe4cdfd444" category="cell">スナップショット "0" 用に予約されたボリュームの割合</block>
  <block id="af6626456fa359992271ea88de34094f" category="cell">「 napshotPolicy 」が「 none 」の場合、それ以外の場合は「」</block>
  <block id="4be01095ce6e500084fc427e5dec61ac" category="cell">'plitOnClone</block>
  <block id="6f5c0c94b1a17baffd2c33facaa10db6" category="cell">作成時にクローンを親からスプリットします</block>
  <block id="19b4c847405d74614976bd1228f59c9f" category="cell">いいえ</block>
  <block id="b091cbafedf94db98f17823d044434bd" category="cell">「暗号化」</block>
  <block id="4ecb8b22870f9fb0645228cd38177c49" category="cell">ネットアップのボリューム暗号化を有効にします</block>
  <block id="a463baaf6666da7178b6fc6a3c8a3fee" category="cell">'ecurityStyle'</block>
  <block id="41da49bdd3fd88b2ddc6be7d6df1b335" category="cell">新しいボリュームのセキュリティ形式</block>
  <block id="4cda9f87625c6278fae1a50fcbbf96d3" category="cell">「 UNIX 」</block>
  <block id="31aa018945eb62580d68d360cba8ba54" category="cell">階層ポリシー</block>
  <block id="592a5879ac095ef6ca504cc43a9d7939" category="cell">「なし」を使用する階層化ポリシー</block>
  <block id="ee6508d5290be6edafccc6e0f471f120" category="cell">ONTAP 9.5 よりも前の SVM-DR 構成の「スナップショットのみ」</block>
  <block id="99c2306b30b8939278f0f817230f3573" category="admonition">Trident が Astra で QoS ポリシーグループを使用するには、 ONTAP 9.8 以降が必要です。共有されない QoS ポリシーグループを使用して、各コンスティチュエントに個別にポリシーグループを適用することを推奨します。共有 QoS ポリシーグループにより、すべてのワークロードの合計スループットに対して上限が適用されます。</block>
  <block id="05c4365fe7e90a545f8b24060094a36a" category="paragraph">次に、デフォルトが定義されている例を示します。</block>
  <block id="fab51d2bc90465982b0994bc86e69db9" category="admonition">「 'SAN 」ドライバを使用して作成されたすべてのボリュームに対して 'Astra Trident は 'LUN のメタデータに対応するために FlexVol にさらに 10% の容量を追加しますLUN は、ユーザが PVC で要求したサイズとまったく同じサイズでプロビジョニングされます。Astra Trident が FlexVol に 10% を追加（ ONTAP で利用可能なサイズとして表示）ユーザには、要求した使用可能容量が割り当てられます。また、利用可能なスペースがフルに活用されていないかぎり、 LUN が読み取り専用になることもありません。これは、 ONTAP と SAN の経済性には該当しません。</block>
  <block id="824d88f50ab9e39778b0ef5bc2516b2f" category="paragraph">「スナップショット予約」を定義するバックエンドの場合、 Astra Trident は次のようにボリュームのサイズを計算します。</block>
  <block id="4e762198289d9294de9c1cbb3f0b26b6" category="paragraph">1.1 は、 Astra Trident の 10% の追加料金で、 FlexVol のメタデータに対応します。「 napshotReserve 」 =5% 、 PVC 要求 =5GiB の場合、ボリュームの合計サイズは 5.79GiB 、使用可能なサイズは 5.5GiB です。volume show コマンドは ' 次の例のような結果を表示する必要があります</block>
  <block id="2f1534ee8d0c6ec998511ed37cfe0da9" category="image-alt">に、 volume show コマンドの出力を示します。</block>
  <block id="e6e049b4753c744e95db32b0eeed8d5c" category="paragraph">現在、既存のボリュームに対して新しい計算を行うには、サイズ変更だけを使用します。</block>
  <block id="2aae2b6accd04335b3eeceb2193b34d6" category="section-title">最小限の設定例</block>
  <block id="bca36ce39f61ce2d375cbdb66eab5162" category="paragraph">次の例は、ほとんどのパラメータをデフォルトのままにする基本的な設定を示しています。これは、バックエンドを定義する最も簡単な方法です。</block>
  <block id="19fd94d2657fdd90c44f1fcd72890482" category="admonition">ネットアップ ONTAP で Astra Trident を使用している場合、 IP アドレスではなく LIF に DNS 名を指定することを推奨します。</block>
  <block id="f9e7424816477078eb0e49bf4eb4c87e" category="section-title">証明書ベースの認証を使用する ONTAP -SAN ドライバ</block>
  <block id="78e5b29e139db71ceb7ca6bc99b5e228" category="paragraph">これは、バックエンドの最小限の設定例です。「 clientCertificate` 」、「 clientPrivateKey 」、「 trustedCACertifate` （信頼された CA を使用する場合はオプション）」は「 backend.json 」に格納され、それぞれクライアント証明書、秘密鍵、信頼された CA 証明書の Base64 でエンコードされた値を取得します。</block>
  <block id="9d6b2226030e3a797fc7ff6dbd810f66" category="section-title">双方向 CHAP を使用する ONTAP と SAN のドライバ</block>
  <block id="b0a5c44c844418c2a5474a0d4c19182c" category="paragraph">これは、バックエンドの最小限の設定例です。この基本的な構成では 'useCHAP' を true' に設定して 'ONTAP-SAN' バックエンドを作成します</block>
  <block id="08f9dab0885378aea00f731ad9e52901" category="section-title">ONTAP - SAN エコノミードライバ</block>
  <block id="6bef8424baf7897ad4b3ecd9446fc7c8" category="section-title">仮想ストレージプールを使用するバックエンドの例</block>
  <block id="54189b80c641ffe9ac5ea57dc48e465c" category="paragraph">以下に示すバックエンド定義ファイルの例では ' すべてのストレージ・プールに対して特定のデフォルトが設定されていますたとえば 'paceReserve at none'`paceAllocation] at false' と 'encryption' は false です仮想ストレージプールは、ストレージセクションで定義します。</block>
  <block id="6a24af0a579ec0e851db9d35e047d58e" category="paragraph">この例では ' 一部のストレージ・プールで独自の 'aceReserve'`paceAllocation] ' および [encryption`] 値が設定されていますまた ' 一部のプールでは ' 上で設定したデフォルト値が上書きされます</block>
  <block id="22aec9ab9f9270747cb10c5bd593c1ab" category="paragraph">次に 'ONTAP-SAN-エコノミー ・ドライバの iSCSI の例を示します</block>
  <block id="f00b69018be0961b32ee24ec54fb56d1" category="section-title">バックエンドを StorageClasses にマッピングします</block>
  <block id="5303cd360e4a1dda505149e2497f5dd0" category="list-text">最初の StorageClass （「 protection-gold 」）は、「 ontap/na-slexgroup 」バックエンドの最初の 2 番目の仮想ストレージプールと「 ontap/san' バックエンドの最初の仮想ストレージプールにマッピングされます。ゴールドレベルの保護を提供している唯一のプールです。</block>
  <block id="b56bbc7832c420bea7e7ad925a5d3c31" category="list-text">2 番目の StorageClass （「 protection-not-gold 」）は、「 ONTAP-NAS-flexgroup 」バックエンドの第 3 の仮想ストレージプールと「 ONTAP-SAN' バックエンドの第 2 の第 3 の仮想ストレージプールにマッピングされます。金色以外の保護レベルを提供する唯一のプールです。</block>
  <block id="93e138c887e529cb6657f632aa3a3867" category="list-text">3 番目の StorageClass （「 app-mysqldb 」）は、「 ONTAP-NAS' バックエンドの 4 番目の仮想ストレージプールと「 ONTAP-SAN-エコノミー 」バックエンドの 3 番目の仮想ストレージプールにマッピングされます。mysqldb タイプのアプリケーション用のストレージプール設定を提供しているプールは、これらだけです。</block>
  <block id="a445ee76dc7da803a09c273595c3555c" category="list-text">4 番目の StorageClass （「 protection-silver - creditpoints-20K 」）は、「 ONTAP-NAS-flexgroup 」バックエンドの 3 番目の仮想ストレージプールと「 ONTAP-SAN' バックエンドの 2 番目の仮想ストレージプールにマッピングされます。ゴールドレベルの保護を提供している唯一のプールは、 20000 の利用可能なクレジットポイントです。</block>
  <block id="a2d5d3b55b3cff0e83e0c8feac3dfb45" category="list-text">5 番目の StorageClass （「 creditpoints-5k 」）は、「 ONTAP-NAS-エコノミー 」バックエンドの 2 番目の仮想ストレージプール、「 ONTAP-SAN」 バックエンドの 3 番目の仮想ストレージプールにマッピングされます。5000 ポイントの利用可能な唯一のプールは以下のとおりです。</block>
  <block id="dc92c330959507a128db0801090f9e0d" category="paragraph">Trident が、どの仮想ストレージプールを選択するかを判断し、ストレージ要件を確実に満たすようにします。</block>
  <block id="ef1161058705470bb877fbce688eea9e" category="summary">ONTAP SAN ドライバを使用して ONTAP バックエンドを設定する方法について説明します。</block>
  <block id="31e8c05beab321d1465fc4c3f77e991a" category="doc">バックエンドに ONTAP SAN ドライバを設定します</block>
  <block id="6c728e8788471413351ba9fcd26ca76e" category="list-text"><block ref="6c728e8788471413351ba9fcd26ca76e" category="inline-link-macro-rx"></block></block>
  <block id="e5fc4f2bd89271cfb112e8b768f74dde" category="inline-link-macro">設定と例</block>
  <block id="874216718c1d50bbd2aa417449058e46" category="list-text"><block ref="874216718c1d50bbd2aa417449058e46" category="inline-link-macro-rx"></block></block>
  <block id="ce8828fc10a926c196951c9bdd0d534d" category="section-title">ユーザ権限</block>
  <block id="96c17dbe45e7351fb2a4f71956c25e0c" category="paragraph">Astra Trident は、 ONTAP 管理者または SVM 管理者のいずれかとして実行されることを想定しています。通常は、「 admin 」クラスタユーザまたは「 vsadmin 」 SVM ユーザを使用するか、同じロールを持つ別の名前のユーザを使用します。Amazon FSX for NetApp ONTAP 環境では、 Astra Trident は、 ONTAP 管理者または SVM 管理者として、クラスタ「 fsxadmin 」ユーザまたは「 vsadmin 」 SVM ユーザ、または同じロールを持つ別の名前のユーザを実行する必要があります。「 fsxadmin 」ユーザは、クラスタ管理ユーザの限定的な代替ユーザです。</block>
  <block id="4937b52eb2cb058f225b69b2caafaf29" category="admonition">limitAggregateUsage パラメータを使用する場合は、クラスタ管理者権限が必要です。Amazon FSX for NetApp ONTAP を Astra Trident とともに使用する場合、「 limitAggregateUsage 」パラメータは「 vsadmin 」および「 fsxadmin 」ユーザアカウントでは機能しません。このパラメータを指定すると設定処理は失敗します。</block>
  <block id="821b0ad941ad2559ef18eb8de56a470e" category="summary">Kubernetes クラスタ内のすべてのワーカーノードが、ポッド用にプロビジョニングしたボリュームをマウントできる必要があります。いずれかのバックエンドに ONTAP-NAS 、 ONTAP-NAS-エコノミー 、 ONTAP-NAS-flexgroup ドライバを使用している場合は、ワーカーノードに NFS ツールが必要です。それ以外の場合は iSCSI ツールが必要です。</block>
  <block id="89d83ec6e8ec0c087fbc4aedc555b362" category="doc">ワーカーノードを準備します</block>
  <block id="8b1d1603c11aec689eb0d88a5ebabb67" category="paragraph">Kubernetes クラスタ内のすべてのワーカーノードが、ポッド用にプロビジョニングしたボリュームをマウントできる必要があります。いずれかのバックエンドに「 ONTAP-NAS' 」、「 ONTAP-NAS-Bエコノミー 」、または「 ONTAP-NAS-flexgroup 」ドライバを使用している場合は、ワーカーノードに NFS ツールが必要です。それ以外の場合は iSCSI ツールが必要です。</block>
  <block id="9e4d9c5be865862a92caf88e2beae43f" category="paragraph">最新バージョンの RedHat CoreOS には、デフォルトで NFS と iSCSI の両方がインストールされています。</block>
  <block id="f5c6a9fc65ae9fb698dc758b23c4ee97" category="admonition">NFS ツールまたは iSCSI ツールをインストールしたあとは、必ずワーカーノードをリブートしてください。リブートしないと、ボリュームをコンテナに接続できないことがあります。</block>
  <block id="b7a66d04a41292979004906785008ca9" category="section-title">NFS ボリューム</block>
  <block id="696c660ff8d9323e55146a6dbd4e4088" category="cell">オペレーティングシステム</block>
  <block id="c441ee50c88f6e5e3a7c69fc69dad8b8" category="cell">コマンド</block>
  <block id="3fb1c9901f28248a22f47bd3917b5dc9" category="paragraph">RHEL/CentOS</block>
  <block id="e0b19bed1baf46134f4079471e193b01" category="paragraph">'sudo yum install -y nfs-utils'</block>
  <block id="7eaf289636bc8d4f8b29b333a0f32dc2" category="paragraph">Ubuntu / Debian</block>
  <block id="1054b270f1635a3dd940e995cbc7ed78" category="paragraph">'UDO apt-get install-y nfs-common</block>
  <block id="31562df6c30f7b7efb939eaa0ee48415" category="admonition">ブート時に NFS サービスが開始されていることを確認してください。</block>
  <block id="29ba980a9e9adedc9414ea868c74ebd5" category="section-title">iSCSI ボリューム</block>
  <block id="222194999a60d89dfcd0ff5867f49e88" category="paragraph">iSCSI ボリュームを使用するときは、次の点に注意してください。</block>
  <block id="12fe03bf2457cc4e4e90af10a2f7092f" category="list-text">Kubernetes クラスタ内の各ノードには一意の IQN を割り当てる必要があります。* これは必須の前提条件です * 。</block>
  <block id="aaa200e86b57cd2a527761ec2bf4b9b0" category="list-text">RHCOS バージョン 4.5 以降、または RHEL または CentOS バージョン 8.2 以降で「 olidfire-san 」ドライバを使用している場合は、 CHAP 認証アルゴリズムが /etc/iscsi/iscsid.conf で MD5 に設定されていることを確認してください。</block>
  <block id="0bad70dcf33f40dcc0d528d58b9eac76" category="inline-link">RedHat のマニュアル</block>
  <block id="dbb4705e17a1f8ba49af109d4f366609" category="list-text">iSCSI PVS を搭載した RHEL/RedHat CoreOS を実行するワーカーノードを使用する場合は、インラインスペース再生を実行するために、 StorageClass で「 discard 」 mountOption を指定してください。を参照してください<block ref="166e862efdc516354d90f75a38532ddd" category="inline-link-rx"></block>。</block>
  <block id="8cd5b262d8d9950185128d052d55f7c8" category="list-text">次のシステムパッケージをインストールします。</block>
  <block id="6bbf3284462dc8b9b90cb1adcd1c0ff4" category="paragraph">'sudo yum install -y lsscsi iscsi-initiator-utils SG3_utils device-mapper-multipath`</block>
  <block id="1a5157a00ea5806f553766d5b3b114fd" category="list-text">iscsi-initiator-utils のバージョンが 6.2.0.874-2.el7 以降であることを確認します。</block>
  <block id="55c13faac514053f94cef55eb316c9a4" category="paragraph">「 rpm -q iscsi-initiator-utils 」のように入力します</block>
  <block id="19955b3c2d2c1cfc1c82c2fe0347a065" category="list-text">スキャンを手動に設定：</block>
  <block id="d2db641a196e6107eecf8c32f7cd7a4e" category="paragraph">'sudo sed-i'/ ^ \ （ node.session.scan\).*/\1 = manual/ '/etc/iscsi/iscsid.conf</block>
  <block id="d0b02d407fd5c75d0e7eac549a852191" category="list-text">マルチパスを有効化：</block>
  <block id="87772a853423d643181e2b56bcb4b17f" category="paragraph">'UDO mpathconf--enable--with _multipathd y</block>
  <block id="8bec0eea71974a9138ccfa96983ddcfc" category="list-text">「 iscsid 」と「 multipathd 」が実行されていることを確認します。</block>
  <block id="90a9d2e9b1b4ae58a957ff989f0732ba" category="paragraph">'sudo systemctl enable -- 現在 iscsid multipathd</block>
  <block id="8018f5d6ddc4e67678d1659757828deb" category="list-text">'iSCSI' を有効にして開始します</block>
  <block id="0f905161e16c2cfa712f1fb7640afee4" category="paragraph">'sudo systemctl enable -- 現在の iSCSI</block>
  <block id="28ea88befb3a7f6a8e98e7ea7a4fd35f" category="paragraph">'UDO apt-get install-y open-iscsi lsscsi SG3-utils multipath-tools scsitools'</block>
  <block id="a53508e75911225e5de8b5febc82cf12" category="list-text">open-iscsi バージョンが 2.0.874-5ubuntu2.10 以降（ bionic の場合）または 2.0.874-7.1ubuntu6.1 以降（ Focal の場合）であることを確認します。</block>
  <block id="f6802be29c6bca93d8f44768b0347ac9" category="paragraph">`d pkg -l open-iscsi`</block>
  <block id="b163c84ad8a4e55a17b51aad8074093e" category="list-text">「 open-iSCSI」 および「マルチパスツール」が有効で実行されていることを確認します。</block>
  <block id="8741473f7a80f4dd83071161b2c95301" category="paragraph">'sudo systemctl status multipath-tools `sudo systemctl enable -- 現在の open-iscsi.service` 'udo systemctl status open-iscsi'</block>
  <block id="1b757fe9c8a149de349a32b8d21feb54" category="admonition">Ubuntu 18.04 では 'iSCSI デーモンを起動するために 'open-iscsi' を起動する前に 'iscsiadm を持つターゲット・ポートを検出する必要がありますまたは 'iscsid' サービスを 'iscsid' を自動的に開始するように変更することもできます</block>
  <block id="fc1adc7c8cce02d3bd3dbc3e7ae52990" category="admonition">ベータ版の自動ワーカーノードの準備の詳細については、を参照してください <block ref="a57ab171c518329af81ea9d2536c4e10" category="inline-link-macro-rx"></block>。</block>
  <block id="4cc2b9916e7383e5fa29dc6188159e32" category="summary">バックエンドは、 Astra Trident とストレージシステムの関係を定義します。Trident がストレージシステムとの通信方法を Trident から指示し、 Astra Trident がボリュームをプロビジョニングする方法も解説します。Astra Trident のインストールが完了したら、次の手順でバックエンドを作成します。TridentBackendConfig カスタムリソース定義（ CRD ）を使用すると、 Trident バックエンドを Kubernetes インターフェイスから直接作成および管理できます。これを行うには 'kubectl' または Kubernetes ディストリビューションに相当する CLI ツールを使用します</block>
  <block id="913a4b06671d1e04e6582a85afe3abbe" category="section-title">TridentBackendConfig の場合</block>
  <block id="d2031a5a319b9363cf98da6b1509598a" category="paragraph">TridentBackendConfig` (`tbc`, `tbconfig`, tbackendconfig`) はフロントエンドであり、 "kubectl" を使って Astra Trident バックエンドを管理するための名前空間 CRD です。Kubernetes とストレージ管理者は、専用のコマンドラインユーティリティ（「 tridentctl 」）を使用せずに、 Kubernetes CLI を使用してバックエンドを直接作成および管理できるようになりました。</block>
  <block id="b44c2fd5cefc815abed7e31c0fa8c8ac" category="paragraph">「 TridentBackendConfig 」オブジェクトを作成すると、次のようになります。</block>
  <block id="858fafdff7fa27f202ae0eb981c6dff0" category="list-text">バックエンドは、指定した構成に基づいて Astra Trident によって自動的に作成されます。これは、内部的には「 TridentBackend 」 (`tbe `, tridentbackend`) CR として表されます。</block>
  <block id="40640dd98ca175d098c1c765b1e148d9" category="list-text">「 TridentBackendConfig 」は、 Astra Trident によって作成された「 TridentBackend 」に一意にバインドされます。</block>
  <block id="1efc3a14ca6dc7c90db79e02f3abe7d5" category="paragraph">各「 TridentBackendConfig 」は、「 TridentBackend 」を使用して 1 対 1 のマッピングを維持します。前者はバックエンドの設計と構成をユーザに提供するインターフェイスで、後者は Trident が実際のバックエンドオブジェクトを表す方法です。</block>
  <block id="c9038f47fe0df535b6bf5619c9ff629e" category="admonition">TridentBackend CRS は Astra Trident によって自動的に作成されます。これらは * 変更しないでください。バックエンドを更新する場合は、「 TridentBackendConfig 」オブジェクトを変更します。</block>
  <block id="9c3385530cf6e460576e5f6e7cc1b912" category="paragraph">「 TridentBackendConfig 」 CR の形式については、次の例を参照してください。</block>
  <block id="c84ef67352bb6783ff2881f9f2821c2a" category="inline-link">Trident インストーラ</block>
  <block id="f13a06ff6eab87969a9f96765f31ed9c" category="paragraph">の例を確認することもできます<block ref="6511e50af21389f9e77db56e03f6dd72" category="inline-link-rx"></block> 目的のストレージプラットフォーム / サービスの設定例を示すディレクトリ。</block>
  <block id="06df669f3ef6f929e9b58c9f47b65310" category="inline-link-macro">ストレージドライバのバックエンド設定情報</block>
  <block id="182839d8f6b2bdde60e1d972422cf3a2" category="paragraph">「 PEC 」は、バックエンド固有の設定パラメータをとります。この例では ' バックエンドは 'ONTAP-SAN' ストレージ・ドライバを使用し ' ここで表に示す構成パラメータを使用します使用するストレージドライバの設定オプションの一覧については、を参照してください <block ref="5f2d139eefa7c36061f4d97161be02ea" category="inline-link-macro-rx"></block>。</block>
  <block id="92051c832f01d9070a7ed71d1ce523c5" category="paragraph">「 PEC 」セクションには、「 credentials 」フィールドと「 eleetionPolicy 」フィールドも含まれています。これらのフィールドは、「 TridentBackendConfig 」 CR に新しく導入されました。</block>
  <block id="5ab961de690e071f0dc1c0dabac7fd89" category="list-text">`credentials` ：このパラメータは必須フィールドで、ストレージシステム / サービスとの認証に使用されるクレデンシャルが含まれています。ユーザが作成した Kubernetes Secret に設定されます。クレデンシャルをプレーンテキストで渡すことはできないため、エラーになります。</block>
  <block id="9f11e03722a7b912083c63fc68f4dd7b" category="list-text">`DeleetionPolicy`: 「 TridentBackendConfig 」が削除されたときに何が起こるかを定義します。次の 2 つの値のいずれかを指定できます。</block>
  <block id="d09d50d3f84f9c585492818f491a2497" category="list-text">「削除」 : これにより、「 TridentBackendConfig 」 CR とそれに関連付けられたバックエンドの両方が削除されます。これがデフォルト値です。</block>
  <block id="f0c89ce27bf4c43949ad8f26a4f586bb" category="list-text">「管理」：「 TridentBackendConfig 」 CR を削除しても、バックエンド定義は引き続き表示され、「 tridentctl 」で管理できます。削除ポリシーを「 retain 」に設定すると、ユーザは以前のリリース (21.04 より前 ) にダウングレードし、作成されたバックエンドを保持できます。このフィールドの値は、「 TridentBackendConfig 」が作成された後で更新できます。</block>
  <block id="7f2208582df334d090d35357eb5d6901" category="admonition">バックエンドの名前は 'PEC.backendName' を使用して設定されます指定しない場合、バックエンドの名前は「 TridentBackendConfig 」オブジェクト（ metadata.name ）の名前に設定されます。'PEC.backendName' を使用してバックエンド名を明示的に設定することをお勧めします</block>
  <block id="317e77f416ffd109037a657fffa1e7f7" category="admonition">tridentctl で作成されたバックエンドには 'TridentBackendConfig' オブジェクトが関連付けられていません「 TridentBackendConfig 」 CR を作成することで、「 kubectl 」を使用してこのようなバックエンドを管理できます。同一の構成パラメータ (`PEC.backendName`'`PEC.storagePrefix'`PEC.storageDriverName') を指定するように注意する必要がありますAstra Trident は、新しく作成した「 TridentBackendConfig 」を既存のバックエンドに自動的にバインドします。</block>
  <block id="625cc9b8ccc34496dc2b3fcffb7e384a" category="section-title">手順の概要</block>
  <block id="a867c4bbc8d632a517f22b7377b9b8ed" category="paragraph">kubectl' を使用して新しいバックエンドを作成するには ' 次の手順を実行する必要があります</block>
  <block id="4db4699aa0126dfb06878d7e07c0abdf" category="inline-link">Kubernetes Secret</block>
  <block id="7e5e1bb39eefe4eec7a88b845126d41d" category="list-text">を作成します<block ref="fcce7b7bd05b6b012eabe3df8de04808" category="inline-link-rx"></block>。シークレットには、ストレージクラスタ / サービスと通信するために Trident から必要なクレデンシャルが含まれています。</block>
  <block id="c39d193a9cc4084cc6c7964e1bb5efd8" category="list-text">「 TridentBackendConfig 」オブジェクトを作成します。ストレージクラスタ / サービスの詳細を指定し、前の手順で作成したシークレットを参照します。</block>
  <block id="286b0035cf59742ffe54696b798f2368" category="paragraph">バックエンドを作成したら、「 kubectl get tbc &lt;tbc-name&gt; -n &lt;trident-namespac&gt;` 」を使用してバックエンドのステータスを確認し、詳細を収集できます。</block>
  <block id="494cb787cd1c1f78123323c1006f2081" category="section-title">手順 1 ： Kubernetes Secret を作成します</block>
  <block id="a8c4d0cb53af2c6e334f5c58890021d6" category="paragraph">バックエンドのアクセスクレデンシャルを含むシークレットを作成します。ストレージサービス / プラットフォームごとに異なる固有の機能です。次に例を示します。</block>
  <block id="04402bf69acac56c72a55c0e4ac2165c" category="paragraph">次の表に、各ストレージプラットフォームの Secret に含める必要があるフィールドをまとめます。</block>
  <block id="94cec86c6eef229009007e6d00d54ef1" category="cell">ストレージプラットフォームのシークレットフィールド概要</block>
  <block id="1e6947ac7fb3a9529a9726eb692c8cc5" category="cell">秘密</block>
  <block id="c11257eff6563de2c05e353770c514ca" category="cell">Field 概要の略</block>
  <block id="93c5bebdea9c94a0740fe6fd9bb250f0" category="paragraph">ClientID</block>
  <block id="012e85295e2f1f744cfb8757f8dd4830" category="paragraph">アプリケーション登録からのクライアント ID</block>
  <block id="c9ff119073ea2567730fb42e3a4fe805" category="paragraph">apiKey</block>
  <block id="defb11bd732dde7d185fcc4583818851" category="paragraph">CVS アカウントの API キー</block>
  <block id="ce656850400574e9f9cffb285ee8abc0" category="paragraph">SecretKey</block>
  <block id="5324944de62956f7d758fd5d2f6d8826" category="paragraph">CVS アカウントのシークレットキー</block>
  <block id="ee64ef6c307cfcfe5c0f085471cd61fa" category="paragraph">private_key_id です</block>
  <block id="1e31c22f827d25c5973eee697baace79" category="paragraph">秘密鍵の ID 。CVS 管理者ロールを持つ GCP サービスアカウントの API キーの一部</block>
  <block id="156a17333e77a3c504018cae5ada8c3b" category="paragraph">private_key を使用します</block>
  <block id="8e0708b67ba6ce0f70a948152e7e7895" category="paragraph">秘密鍵CVS 管理者ロールを持つ GCP サービスアカウントの API キーの一部</block>
  <block id="25de05ab7f10e99b499db62e0b89ad33" category="cell">Element （ NetApp HCI / SolidFire ）</block>
  <block id="2a6ba72e93aa7fa676d07973ed2716bb" category="paragraph">エンドポイント</block>
  <block id="14c4b06b824ec593239362517f538b29" category="paragraph">ユーザ名</block>
  <block id="6e1b40351708d93ce8c387f6f8ca7533" category="paragraph">クラスタ / SVM に接続するためのユーザ名。クレデンシャルベースの認証に使用されます</block>
  <block id="5f4dcc3b5aa765d61d8327deb882cf99" category="paragraph">パスワード</block>
  <block id="4d3fd9a7ab4c84b857fc26b2633237d0" category="paragraph">クラスタ / SVM に接続するためのパスワード。クレデンシャルベースの認証に使用されます</block>
  <block id="19dce7ac7f5290fc8fa218ad0c858df5" category="paragraph">clientPrivateKey</block>
  <block id="8c5e8d4f9acf9295e1a96feef0c0b516" category="paragraph">クライアント秘密鍵の Base64 エンコード値。証明書ベースの認証に使用されます</block>
  <block id="039e9d80fa53ba861c06b590ba3f9d34" category="paragraph">chapUsername のコマンド</block>
  <block id="a7128cd45d4a277fe5c6ed6f6c4238f7" category="paragraph">インバウンドユーザ名。useCHAP = true の場合は必須。「 ONTAP-SAN' 」と「 ONTAP-SAN-エコノミー 」の場合</block>
  <block id="f9d0dc78b203f2c1106dc0c7d58a5397" category="paragraph">chapInitiatorSecret</block>
  <block id="2f573af61fb37b4f1c5e2def2341b7c4" category="paragraph">CHAP イニシエータシークレット。useCHAP = true の場合は必須。「 ONTAP-SAN' 」と「 ONTAP-SAN-エコノミー 」の場合</block>
  <block id="2ebe107bb3bc9551fbb0e5033046931c" category="paragraph">chapTargetUsername のコマンド</block>
  <block id="e945f079b3e50bd5722f056b72282608" category="paragraph">ターゲットユーザ名。useCHAP = true の場合は必須。「 ONTAP-SAN' 」と「 ONTAP-SAN-エコノミー 」の場合</block>
  <block id="4ab84a55744951d967033db9b64f6b27" category="paragraph">chapTargetInitiatorSecret</block>
  <block id="61b50fba255c10a4a2b5f7cf8276849a" category="paragraph">CHAP ターゲットイニシエータシークレット。useCHAP = true の場合は必須。「 ONTAP-SAN' 」と「 ONTAP-SAN-エコノミー 」の場合</block>
  <block id="73d583a1445e1497ec3adaa011e2724c" category="paragraph">このステップで作成されたシークレットは、次のステップで作成された「 TridentBackendConfig 」オブジェクトの「 PEC.credentials 」フィールドで参照されます。</block>
  <block id="80a6c6a7044e3f06bb524f88ac2058f4" category="section-title">手順 2 ： TridentBackendConfig CR を作成します</block>
  <block id="3394622f88ed2c82c85e92e908879095" category="paragraph">これで「 TridentBackendConfig 」 CR を作成する準備ができました。この例では 'ONTAP-SAN' ドライバを使用するバックエンドは ' 次に示す TridentBackendConfig オブジェクトを使用して作成されます</block>
  <block id="b5a13f13012993635ae9e627f314bbb9" category="section-title">手順 3 ： TridentBackendConfig CR のステータスを確認します</block>
  <block id="967688089cfc07a6c8e893bce5186445" category="paragraph">これで「 TridentBackendConfig 」 CR が作成され、ステータスを確認できるようになりました。次の例を参照してください。</block>
  <block id="edc9d2e179d9bd8effd5277699967aff" category="paragraph">バックエンドが正常に作成され、「 TridentBackendConfig 」 CR にバインドされました。</block>
  <block id="ecb5320e6f020f2c2dcad7a6268111ed" category="paragraph">フェーズには次のいずれかの値を指定できます。</block>
  <block id="35ef366711dba4820492cd153e2bc30d" category="list-text">「 bound` ： TridentBackendConfig 」 CR はバックエンドに関連付けられており、バックエンドには「 TridentBackendConfig 」 CR の uid に設定された「 configRef 」が含まれています。</block>
  <block id="f2edf590deb30828e48e7290aa78e788" category="list-text">Unbound ： "" を使用して表現されています「 TridentBackendConfig 」オブジェクトはバックエンドにバインドされません。新しく作成されたすべての TridentBackendConfig ’ CRS は、デフォルトでこのフェーズに入ります。フェーズが変更された後、再度 Unbound に戻すことはできません。</block>
  <block id="895ba30a6f39f0691ad851fe26560431" category="list-text">「削除」 : 「 TridentBackendConfig 」 CR の「要素ポリシー」は「削除」に設定されています。「 TridentBackendConfig 」 CR が削除されると、「 Deleting 」状態に移行します。</block>
  <block id="0550ab6955adf5805cf2d00b7c592718" category="list-text">バックエンドに永続ボリューム要求（ PVC ）が存在しない場合、「 TridentBackendConfig 」を削除すると、 Astra Trident はバックエンドと「 TridentBackendConfig 」 CR を削除します。</block>
  <block id="ffd02eb489e62222a00391567d0bad81" category="list-text">バックエンドに 1 つ以上の PVC が存在する場合は、削除状態になります。次に 'TridentBackendConfig'CR が削除フェーズに入りますバックエンドおよび TridentBackendConfig は、すべての PVC が削除された後にのみ削除されます。</block>
  <block id="39d978e14d4d8c9f19589af0d4e72661" category="list-text">`lost` ：「 TridentBackendConfig 」 CR に関連付けられているバックエンドが誤って削除されたか、意図的に削除されました。「 TridentBackendConfig 」 CR には削除されたバックエンドへの参照があります。「 TridentBackendConfig 」 CR は、「 $eleetionPolicy 」の値に関係なく削除できます。</block>
  <block id="8375bdbfbc291bcedc60e7555e3dc43a" category="list-text">Unknown`: Astra Trident は 'TridentBackendConfig'CR に関連付けられたバックエンドの状態または存在を判断できませんたとえば、 API サーバが応答していない場合や、「 tridentbackends.trident.netapp.io` CRD 」がない場合などです。これには、ユーザの介入が必要な場合があります。</block>
  <block id="fdf3d4560a801cb64c255cc2790fe9cc" category="inline-link-macro">バックエンドの更新とバックエンドの削除</block>
  <block id="57867491a75119ccf33f6ed8a434ff8e" category="paragraph">この段階では、バックエンドが正常に作成されます。など、いくつかの操作を追加で処理することができます <block ref="9f5a7b55f1a44b55d5336cefd3bf688e" category="inline-link-macro-rx"></block>。</block>
  <block id="4dca0b80562cc590644c1acfada17219" category="section-title">（オプション）手順 4 ：詳細を確認します</block>
  <block id="22f66c61dd35abb0ae1840a7e38ae1b9" category="paragraph">バックエンドに関する詳細情報を確認するには、次のコマンドを実行します。</block>
  <block id="aab3a73056ee2962dff0130da0538454" category="paragraph">さらに、「 TridentBackendConfig 」の YAML ／ JSON ダンプを取得することもできます。</block>
  <block id="9fae9b8b2e8f0d5b91654165a5dacc1f" category="paragraph">backendInfo` には 'TridentBackendConfig'CR に応答して作成されたバックエンドの backendName' と backendUUID' が含まれます「 lastOperationStatus 」フィールドは、「 TridentBackendConfig 」 CR の最後の操作のステータスを表します。これは、ユーザーが起動する（例えば、ユーザーが「 PEC 」の何かを変更した）か、 Astra Trident によってトリガーされる（例えば、 Astra Trident の再起動時）ことができます。Success または Failed のいずれかです。「 phase 」は、「 TridentBackendConfig 」 CR とバックエンド間の関係のステータスを表します。上の例では 'phase' に値がバインドされていますこれは 'TridentBackendConfig'CR がバックエンドに関連付けられていることを意味します</block>
  <block id="7b7587593fc7d381339d450faa35dfa9" category="paragraph">イベントログの詳細を取得するには、「 kubectl -n trident describe describe tbc &lt;tbc -cr-name&gt; 」コマンドを実行します。</block>
  <block id="6dc07da7e54d697726bb349fb693fa8b" category="inline-link-macro">こちらを参照してください</block>
  <block id="c732962a4a01ea5f406ec66e50e98903" category="admonition">tridentctl を使用して ' 関連付けられた TridentBackendConfig' オブジェクトを含むバックエンドを更新または削除することはできません「 tridentctl 」と「 TridentBackendConfig 」の切り替えに関連する手順を理解するには、次の手順に従います。 <block ref="8d6bc70a41f48e3f72c3f5ea8752090b" category="inline-link-macro-rx"></block>。</block>
  <block id="99c7791f20f0d41bd8f14c11e666a405" category="summary">Amazon Elastic Kubernetes Service （ EKS ）で実行されている Astra Trident と Amazon ONTAP を使用することで、 ONTAP がサポートするブロックボリュームとファイル永続ボリュームを確実にプロビジョニングできます。</block>
  <block id="337de5d45c69b1e4dcf87a8e7ec9ff76" category="doc">Amazon FSX for NetApp ONTAP で Astra Trident を使用</block>
  <block id="679e88f51c747ba6602cbc38cb32bff8" category="paragraph"><block ref="6a2736fcbb5755dd03d114a5153506eb" category="inline-link-rx"></block>は、 NetApp ONTAP ストレージ・オペレーティング・システムを搭載したファイル・システムの起動と実行を可能にする、フルマネージドの AWS サービスです。Amazon FSX for NetApp ONTAP を使用すると、使い慣れたネットアップの機能、パフォーマンス、管理機能を活用しながら、 AWS にデータを格納する際の簡易性、即応性、セキュリティ、拡張性を活用できます。FSX は、 ONTAP のファイルシステム機能と管理 API の多くをサポートしています。</block>
  <block id="7eb620c879218a348ba0e9afaedf6b01" category="paragraph">ファイルシステムは、オンプレミスの ONTAP クラスタに似た、 Amazon FSX のプライマリリソースです。各 SVM 内には、ファイルとフォルダをファイルシステムに格納するデータコンテナである 1 つ以上のボリュームを作成できます。Amazon FSX for NetApp ONTAP を使用すると、 Data ONTAP はクラウド内の管理対象ファイルシステムとして提供されます。新しいファイルシステムのタイプは * NetApp ONTAP * です。</block>
  <block id="98cbc4f3bec852897b19deb4e76af117" category="paragraph">Amazon Elastic Kubernetes Service （ EKS ）で実行されている Astra Trident と Amazon FSX for NetApp ONTAP を使用することで、 Amazon Elastic Kubernetes Service （ EKS ）で実行されている Kubernetes クラスタが、 ONTAP がサポートするブロックボリュームとファイル永続ボリュームをプロビジョニングできるようになります。</block>
  <block id="ff27e75635c1ff1e88fbc656b16e56ce" category="section-title">Astra Trident の詳細をご確認ください</block>
  <block id="ac7bd35f3efc1fd44a6368cea5fa9c21" category="paragraph">Astra Trident を初めて使用する場合は、以下のリンクを使用して確認してください。</block>
  <block id="483a5da192f46e3cfe8391d3ef234fc4" category="inline-link-macro">よくある質問です</block>
  <block id="291df90d8802914b42223577bb41f627" category="list-text"><block ref="291df90d8802914b42223577bb41f627" category="inline-link-macro-rx"></block></block>
  <block id="d977410bdd2db39b51f9b9fbdbcc8061" category="inline-link-macro">Astra Trident を使用するための要件</block>
  <block id="4d644a71fe6f2b6c8e2bcc86d5aaed77" category="list-text"><block ref="4d644a71fe6f2b6c8e2bcc86d5aaed77" category="inline-link-macro-rx"></block></block>
  <block id="486632f7d2196e772b742db4a4a0ad7c" category="inline-link-macro">Astra Trident を導入</block>
  <block id="70638242b92c90c812dfa8f50f272806" category="list-text"><block ref="70638242b92c90c812dfa8f50f272806" category="inline-link-macro-rx"></block></block>
  <block id="bec2d42d896d0905cf546e4b5ca33b97" category="inline-link-macro">ネットアップ ONTAP 用に ONTAP 、 Cloud Volumes ONTAP 、 Amazon FSX を設定する際のベストプラクティス</block>
  <block id="80a1961bd7058b357bb20148eaf24ec2" category="list-text"><block ref="80a1961bd7058b357bb20148eaf24ec2" category="inline-link-macro-rx"></block></block>
  <block id="80e431e9c3f38eb259dc9d255c8f4cf2" category="list-text"><block ref="80e431e9c3f38eb259dc9d255c8f4cf2" category="inline-link-macro-rx"></block></block>
  <block id="a479f33489c8d81410024a41c9544214" category="inline-link-macro">ONTAP SAN バックエンド構成</block>
  <block id="9b405a9aada0c758f606770edf5e729c" category="list-text"><block ref="9b405a9aada0c758f606770edf5e729c" category="inline-link-macro-rx"></block></block>
  <block id="3db2a44c712d8cff702c0fe05daddb2c" category="inline-link-macro">ONTAP NAS バックエンド構成</block>
  <block id="88cc0a1e56925a83682b7c1f999e281b" category="list-text"><block ref="88cc0a1e56925a83682b7c1f999e281b" category="inline-link-macro-rx"></block></block>
  <block id="0606b09e12901baae5719fde5a162beb" category="paragraph">ドライバー機能の詳細をご覧ください <block ref="36417a02a2b8551d9a22837b23ac7abd" category="inline-link-macro-rx"></block>。</block>
  <block id="55449fd175613962d882ab450cfc5f3c" category="inline-link">FabricPool</block>
  <block id="d07e2d99267e4fc3c508f6701be977b4" category="paragraph">NetApp ONTAP 用の Amazon FSX では、を使用します<block ref="d1584952da6bdedb0a24d5dbd43ce0bf" category="inline-link-rx"></block> ストレージ階層を管理します。データへのアクセス頻度に基づいて階層にデータを格納することができます。</block>
  <block id="0066f4a006b2b4f192583757b5f7a3c2" category="paragraph">Astra Trident は、 ONTAP 管理者または SVM 管理者として、クラスタ「 fsxadmin 」ユーザまたは「 vsadmin 」 SVM ユーザ、あるいは同じロールを持つ別の名前を持つユーザとして実行されることを想定しています。「 fsxadmin 」ユーザは、「 admin 」クラスタ・ユーザに限定的に代わるものです。Astra Trident は通常、 Amazon FSX 以外の ONTAP 展開に「 admin 」クラスタユーザを使用します。</block>
  <block id="8e64a609e66214066595e6300aaab281" category="section-title">ドライバ</block>
  <block id="5979964b20770952072578428e9c11cb" category="paragraph">Astra Trident と Amazon FSX for NetApp ONTAP を統合するには、次のドライバを使用します。</block>
  <block id="79a4618bb191cb293c330f8189531a13" category="list-text">「 ONTAP-SAN」 ：プロビジョニングされる各 PV は、 NetApp ONTAP ボリューム用の独自の Amazon FSX 内の LUN です。</block>
  <block id="b8f98ceeb9b158e8af3527fce91e9e57" category="list-text">「 ONTAP と SAN の経済性」：プロビジョニングされた各 PV は、 NetApp ONTAP ボリュームの Amazon FSX ごとに構成可能な数の LUN を持つ LUN です。</block>
  <block id="a5bc2c9e7628ac6c73838f9fea0e6ed6" category="list-text">「 ONTAP-NAS' ：プロビジョニングされた各 PV は、 NetApp ONTAP ボリューム用の完全な Amazon FSX です。</block>
  <block id="94a834f420b7c21f3a1053e6dc705a31" category="list-text">「 ONTAP-NAS-エコノミー 」：プロビジョニングされた各 PV は qtree であり、 NetApp ONTAP ボリュームの Amazon FSX ごとに設定可能な数の qtree があります。</block>
  <block id="e42b07a9f050ef51ea1211004a50f223" category="list-text">「 ONTAP-NAS-flexgroup 」：プロビジョニングされた各 PV は、 NetApp ONTAP FlexGroup ボリューム用の完全な Amazon FSX です。</block>
  <block id="9dd7dc44e4a27c9a2c567d6b2a8b221a" category="paragraph">Astra Trident には、次の 2 つの認証モードがあります。</block>
  <block id="5cefadbc856e5afd968e0dbf6f90ad85" category="list-text">認証情報ベース：ファイルシステムには「 fsxadmin 」ユーザを、 SVM には「 vsadmin 」ユーザを使用できます。バックエンドの構成には 'vsadmin ユーザーを使用することをお勧めしますAstra Trident は、このユーザ名とパスワードを使用して FSX ファイルシステムと通信します。</block>
  <block id="ed2536bee60113131cf25b2de3ec8734" category="list-text">証明書ベース： Astra Trident は、 SVM にインストールされている証明書を使用して、 FSX ファイルシステムの SVM と通信します。</block>
  <block id="28e8b87c947c614dcb6e6f51703815e1" category="paragraph">認証の詳細については、次のリンクを参照してください。</block>
  <block id="619b69dca5d7c9f1f67ec55897733162" category="inline-link-macro">ONTAP NAS</block>
  <block id="b773e97e2ae2aebea91c33b771a98316" category="list-text"><block ref="b773e97e2ae2aebea91c33b771a98316" category="inline-link-macro-rx"></block></block>
  <block id="548fedaf4074fe2826e3c53dfd92a19e" category="inline-link-macro">ONTAP SAN</block>
  <block id="58ec862225833e810e6a7f94667d42db" category="list-text"><block ref="58ec862225833e810e6a7f94667d42db" category="inline-link-macro-rx"></block></block>
  <block id="9f6c198d85b31b573b56186f8ecc4394" category="section-title">Amazon FSX for NetApp ONTAP を使用して、 EKS に Astra Trident を導入して設定する</block>
  <block id="80d13d3dbe137e8fb646193f275eceeb" category="list-text">既存の Amazon EKS クラスタまたは 'kubectl' がインストールされた自己管理型 Kubernetes クラスタ</block>
  <block id="52d48fdd62aa109d7f163f0ef8a31b83" category="list-text">クラスタのワーカーノードからアクセスできる、 NetApp ONTAP ファイルシステムと Storage Virtual Machine （ SVM ）用の既存の Amazon FSX 。</block>
  <block id="ae9a35d29039db87d65a796241a9043d" category="inline-link-macro">NFS か iSCSI か</block>
  <block id="26717a7ec67b264dcb09707406b962ef" category="list-text">準備されているワーカーノード <block ref="b4b6a021fd40b8007c50db2baa5f32f0" category="inline-link-macro-rx"></block>。</block>
  <block id="fe914214000491758957f04647f8da36" category="inline-link">Amazon Machine Images の略</block>
  <block id="b048d74c93505355f9535fd30cba1a60" category="admonition">Amazon Linux および Ubuntu で必要なノードの準備手順を実行します<block ref="70013ee128d5437b3d9579d66ece4066" category="inline-link-rx"></block> （ AMIS ） EKS の AMI タイプに応じて異なります。</block>
  <block id="7b94315b87c307aaeb6180ba3d298112" category="paragraph">Astra Trident のその他の要件については、を参照してください <block ref="9754671a728b750cb0063ea36c5205bc" category="inline-link-macro-rx"></block>。</block>
  <block id="a63af3333b229a7d3d80f554369071d3" category="list-text">./trident-get-started/Kubernetes -deployment.html のいずれかを使用して Astra Trident を導入します（導入方法 ^ ）。</block>
  <block id="064bdeb131b9f896a140c3620503f952" category="list-text">Trident を設定する手順は次のとおりです。</block>
  <block id="0416f36f8f02433e530639fd76b0721d" category="list-text">SVM の管理 LIF の DNS 名を収集します。たとえば、 AWS CLI を使用して、次のコマンドを実行した後、「 Endpoints 」 -&gt; 「 Manager 」の下にある「 D NSName 」エントリを探します。</block>
  <block id="d4eca488acc4ec18f87e7f00d23309cd" category="list-text">認証用の証明書を作成してインストールします。「 ONTAP-SAN' バックエンド」を使用している場合は、を参照してください <block ref="db35e24c08f3bb29e6d31cbaa530e9d6" category="inline-link-macro-rx"></block>。「 ONTAP-NAS' バックエンド」を使用している場合は、を参照してください <block ref="118a5731ca660935428e52a749b9e8a6" category="inline-link-macro-rx"></block>。</block>
  <block id="3e25473814d436a2ebac91120e147b0b" category="admonition">ファイルシステムにアクセスできる任意の場所から SSH を使用して、ファイルシステムにログイン（証明書をインストールする場合など）できます。「 fsxadmin 」ユーザ、ファイルシステムの作成時に設定したパスワード、「 aws FSX describe -file-systems 」の管理 DNS 名を使用します。</block>
  <block id="860958fe641e0edbd80fe522c36d0560" category="list-text">次の例に示すように、証明書と管理 LIF の DNS 名を使用してバックエンドファイルを作成します。</block>
  <block id="1584837635038d443115ce4eeb3b33e4" category="paragraph">バックエンドの作成については、次のリンクを参照してください。</block>
  <block id="6f95a39ae3c518928ed5e4681a0fd49b" category="inline-link-macro">バックエンドに ONTAP NAS ドライバを設定します</block>
  <block id="82744a46443ebff9011b85aa2468fdc2" category="list-text"><block ref="82744a46443ebff9011b85aa2468fdc2" category="inline-link-macro-rx"></block></block>
  <block id="d1e8ff43d93982813a74a45f9b721655" category="list-text"><block ref="d1e8ff43d93982813a74a45f9b721655" category="inline-link-macro-rx"></block></block>
  <block id="408cf26cdce3db57f4b0cfb372f60739" category="admonition">'ONTAP-SAN' および 'ONTAP-SAN-エコノミー のドライバには 'atalif' を指定しないでください Astra Trident がマルチパスを使用できるようにします</block>
  <block id="d11f02b39cdb338286053b2f1315c6b4" category="inline-link-macro">ストレージクラスを定義してボリュームをプロビジョニングし、ポッドでボリュームをマウント</block>
  <block id="95a5f873da165cd068ef3ec7e17364f3" category="paragraph">導入後、次の手順を実行してを作成します <block ref="15bf5a6bf382a8a35f58cdae8ebe845c" category="inline-link-macro-rx"></block>。</block>
  <block id="cc788b7e72b2a734dd0985bd1e0e9fe3" category="inline-link">Amazon FSX for NetApp ONTAP のドキュメント</block>
  <block id="fd570b75466e2daca21a032e6fd5981c" category="list-text"><block ref="fd570b75466e2daca21a032e6fd5981c" category="inline-link-rx"></block></block>
  <block id="0ef79cb4bb284d3ca9c3e95489919301" category="inline-link">Amazon FSX for NetApp ONTAP に関するブログ記事です</block>
  <block id="3b94214fe5975bca8da92b72f8926be2" category="list-text"><block ref="3b94214fe5975bca8da92b72f8926be2" category="inline-link-rx"></block></block>
  <block id="8682abd0ce083533bad141869c96ab2a" category="summary">Astra Trident は、ボリュームを管理するための機能を複数備えています。Trident がボリュームに提供している Astra の機能をご確認ください。</block>
  <block id="b42cbc6e68075c106b9faa27e4931091" category="doc">ボリューム操作を実行する</block>
  <block id="eb487790322c4b8e9b4953d60be1acee" category="paragraph">Trident がボリュームを管理するための各種機能をご紹介します。</block>
  <block id="3d4635d3cf4f27b0e87f3fe86a84744d" category="inline-link-macro">CSI トポロジを使用します</block>
  <block id="9e325272e7aed7c7bd6c28ff6fa4a90f" category="list-text"><block ref="9e325272e7aed7c7bd6c28ff6fa4a90f" category="inline-link-macro-rx"></block></block>
  <block id="e5879288a130fbd8d0b8682cfc375c4f" category="inline-link-macro">スナップショットを操作します</block>
  <block id="c499fa59a1c9a0f6da195782a581f2e3" category="list-text"><block ref="c499fa59a1c9a0f6da195782a581f2e3" category="inline-link-macro-rx"></block></block>
  <block id="56661e701892ff873e44b62ffeec85e5" category="list-text"><block ref="56661e701892ff873e44b62ffeec85e5" category="inline-link-macro-rx"></block></block>
  <block id="c0417f5bbd54c5dc1c3704d6b566fcf3" category="list-text"><block ref="c0417f5bbd54c5dc1c3704d6b566fcf3" category="inline-link-macro-rx"></block></block>
  <block id="8b7b728c6a1e7accd6148646ba730e77" category="summary">Astra Trident でバックエンドを管理するさまざまな方法をご確認ください。</block>
  <block id="4342473e01edd2e1440b8b76076f4c9e" category="doc">バックエンド管理オプション間を移動します</block>
  <block id="207aacc2f1990ce861bf20cfcd0ca067" category="paragraph">Astra Trident でバックエンドを管理するさまざまな方法をご確認ください。「 TridentBackendConfig 」が導入されたことで、管理者はバックエンドを 2 つの方法で管理できるようになりました。これには、次のような質問があります。</block>
  <block id="a7b407f571446f9f4a30f63e8160784a" category="list-text">tridentctl を使用して作成したバックエンドは 'TridentBackendConfig' で管理できますか</block>
  <block id="3e1fc11d05c13404995af2b9fda64675" category="list-text">「 TridentBackendConfig 」を使用して作成したバックエンドは、「 tridentctl 」を使用して管理できますか。</block>
  <block id="41b338cd1cea5e2df168994a9bdedf75" category="section-title">TridentBackendConfig を使用して tridentctl バックエンドを管理します</block>
  <block id="d6da18e16f248df47ee8e5139ef0156a" category="paragraph">このセクションでは 'tridentBackendConfig' オブジェクトを作成して Kubernetes インターフェイスから直接 'tridentctl を使用して作成されたバックエンドの管理に必要な手順について説明します</block>
  <block id="bee2ae6068ad50344ddb325737434004" category="paragraph">これは、次のシナリオに該当します。</block>
  <block id="e9c4de6d076377511c2b6a8463898ef2" category="list-text">「 tridentBackendConfig 」を持たない既存のバックエンドは、「 tridentctl 」で作成されています。</block>
  <block id="8eed1f3ae09f008e2dbfb4280a0c137c" category="list-text">「 tridentctl 」で作成された新しいバックエンドと、その他の「 TridentBackendConfig 」オブジェクトが存在します。</block>
  <block id="0507a4f0ac746171a414097e7f033dca" category="paragraph">どちらの場合も、 Trident でボリュームをスケジューリングし、処理を行っているバックエンドは引き続き存在します。管理者には次の 2 つの選択肢があります。</block>
  <block id="95328f21e7a6deb7bb94acb3866753a6" category="list-text">tridentctl を使用して ' バックエンドを使用して作成したバックエンドを管理します</block>
  <block id="82c1dd66573aab904c86b63e2d5486ad" category="list-text">tridentctl を使用して作成されたバックエンドを新しい TridentBackendConfig オブジェクトにバインドしますこれは ' バックエンドが tridentctl ではなく 'kubectl' を使用して管理されることを意味します</block>
  <block id="d12d5022b29f44c340ee55411970fe10" category="paragraph">「 kubectl 」を使用して既存のバックエンドを管理するには、既存のバックエンドにバインドする「 TridentBackendConfig 」を作成する必要があります。その仕組みの概要を以下に示します。</block>
  <block id="0637b40285532fa1b6c6a4548e63d2f4" category="list-text">Kubernetes Secret を作成します。シークレットには、ストレージクラスタ / サービスと通信するために Trident から必要なクレデンシャルが含まれています。</block>
  <block id="b863de09ccfaf2861ead350dd78a9933" category="list-text">「 TridentBackendConfig 」オブジェクトを作成します。ストレージクラスタ / サービスの詳細を指定し、前の手順で作成したシークレットを参照します。同一の構成パラメータ (`PEC.backendName`'`PEC.storagePrefix'`PEC.storageDriverName') を指定するように注意する必要があります'PEC.backendName' は ' 既存のバックエンドの名前に設定する必要があります</block>
  <block id="44411eb1f3a70196b442f0ed4bb62820" category="section-title">手順 0 ：バックエンドを特定します</block>
  <block id="c400920d4e58cf882999474fbdf967d3" category="paragraph">既存のバックエンドにバインドする「 TridentBackendConfig 」を作成するには、バックエンドの設定を取得する必要があります。この例では、バックエンドが次の JSON 定義を使用して作成されているとします。</block>
  <block id="2181a22b3daf7866094f9f0d79da87d0" category="paragraph">次の例に示すように、バックエンドのクレデンシャルを含むシークレットを作成します。</block>
  <block id="c030a8fb45dd1e59dbe723d93fefa8b4" category="section-title">手順 2 ： TridentBackendConfig CR を作成します</block>
  <block id="276e25c1cf06c603ba2d133ae2e39dde" category="paragraph">次の手順では ' （この例のように）事前に存在する 'ONTAP-NAS-backend' に自動的にバインドされる 'TridentBackendConfig'CR を作成します次の要件が満たされていることを確認します。</block>
  <block id="0cbfd18f16db9afdef577eeddd6a8bee" category="list-text">「 'PEC.backendName' 」に同じバックエンド名が定義されています。</block>
  <block id="f261e4f2fe82344f35f04f9b3813e425" category="list-text">設定パラメータは元のバックエンドと同じです。</block>
  <block id="12bf8ac3a10fbfae1244c8505d9aa91a" category="list-text">仮想ストレージプール（存在する場合）は、元のバックエンドと同じ順序で設定する必要があります。</block>
  <block id="8f50f98a5b56105263e2f7ab18dc0686" category="list-text">クレデンシャルは、プレーンテキストではなく、 Kubernetes Secret を通じて提供されます。</block>
  <block id="05c8cd2e49ae2ecaee101c9bc5619d49" category="paragraph">この場合、「 TridentBackendConfig 」は次のようになります。</block>
  <block id="63d6f3ce15066b6232a788bb692bf721" category="paragraph">「 TridentBackendConfig 」が作成された後、そのフェーズは「バインド」されている必要があります。また、既存のバックエンドと同じバックエンド名と UUID が反映されている必要があります。</block>
  <block id="d1a75f7c76623350486029378ab164c3" category="paragraph">これで ' バックエンドは 'tbc-ontap/nas-backend`TridentBackendConfig' オブジェクトを使用して完全に管理されます</block>
  <block id="fe1ffe29ba93d2779f921228fcba083e" category="section-title">tridentctl を使用して TridentBackendConfig バックエンドを管理します</block>
  <block id="fcea92f3e948217919ca8b4051c2c61e" category="paragraph">tridentBackendConfig を使用して作成されたバックエンドを一覧表示するには 'tridentctl を使用しますまた、管理者は、「 TridentBackendConfig 」を削除し、「 pec.deletionPolicy` 」が「 re 」に設定されていることを確認することで、「 tridentctl 」を使用してこのようなバックエンドを完全に管理することもできます。</block>
  <block id="ab0c73d8e0377b2df5b783d3a76f2249" category="paragraph">たとえば ' 次のバックエンドが TridentBackendConfig を使用して作成されたとします</block>
  <block id="9874d325a018b14fb52adf25f612579e" category="paragraph">出力からは、「 TridentBackendConfig 」が正常に作成され、バックエンドにバインドされていることがわかります（バックエンドの UUID を確認してください）。</block>
  <block id="416d2581db02ba9bc1187cf17c86a1c4" category="section-title">手順 1 ：削除ポリシーが retain に設定されていることを確認します</block>
  <block id="ea64db0654e81907c68ffc52d023c3c7" category="paragraph">「ネットワークポリシー」の値を見てみましょう。これは「山」に設定する必要があります。これにより 'TridentBackendConfig'CR が削除されても ' バックエンドの定義は引き続き表示され 'tridentctl' で管理できます</block>
  <block id="1ad97e0f65ef91102831baaa31630c76" category="admonition">「削除ポリシー」が「再取得」に設定されていない限り、次の手順に進まないでください。</block>
  <block id="e66283ad5a3e477773a4c58ea53d800f" category="section-title">手順 2 ： TridentBackendConfig CR を削除します</block>
  <block id="8313f77478cb0df464604ae4435acce2" category="paragraph">最後の手順は、「 TridentBackendConfig 」 CR を削除することです。「削除ポリシー」が「取得」に設定されていることを確認したら、削除を続行できます。</block>
  <block id="c1493b6d6e05639a816e5772bbb491af" category="paragraph">TridentBackendConfig オブジェクトを削除すると、 Astra Trident はバックエンド自体を削除せずに削除します。</block>
  <block id="72a5926b7fb086fe87e93771f6620556" category="summary">tridentctl を使用してバックエンド管理操作を実行する方法について説明します</block>
  <block id="aeeb03235358f0f4bf3be628bed08721" category="section-title">バックエンドを作成します</block>
  <block id="34746f7a1d24170eeebf5510a045d43d" category="inline-link-macro">バックエンド構成ファイル</block>
  <block id="99b7232073a67a8c82304f979e3dc83f" category="paragraph">を作成したら <block ref="03c0b6ed8698193668e92f56e9be3efa" category="inline-link-macro-rx"></block>を使用して、次のコマンドを実行します。</block>
  <block id="1cabe44c722167581b1e219de6c58341" category="paragraph">バックエンドの作成に失敗した場合は、バックエンドの設定に何か問題があります。次のコマンドを実行すると、ログを表示して原因を特定できます。</block>
  <block id="b5f9999463782f0c36ecc89573a90a49" category="paragraph">構成ファイルの問題を特定して修正したら ' 再度 create コマンドを実行します</block>
  <block id="634b471e6af84767e06324552492b533" category="section-title">バックエンドを削除します</block>
  <block id="412228c370a388e25ee06e8ad7a1da3f" category="paragraph">Astra Trident からバックエンドを削除するには、次の手順を実行します。</block>
  <block id="f6816a6570e6b6097177f9adc1f4805b" category="list-text">バックエンド名を取得します。</block>
  <block id="11f4ccb46eb9afc4b1187c376b53123f" category="list-text">バックエンドを削除します。</block>
  <block id="c87f53b53d179c2b5dcd5fad1efba831" category="admonition">Astra Trident で、まだ存在しているこのバックエンドからボリュームとスナップショットをプロビジョニングしている場合、バックエンドを削除すると、新しいボリュームをプロビジョニングできなくなります。バックエンドは「削除」状態のままになり、 Trident は削除されるまでそれらのボリュームとスナップショットを管理し続けます。</block>
  <block id="d694c8966214ec6d0068c0ab2951b65c" category="section-title">既存のバックエンドを表示します</block>
  <block id="a6345aca446812b9124c47b385b33f43" category="paragraph">Trident が認識しているバックエンドを表示するには、次の手順を実行します。</block>
  <block id="cb325bc4dded2aa4744b594966262a99" category="list-text">概要を取得するには、次のコマンドを実行します。</block>
  <block id="9f073deeee70a1418443c3b8379c5c02" category="list-text">すべての詳細を確認するには、次のコマンドを実行します。</block>
  <block id="93dbcf0189ff94d39230d2e3726969ab" category="section-title">バックエンドを更新します</block>
  <block id="27709162cf6b8ffced7bb1da6dd49df3" category="paragraph">新しいバックエンド構成ファイルを作成したら、次のコマンドを実行します。</block>
  <block id="4ca005817e9c882d0ef15d451a97dbf0" category="paragraph">バックエンドの更新が失敗した場合、バックエンドの設定に問題があるか、無効な更新を試行しました。次のコマンドを実行すると、ログを表示して原因を特定できます。</block>
  <block id="20b5ebaa2558437206eb6d1d47577805" category="paragraph">構成ファイルの問題を特定して修正したら 'update コマンドを再度実行できます</block>
  <block id="d47f84a3cda326babf841866ad2326ab" category="section-title">バックエンドを使用するストレージクラスを特定します</block>
  <block id="02fe9d429af25b46c16a1172d735124f" category="paragraph">ここでは ' バックエンド・オブジェクトの tridentctl 出力と同じ JSON を使用して回答で実行できる質問の例を示しますこれには 'jq' ユーティリティが使用されますこのユーティリティをインストールする必要があります</block>
  <block id="e00013adda7b5901ea3e44ae300fd73d" category="paragraph">これは、「 TridentBackendConfig 」を使用して作成されたバックエンドにも適用されます。</block>
  <block id="bc960ce53bb0d62c44b5a3f212c279d3" category="summary">ストレージクラスを作成したり、ストレージクラスを削除したり、既存のストレージクラスを表示したりできます。</block>
  <block id="e8b9c3a9859a62e9a58431c3b61f75d5" category="doc">ストレージクラスを管理する</block>
  <block id="5802c976ee5f858f76699af5294812e6" category="paragraph">ストレージクラスの作成、ストレージクラスの削除、および既存のストレージクラスの表示に関する情報を検索します。</block>
  <block id="e123173acd76721f31496874fd778eca" category="section-title">ストレージクラスを設計する</block>
  <block id="a9a4b52c93b141ba28676afe58a5900d" category="paragraph">を参照してください <block ref="5a81d2db77288939223c6a591fc3991d" category="inline-link-macro-rx"></block> ストレージクラスとその設定方法の詳細については、を参照してください。</block>
  <block id="14f4c7abe09c4481722f1fa6563f2604" category="section-title">ストレージクラスを作成する。</block>
  <block id="99b068c418b4a658f64806517e8567ac" category="paragraph">ストレージクラスファイルが作成されたら、次のコマンドを実行します。</block>
  <block id="fac03ff7d61c420a4caeeb44355cb2be" category="paragraph">「 &lt;storage-class-file&gt; 」は、ストレージクラスのファイル名に置き換える必要があります。</block>
  <block id="0fe0aa7b9b7529f66030afb1629507bb" category="section-title">ストレージクラスを削除する</block>
  <block id="4bf50148821c75f616a96daca9255e6f" category="paragraph">Kubernetes からストレージクラスを削除するには、次のコマンドを実行します。</block>
  <block id="65494a0b3404ce637afd88bcb7c82998" category="paragraph">「 &lt;storage-class&gt; 」は、ご使用のストレージクラスに置き換えてください。</block>
  <block id="a5f526f5d63d827ce2c0146a20cd2ff7" category="paragraph">このストレージクラスで作成された永続ボリュームには変更はなく、 Astra Trident によって引き続き管理されます。</block>
  <block id="1ffda19a93d453b434cfabeb86681d6d" category="admonition">Astra Trident は ' 作成したボリュームにブランクの fsType を適用しますiSCSI バックエンドの場合は 'StorageClass に parameters.fsType を適用することをお勧めしますesixting StorageClasses を削除して 'parameters.fsType' を指定して作成し直す必要があります</block>
  <block id="e606165355271961ba07945766fbf83a" category="section-title">既存のストレージクラスを表示します</block>
  <block id="7c237bc6c124137d25df2dec1cb3e528" category="list-text">既存の Kubernetes ストレージクラスを表示するには、次のコマンドを実行します。</block>
  <block id="4aae22fbb9c0d354d0a9c15c6c126d89" category="list-text">Kubernetes ストレージクラスの詳細を表示するには、次のコマンドを実行します。</block>
  <block id="bed443a9c5577e1043c277e8ebbb542f" category="list-text">Astra Trident の同期されたストレージクラスを表示するには、次のコマンドを実行します。</block>
  <block id="db66cf4d314ab7a719a76ed3af1b0173" category="list-text">Astra Trident の同期されたストレージクラスの詳細を表示するには、次のコマンドを実行します。</block>
  <block id="ce32eb748bd7452bd6ee6d1d7ad6d3a7" category="section-title">デフォルトのストレージクラスを設定する</block>
  <block id="f30a1542c01c3c493f3c01c88dfe5fcd" category="paragraph">Kubernetes 1.6 では、デフォルトのストレージクラスを設定する機能が追加されています。永続ボリューム要求（ PVC ）に永続ボリュームが指定されていない場合に、永続ボリュームのプロビジョニングに使用するストレージクラスです。</block>
  <block id="7c435ae4763642458286cb691812ea55" category="list-text">ストレージクラスの定義でアノテーションの「 torageclass.Kubernetes .io/is-default-class 」を true に設定して、デフォルトのストレージクラスを定義します。仕様に応じて、それ以外の値やアノテーションがない場合は false と解釈されます。</block>
  <block id="61fd76f55d29aaceb4a6ee09a318dc45" category="list-text">次のコマンドを使用して、既存のストレージクラスをデフォルトのストレージクラスとして設定できます。</block>
  <block id="800477137444bec636483de85335cbb5" category="list-text">同様に、次のコマンドを使用して、デフォルトのストレージクラスアノテーションを削除できます。</block>
  <block id="2d2f31c3012657fd7b38b41312d1a0b8" category="paragraph">また、このアノテーションが含まれている Trident インストーラバンドルにも例があります。</block>
  <block id="94d8ac3a8d98f2232d3dc735878a5bc3" category="admonition">クラスタには、常に 1 つのデフォルトストレージクラスだけを設定してください。Kubernetes では、技術的に複数のストレージを使用することはできますが、デフォルトのストレージクラスがまったくない場合と同様に動作します。</block>
  <block id="6c36cb9c072dc4cb9e163c44568f6a91" category="section-title">ストレージクラスのバックエンドを特定します</block>
  <block id="dc0742ede78913414129866d60898f67" category="paragraph">これは 'tridentctl が 'Astra Trident バックエンド・オブジェクトに出力する JSON を使用して回答が実行できる質問の一例ですこれには 'jq' ユーティリティが使用されますこのユーティリティを最初にインストールする必要があります</block>
  <block id="08c4bc4ac4edd9b12963c0596478d746" category="summary">Astra Trident では、 CSI トポロジ機能を利用することにより、 Kubernetes クラスタ内に存在するノードに対してボリュームを選択的に作成して接続できます。</block>
  <block id="4abea6bac3b0b48d11dd8dcd02a11bf9" category="inline-link">CSI トポロジ機能</block>
  <block id="d8af5701dd1ffedb08b7db3f7efcd86b" category="paragraph">Astra Trident では、を使用して、 Kubernetes クラスタ内にあるノードにボリュームを選択的に作成して接続できます<block ref="80b9a4f4a1bc9851317207ee3477041a" category="inline-link-rx"></block>。CSI トポロジ機能を使用すると、領域およびアベイラビリティゾーンに基づいて、ボリュームへのアクセスをノードのサブセットに制限できます。現在、クラウドプロバイダは、 Kubernetes 管理者がゾーンベースのノードを生成できるようになっています。ノードは、アベイラビリティゾーン内の異なるリージョンに配置することも、さまざまなアベイラビリティゾーンに配置することもできます。マルチゾーンアーキテクチャでワークロード用のボリュームをプロビジョニングするために、 Astra Trident は CSI トポロジを使用します。</block>
  <block id="592af423a2f6a51f57c639ec7f7b245e" category="admonition">CSI トポロジ機能の詳細については、を参照してください<block ref="ff042e7f24bd2adcec09d78466034177" category="inline-link-rx"></block>。</block>
  <block id="bbdcaf9b704dc7a7cf73e6000101b65a" category="paragraph">Kubernetes には、 2 つの固有のボリュームバインドモードがあります。</block>
  <block id="93590d63acbb4fa6864a4665157fbcea" category="list-text">'VolumeBindingMode' が Immediate に設定されていると 'Astra Trident は ' トポロジーを認識せずにボリュームを作成しますボリュームバインディングと動的プロビジョニングは、 PVC が作成されるときに処理されます。これはデフォルトの「 VolumeBindingMode 」であり、トポロジ制約を適用しないクラスタに適しています。永続ボリュームは、要求側ポッドのスケジュール要件に依存せずに作成されます。</block>
  <block id="5fca24470d51aa51b0fb2d0f27c25c68" category="list-text">VolumeBindingMode を「 WaitForFirstConsumer 」に設定すると、 PVC の永続ボリュームの作成とバインドは、 PVC を使用するポッドがスケジュールされて作成されるまで遅延されます。これにより、トポロジの要件に応じたスケジュールの制約を満たすようにボリュームが作成されます。</block>
  <block id="3bbc2da928dcf77a048cdd745fe7d208" category="admonition">「 WaitForFirstConsumer 」バインディングモードでは、トポロジラベルは必要ありません。これは CSI トポロジ機能とは無関係に使用できます。</block>
  <block id="edff21c44983aaa85506a3dfe467c494" category="paragraph">CSI トポロジを使用するには、次のものが必要です。</block>
  <block id="6127fe8ac0294f905386b8e26b9a62a3" category="list-text">1.17 以降を実行する Kubernetes クラスタ。</block>
  <block id="f9213d77978aabdafac36d2b0a184e56" category="list-text">クラスタ内のノードには ' トポロジー認識を導入するラベルが必要です（ topology .Kubernetes .io/region および topology .Kubernetes .io/zone ）このラベル * は、 Astra Trident をトポロジ対応としてインストールする前に、クラスタ内のノードに存在する必要があります。</block>
  <block id="0bd58c9826639ac2db106c3b277a7e0f" category="section-title">手順 1 ：トポロジ対応バックエンドを作成する</block>
  <block id="c7d3751a47274aaa616d77a14f2e2722" category="paragraph">Astra Trident ストレージバックエンドは、アベイラビリティゾーンに基づいてボリュームを選択的にプロビジョニングするように設計できます。各バックエンドは、サポートする必要があるゾーンおよびリージョンのリストを表すオプションの「 upportedTopologies 」ブロックを伝送できます。ストレージクラスがそのようなバックエンドを使用する場合、ボリュームは、サポートされているリージョン / ゾーンでスケジュールされているアプリケーションから要求された場合にのみ作成されます。</block>
  <block id="168d311a918475a654f296f89a7da983" category="paragraph">バックエンド定義の例を次に示します。</block>
  <block id="3e778236fe8f94ccc453f52d827e3719" category="admonition">「 upportedTopologies 」は、バックエンドごとにリージョンとゾーンのリストを提供するために使用されます。これらのリージョンとゾーンは、 StorageClass で指定できる許容値のリストを表します。バックエンドで提供されるリージョンとゾーンのサブセットを含む StorageClasses の場合、 Astra Trident がバックエンドにボリュームを作成します。</block>
  <block id="217d95247b26701da7fd823884d84723" category="paragraph">また ' ストレージ・プールごとに 'upportedTopologies を定義することもできます次の例を参照してください。</block>
  <block id="c6c80256ac468b3d88d7b62d8753f192" category="paragraph">この例では、「 re Gion 」および「 zone 」ラベルはストレージプールの場所を表しています。「 topology.efix/region' 」と「 topology.uns.io/zone 」は、ストレージプールの消費元を決定します。</block>
  <block id="54e204e8e05b6eb24d965741eb977e69" category="section-title">手順 2 ：トポロジを認識するストレージクラスを定義する</block>
  <block id="090f70d385b4a21aa6c8f2a0ca558616" category="paragraph">クラスタ内のノードに提供されるトポロジラベルに基づいて、トポロジ情報を含めるように StorageClasses を定義できます。これにより、作成された PVC 要求の候補となるストレージプール、および Trident によってプロビジョニングされたボリュームを使用できるノードのサブセットが決まります。</block>
  <block id="ecb383148a1bc974cba3ac735a79f4c6" category="paragraph">次の例を参照してください。</block>
  <block id="ab0c7ec9411ede93aa545fbc095c0e75" category="paragraph">上記の StorageClass 定義では、「 volumeBindingMode 」が「 WaitForFirstConsumer 」に設定されます。この StorageClass で要求された PVC は、ポッドで参照されるまで処理されません。また 'allowedTopology' は ' 使用するゾーンと領域を提供しますNetApp-SAN-us-east1StorageClass は、上で定義した「 -backend-us-east1` バックエンド」に PVC を作成します。</block>
  <block id="df340fb31051c975afb3518dfd32e07c" category="section-title">ステップ 3 ： PVC を作成して使用する</block>
  <block id="f98be29d352e7c38a6502e76bbfaf34c" category="paragraph">StorageClass を作成してバックエンドにマッピングすると、 PVC を作成できるようになりました。</block>
  <block id="c4b17c8733f9f36fdc682242d2b64ab2" category="paragraph">以下の例「 PEC 」を参照してください。</block>
  <block id="427e01a8fca484c85a1e8e3a672b999a" category="paragraph">このマニフェストを使用して PVC を作成すると、次のような結果になります。</block>
  <block id="e65f170821e3417d48579a28989a9260" category="paragraph">Trident でボリュームを作成して PVC にバインドするには、ポッド内の PVC を使用します。次の例を参照してください。</block>
  <block id="9b8ff27bceb4601d1f866c4cf39fe449" category="paragraph">この podSpec は 'us-east1` 領域に存在するノード上のポッドをスケジュールするよう Kubernetes に指示し 'us-east1-a' または `us-east1-b' ゾーン内に存在する任意のノードから選択します</block>
  <block id="c93345596f9f82deea04d17ef8c6ca89" category="paragraph">次の出力を参照してください。</block>
  <block id="0be3f6c5ce787eead27ad72578c2d31a" category="section-title">バックエンドを更新して supportedTopologies を追加します</block>
  <block id="476950aea923438779c9544953093cb9" category="paragraph">既存のバックエンドは 'tridentctl backend update を使用して 'upportedTopologies のリストを含むように更新できますこれは、すでにプロビジョニングされているボリュームには影響せず、以降の PVC にのみ使用されます。</block>
  <block id="ded10f93b9e4453980b7009035c63418" category="inline-link">コンテナのリソースを管理</block>
  <block id="47ea3356a13b3f6644e6c05450e9d5e1" category="list-text"><block ref="47ea3356a13b3f6644e6c05450e9d5e1" category="inline-link-rx"></block></block>
  <block id="6370f866cf64618c026027da41bd248e" category="inline-link">ノードセレクタ</block>
  <block id="2a4ad9fc807789134426a1b2babc5733" category="list-text"><block ref="2a4ad9fc807789134426a1b2babc5733" category="inline-link-rx"></block></block>
  <block id="873bf2b9b61a741ce5b7326a3a053489" category="inline-link">アフィニティと非アフィニティ</block>
  <block id="ec5df0a2adb621359563958138462e34" category="list-text"><block ref="ec5df0a2adb621359563958138462e34" category="inline-link-rx"></block></block>
  <block id="e1e08e40036f927a0e660c22aa837f88" category="inline-link">塗料および耐性</block>
  <block id="66b1e0aa9cd6e46c0b85fdf56a15154a" category="list-text"><block ref="66b1e0aa9cd6e46c0b85fdf56a15154a" category="inline-link-rx"></block></block>
  <block id="2941c38dbb7c39c325787067c0540247" category="summary">kubectl' を使用してバックエンド管理操作を実行する方法について説明します</block>
  <block id="20309eb77b701e6c49ca6b99a8f93f90" category="paragraph">「 TridentBackendConfig 」を削除すると、「ネットワークポリシー」に基づいて、 Astra Trident にバックエンドを削除 / 保持するように指示します。バックエンドを削除するには、「削除ポリシー」が「削除」に設定されていることを確認します。「 TridentBackendConfig 」だけを削除するには、「 $eleetionPolicy 」が「 retain 」に設定されていることを確認します。これにより ' バックエンドがまだ存在していることが保証され 'tridentctl' を使用して管理できます</block>
  <block id="3fa37f688874143cd423aabca8075ffb" category="paragraph">Astra Trident は、 TridentBackendConfig が使用していた Kubernetes シークレットを削除しません。Kubernetes ユーザは、シークレットのクリーンアップを担当します。シークレットを削除するときは注意が必要です。シークレットは、バックエンドで使用されていない場合にのみ削除してください。</block>
  <block id="265ab4809f08d248e5045a8638ac7afa" category="paragraph">tridentctl get backend -n trident` または tridentctl get backend -o yaml -n trident` を実行して、存在するすべてのバックエンドのリストを取得することもできます。このリストには 'tridentctl' で作成されたバックエンドも含まれます</block>
  <block id="93700a3ea9dc6d858638cd66cd2f2bfa" category="paragraph">バックエンドを更新する理由はいくつかあります。</block>
  <block id="56cdd71a65518838d73e00276ed6fab1" category="list-text">ストレージシステムのクレデンシャルが変更されている。クレデンシャルを更新するには、「 TridentBackendConfig 」オブジェクトで使用される Kubernetes Secret を更新する必要があります。Astra Trident が、提供された最新のクレデンシャルでバックエンドを自動的に更新次のコマンドを実行して、 Kubernetes Secret を更新します。</block>
  <block id="6ef0ccb954a07e30d4ff894b5256ae30" category="list-text">パラメータ（使用する ONTAP SVM の名前など）を更新する必要があります。この場合 'TridentBackendConfig' オブジェクトは Kubernetes を介して直接更新できます</block>
  <block id="d4609cbe039ed7019e7151718c417bec" category="paragraph">または、次のコマンドを実行して、既存の「 TridentBackendConfig 」 CR に変更を加えます。</block>
  <block id="d38f034e9aa082af3ec19c23caff4b0f" category="paragraph">バックエンドの更新に失敗した場合、バックエンドは最後の既知の設定のまま残ります。ログを表示して原因を確認するには、「 kubectl get tbc &lt;tbc-name&gt; -o yaml -n trident` または「 kubectl describe tbc &lt;tbc-name&gt; -n trident` 」を実行します。</block>
  <block id="5878b59fb3a8430928026b63b5ca336f" category="paragraph">構成ファイルで問題を特定して修正したら、 update コマンドを再実行できます。</block>
  <block id="bee1e2306bc7054ee443dc651eae90de" category="summary">Astra Trident は、一連の Prometheus 指標エンドポイントを提供し、 Astra Trident のパフォーマンスの監視に使用できます。</block>
  <block id="44a004cad6eb7ea8839aaa8754ead178" category="doc">Astra Trident を監視</block>
  <block id="3f8e7343fbab71427901476dc4eb0cf3" category="paragraph">Astra Trident は、 Astra Trident のパフォーマンスを監視するために使用できる一連の Prometheus 指標エンドポイントを提供します。</block>
  <block id="c827f266cf12e05adc1fe95215415abf" category="paragraph">Astra Trident が提供する指標を使用すると、次のことが可能になります。</block>
  <block id="6111d709595b0a106ff313a249eb9d92" category="list-text">Astra Trident の健常性と設定を保持処理が成功した方法と、想定どおりにバックエンドと通信できるかどうかを調べることができます。</block>
  <block id="64dbac0ca36d9b1f6a8cf1e8a0123261" category="list-text">バックエンドの使用状況の情報を調べて、バックエンドでプロビジョニングされているボリュームの数や消費されているスペースなどを確認します。</block>
  <block id="7f6516030964b624d9c71fd9ec7f83dd" category="list-text">利用可能なバックエンドにプロビジョニングされたボリュームの量のマッピングを維持します。</block>
  <block id="e436794bccbe602731bbde7766c1fa49" category="list-text">パフォーマンスを追跡する。Astra Trident がバックエンドと通信して処理を実行するのにどれくらいの時間がかかるかを調べることができます。</block>
  <block id="efe0d75090a22534acabc936f8669994" category="admonition">デフォルトでは 'Trident のメトリックは '/metrics エンドポイントのターゲットポート 8001' に公開されていますこれらの指標は、 Trident のインストール時にデフォルトで * 有効になります。</block>
  <block id="1ed994b9754ad078cfc46aaf3dbf3a5d" category="list-text">Astra Trident がインストールされた Kubernetes クラスタ</block>
  <block id="eb8bfd69bb88378a6f4d987811890ce6" category="inline-link">コンテナ化された Prometheus 環境</block>
  <block id="42ae2e91a939ffa9bbda53c10bf5f89f" category="inline-link">ネイティブアプリケーション</block>
  <block id="050899631250104f17d24b27cc8a12e5" category="list-text">Prometheus インスタンス。これは a である場合もある<block ref="bd5b9e4bd7b88b90afb221fb760a777c" category="inline-link-rx"></block> または、 Prometheus をとして実行することもできます<block ref="3f1d5beaea78c0fd8cb397fbeb1c88bd" category="inline-link-rx"></block>。</block>
  <block id="68276ca40dfbfd36de911402152fa452" category="section-title">手順 1 ： Prometheus ターゲットを定義する</block>
  <block id="84c49e3c77b51ea186020145ae78103f" category="paragraph">Prometheus ターゲットを定義して指標を収集し、 Astra Trident が管理するバックエンド、作成するボリュームなどの情報を取得する必要があります。これ<block ref="dc7964965bf1b3af43b28caf6231e550" category="inline-link-rx"></block> Prometheus と Grafana を Astra Trident とともに使用して指標を取得する方法について説明します。ブログでは、 Kubernetes クラスタでオペレータとして Prometheus を実行する方法と、 Astra Trident のメトリックを取得する ServiceMonitor を作成する方法について説明しています。</block>
  <block id="c33638e0de87536b08eeb94264671d0f" category="section-title">手順 2 ： Prometheus ServiceMonitor を作成します</block>
  <block id="81a21a88b42cd5c83d149a080a627bad" category="paragraph">Trident のメトリックを使用するには、「 trident-csi 」サービスを監視し、「 m etrics 」ポートを監視する Prometheus ServiceMonitor を作成する必要があります。ServiceMonitor のサンプルは次のようになります。</block>
  <block id="bfc1ad0fa725ea87ea056b2f2e8b6fe8" category="paragraph">この ServiceMonitor 定義は 'trident-csi サービスから返されたメトリックを取得し ' 特にサービスの 'm etrics エンドポイントを探しますその結果、 Prometheus は Astra Trident の指標を理解するように設定されました。</block>
  <block id="07338294bd70ea1e7710a574d7c8e2ce" category="paragraph">kubelet は、 Astra Trident から直接利用できるメトリックに加えて、独自のメトリック・エンドポイントを通じて多くの「 kubeet_volume_* 」メトリックを公開しています。Kubelet では、接続されているボリュームに関する情報、およびポッドと、それが処理するその他の内部処理を確認できます。を参照してください<block ref="3f1f0977d0df3e8b343e403140284021" category="inline-link-rx"></block>。</block>
  <block id="1db2022a8a8de5d612eda8e3be0e1065" category="section-title">ステップ 3 ： PrompQL を使用して Trident 指標を照会する</block>
  <block id="f5142e19a3b1edf809fce9d3b6aefc05" category="paragraph">PrompQL は、時系列データまたは表データを返す式を作成するのに適しています。</block>
  <block id="8c6fb1be2521fd16337c11c626672678" category="paragraph">次に、 PrompQL クエリーのいくつかを示します。</block>
  <block id="b214fd0009b3929347f097bd843f0bfd" category="section-title">Trident の健常性情報を取得</block>
  <block id="69fc54b5fac064131422d41948eb77ed" category="list-text">** Astra Trident からの HTTP 2XX 応答の割合 **</block>
  <block id="f43362a8efc950ece8c14d4e5faddfa4" category="list-text">** Astra Trident からのステータスコードによる REST 応答の割合 **</block>
  <block id="e69d9a06025140f38adabb6f709f6e5b" category="list-text">** Astra Trident によって実行された処理の平均時間（ミリ秒） **</block>
  <block id="0505e17dec1e849391ad96f558fa613a" category="section-title">Astra Trident の使用状況に関する情報を入手</block>
  <block id="f160a52d617adf6e6c5d379a9b8bca89" category="list-text">** 平均体積サイズ **</block>
  <block id="eb978bfe01ec0c72ad231f3953e304a2" category="list-text">** 各バックエンドによってプロビジョニングされた合計ボリューム容量 **</block>
  <block id="5f735ae12eafbe476178928f4645475b" category="section-title">個々のボリュームの使用状況を取得する</block>
  <block id="ee0898e9f0caa503f3eaa39c919f4c53" category="admonition">これは、 kubelet 指標も収集された場合にのみ有効になります。</block>
  <block id="0bc301d2423b2ffaa38a5e275e4ec6f9" category="list-text">** 各ボリュームの使用済みスペースの割合 **</block>
  <block id="8516d75df966e595bd1b5491acd01515" category="section-title">Astra Trident AutoSupport の計測データ</block>
  <block id="6f4ddec0f501988d2b0315a77c87eeaa" category="paragraph">デフォルトでは、 Astra Trident は Prometheus 指標と基本バックエンド情報を毎日定期的にネットアップに送信します。</block>
  <block id="5276683815b670b0addfb8c8a45bbb41" category="list-text">Astra Trident が Prometheus 指標と基本バックエンド情報をネットアップに送信しないようにするには、 Astra Trident のインストール時に「 --silence -autosupport 」フラグを渡します。</block>
  <block id="ca0f9a86ca33f1d6baa9051bd7f4ed21" category="inline-link">プライバシーポリシー</block>
  <block id="5b58783cbe6d85941bac008d83d3f5c8" category="list-text">Astra Trident は 'tridentctl send AutoSupport を介してコンテナ・ログをオンデマンドでネットアップ・サポートに送信することもできますAstra Trident をトリガーしてログをアップロードする必要があります。ログを送信する前に、ネットアップのに同意する必要があります<block ref="91b6c0438017ba5fa21c286a96d5acb4" category="inline-link-rx"></block>。</block>
  <block id="63b95d84cf55d169b2592f3ac621055f" category="list-text">指定しないと、 Astra Trident は過去 24 時間からログを取得します。</block>
  <block id="5224919a4ae5ccf610fb0ee74e4e7a94" category="inline-link">Trident AutoSupport の略</block>
  <block id="18bc3bf6223e289af8243b039cd8d702" category="list-text">ログ保持期間は '--since ' フラグで指定できますたとえば 'tridentctl は AutoSupport --since =1h` を送信しますこの情報は、 Astra Trident と一緒にインストールされた 'trident-autosupport' コンテナを介して収集および送信されます。コンテナイメージは、で取得できます<block ref="1b00454f0ab35dcec2ee1a0061efc6e5" category="inline-link-rx"></block>。</block>
  <block id="53084cad3d11df800502598c11e2d10b" category="inline-link">EULA</block>
  <block id="b9a52e8d1e9b14b8825c6ea01c0ce6d6" category="list-text">Trident AutoSupport は、個人情報（ PII ）や個人情報を収集または送信しません。それにはが付いています<block ref="173a360b412944768c2ab13e6c8fd1c7" category="inline-link-rx"></block> これは Trident コンテナイメージ自体には該当しません。ネットアップのデータセキュリティと信頼に対する取り組みの詳細を確認できます<block ref="8470ff535916bda3f4ea4723647a7135" category="inline-link-rx"></block>。</block>
  <block id="89f0f2832f60f480805faf638848c5b7" category="paragraph">Astra Trident から送信されるペイロードの例を次に示します。</block>
  <block id="d2ec86f126f845e79aff07e70bf89472" category="list-text">AutoSupport メッセージは、ネットアップの AutoSupport エンドポイントに送信されます。プライベートレジストリを使用してコンテナイメージを格納している場合は '--image_registry' フラグを使用できます</block>
  <block id="86c5a11fba83815412aec79f67f2d276" category="list-text">インストール YAML ファイルを生成してプロキシ URL を設定することもできます。これは 'tridentctl install --generate-custom-yaml を使用して YAML ファイルを作成し 'trident-deployment.yaml の trident-autosupport コンテナに --proxy-url 引数を追加することによって実行できます</block>
  <block id="46ab735110312d196d5265e534453cba" category="section-title">Astra Trident の指標を無効化</block>
  <block id="8ec47dab227d183e0d3ad0cd529d289b" category="paragraph">** メトリックがレポートされないようにするには '--generate-custom-yaml' フラグを使用してカスタム YAML を生成し ' これらを編集して 'trident-main' コンテナに対して --metrics フラグが呼び出されないようにします</block>
  <block id="3f82682ace484ae8a94f6b713a856a1f" category="summary">提供されている設定例を使用して、 Trident インストールのバックエンドとして Azure NetApp Files を設定する方法を説明します。</block>
  <block id="28b0abcecaf7a63edb46e4e137337018" category="doc">Azure NetApp Files バックエンドを設定します</block>
  <block id="f972fcadaebc8b30143815ae86f44966" category="paragraph">提供されている構成例を使用して、 Azure NetApp Files （ ANF ）を Astra Trident インストールのバックエンドとして設定する方法を説明します。</block>
  <block id="573fa5dc2f7f8efb65f65f94f56fb8ea" category="admonition">Azure NetApp Files サービスでは、 100GB 未満のボリュームはサポートされません。100 GB のボリュームが小さい場合は、 Trident が自動的に作成します。</block>
  <block id="07e7004c50a67a3e4e366b4ca1c28e3d" category="paragraph">を設定して使用します<block ref="24a785881ff1cdf191a2239811dc9597" category="inline-link-rx"></block> バックエンドには次のものが必要です。</block>
  <block id="66d640a9a050b05e6a914cbcd88a1e2e" category="list-text">Azure NetApp Files が有効な Azure サブスクリプションのスクリプト ID 。</block>
  <block id="b12fb354025b3dfa01277964eb72c060" category="inline-link">アプリケーション登録</block>
  <block id="26e3a81fff63a114b3f66931fe9817bd" category="list-text">「 tenantID 」、「 clientID 」、「 clientSecret 」を「」から選択します<block ref="8cf7d0e47908a64c9538530ae13f3b17" category="inline-link-rx"></block> Azure Active Directory で、 Azure NetApp Files サービスに対する十分な権限がある。App Registration では、 Azure で事前定義されている「 Owner 」または「 Contributor 」の役割を使用する必要があります。</block>
  <block id="3cedfb797d3e1bc073ba2b0b4d2502cf" category="inline-link">Azure に関するドキュメント</block>
  <block id="0d379fc2fdd52ac2845c4a58f8ab28b3" category="admonition">Azure の組み込みロールの詳細については、を参照してください<block ref="b2e35876b943de7ace62c0922ab24aca" category="inline-link-rx"></block>。</block>
  <block id="f494e4df0fff53e809d6563f8ec1782f" category="inline-link">委任されたサブネット</block>
  <block id="4a836a0efc98ecae9af9c3407923eefe" category="inline-link">クイックスタートガイド</block>
  <block id="7b0fbaf9fee0388fe8032c97b8257fdc" category="list-text">Azure NetApp Files を初めて使用する場合や新しい場所で使用する場合は、いくつかの初期設定が必要です。を参照してください<block ref="713c3fd99272dda043016179a5584f00" category="inline-link-rx"></block>。</block>
  <block id="4a56a2a81941c5206604b30f5115b1ba" category="paragraph">Trident は、バックエンド構成（サブネット、仮想ネットワーク、サービスレベル、場所）に基づいて、要求された場所で利用可能な容量プールに ANF ボリュームを作成し、要求されたサービスレベルとサブネットに対応します。</block>
  <block id="0b0b881d3a43e5782867f1e6ea7ae219" category="admonition">Astra Trident 21.04.0 以前では、手動 QoS 容量プールはサポートされていません。</block>
  <block id="3e566c45584d66d2ab94c2108f7c3488" category="cell">「 azure-NetApp-files 」</block>
  <block id="9dd18f393b35bf22098cf53e9c1c7fa6" category="cell">ドライバ名 + "_" + ランダムな文字</block>
  <block id="665120e71659a6a32f990a3181688d1b" category="cell">' スクリプト ID' 。</block>
  <block id="b2ad290b003ccdce2a538f49a795f281" category="cell">Azure サブスクリプションのサブスクリプション ID</block>
  <block id="e07778d10cef90430253876cba7157e4" category="cell">「 tenantID 」。</block>
  <block id="2975d48342e428a3b18123f85ed0ecb5" category="cell">アプリケーション登録からのテナント ID</block>
  <block id="949ba1045db0d48bd189044e672d8097" category="cell">「 clientID 」。</block>
  <block id="56ef18e84ab36c2bdc4546e6a2756673" category="cell">「 clientSecret 」を入力します。</block>
  <block id="85f484f0892a96287b6224ddd3c5fbb2" category="cell">アプリケーション登録からのクライアントシークレット</block>
  <block id="1c65f12b4d30114593cc01384938cb5f" category="cell">「標準」、「プレミアム」、「ウルトラ」のいずれかです</block>
  <block id="b21b08bb55acd409e40e9b45edd3bb34" category="cell">"" （ランダム）</block>
  <block id="fc7dd5b65d21ee7272a067c9404a8498" category="cell">「ロケーション」</block>
  <block id="8fce436e09a08bd124727374d3e1d1d5" category="cell">新しいボリュームを作成する Azure の場所の名前</block>
  <block id="32ef1af5ccda7c2f6d85e55f5034f105" category="cell">「 virtualNetwork 」</block>
  <block id="10afd0959cfa4a53bce9c8d395c40c48" category="cell">委任されたサブネットを持つ仮想ネットワークの名前</block>
  <block id="ec045173f4df65e5e8951c3ca9579945" category="cell">「サブネット」</block>
  <block id="0b8deda0ecc5080e8c0ed0b475e983ba" category="cell">「 icrosoft.Netapp/volumes` 」に委任されたサブネットの名前</block>
  <block id="9440dab4b1faaad2a053d658b9e70623" category="admonition">PVC の作成時に「 No capacity pools found 」エラーが発生した場合、アプリケーション登録に必要な権限とリソース（サブネット、仮想ネットワーク、容量プール）が関連付けられていない可能性があります。Astra Trident は、デバッグが有効なときにバックエンドが作成されたときに、検出した Azure リソースをログに記録します。適切なロールが使用されているかどうかを確認してください。</block>
  <block id="e5ac299cc3b14e1fac29518569ca9bb1" category="cell">新しいボリュームのデフォルトサイズ</block>
  <block id="dbb358dadb4da7e240eeaa0513a064e1" category="admonition">ANF バックエンドに作成されたすべてのボリュームに対して、ストレージプールに含まれるすべてのラベルが、プロビジョニング時にストレージボリュームにコピーされます。ストレージ管理者は、ストレージプールごとにラベルを定義し、ストレージプール内に作成されたすべてのボリュームをグループ化できます。これにより、バックエンド構成で提供されるカスタマイズ可能な一連のラベルに基づいてボリュームを簡単に区別できます。</block>
  <block id="e43b3577dd4b74a4cfa994a56e8138b8" category="paragraph">この構成は、 ANF の利用を開始して何を試してみるときに理想的ですが、実際には、プロビジョニングするボリュームの範囲をさらに設定することを検討しています。</block>
  <block id="725ae241ec74eed978f0b099030236b8" category="section-title">例 3 ：高度な設定</block>
  <block id="a83f4a534ccef7ac1d209fb0015cd907" category="paragraph">このバックエンド構成は、ボリュームの配置を単一のサブネットにまで適用する手間をさらに削減し、一部のボリュームプロビジョニングのデフォルト設定も変更します。</block>
  <block id="198188b722e4e8ee2004b3bd2a9348ed" category="paragraph">このバックエンド構成では、 1 つのファイルに複数のストレージプールを定義します。これは、異なるサービスレベルをサポートする複数の容量プールがあり、それらを表すストレージクラスを Kubernetes で作成する場合に便利です。</block>
  <block id="db471f3119123601d175fe8d2ef2dd0a" category="paragraph">以下の「 torageClass 」定義は、上記のストレージプールを参照しています。「 parameters.selector` 」フィールドを使用すると、ボリュームのホストに使用される仮想プールを「 S torageClass 」ごとに指定できます。ボリュームには、選択したプールで定義された要素があります。</block>
  <block id="0cc7642bbaf969ea355ea12764841c91" category="summary">ONTAP NAS ドライバを作成して Astra Trident インストールで使用する方法をご確認ください。このセクションでは、バックエンド構成の例と、バックエンドをストレージクラスにマッピングする方法を詳しく説明します。</block>
  <block id="a0f3a965c12688befda99da850903dcb" category="cell">「 autoExportPolicy 」を参照してください</block>
  <block id="4a5695a4c9eea28a296b0b2f210a15f8" category="cell">エクスポートポリシーの自動作成と更新を有効にする [ ブーリアン ]</block>
  <block id="b4ad0dff08149092bc3e4b16572af575" category="cell">「 autoExportCI` 」</block>
  <block id="af7117fef2444ab632b393ea31e722b8" category="cell">「 autoExportPolicy 」が有効な場合に、 Kubernetes のノード IP をフィルタリングするための CIDR のリスト</block>
  <block id="e537a193eb90bd46a645ce750bb5f3fc" category="cell">[0.0.0.0/0] 、 [::/0]</block>
  <block id="08b29ae4ea305dd80d0c3a96da64e57e" category="cell">NFS マウントオプションをカンマで区切ったリスト</block>
  <block id="07f6b23cad3d6da54012935ff972affe" category="cell">qtreesPerFlexvol`</block>
  <block id="a13306f726fdf72d2d992a7ebdc63b1b" category="cell">FlexVol あたりの最大 qtree 数。有効な範囲は [50 、 300] です。</block>
  <block id="28326357ec2f8c06e01271c4ee2201f1" category="cell">200</block>
  <block id="c8725b273a5d1a37cc4d2ceafe222f96" category="admonition">バックエンドを作成するときは、作成後に「 dataLIF' 」と「 toragePrefix 」を変更できないことに注意してください。これらのパラメータを更新するには、新しいバックエンドを作成する必要があります。</block>
  <block id="118ec9e23f24f4ea0355c0a8fc7644f8" category="paragraph">「管理 LIF 」オプションには完全修飾ドメイン名（ FQDN ）を指定できます。「 atalif 」オプションに FQDN を指定した場合も、 NFS のマウント処理に FQDN が使用されます。こうすることで、ラウンドロビン DNS を作成して、複数のデータ LIF 間で負荷を分散することができます。</block>
  <block id="3de9530f105c3bf7d417c73170a03e5a" category="paragraph">すべての ONTAP ドライバ用の「管理 LIF 」を IPv6 アドレスに設定することもできます。Astra Trident には '--use-ipv6' フラグを付けてインストールしてください角かっこで囲まれた「管理 LIF 」 IPv6 アドレスを定義するように注意する必要があります。</block>
  <block id="06390865e9ec240a0e295db286d7bef7" category="paragraph">CSI Trident では、「 autoExportPolicy 」オプションおよび「 autoExportCIDRs 」オプションを使用して、エクスポートポリシーを自動的に管理できます。これはすべての ONTAP-NAS-* ドライバでサポートされています。</block>
  <block id="e98c128dda80ebab208244e4f62e7372" category="paragraph">「 ONTAP-NAS-エコノミー 」ドライバの場合、「 limitVolumeSize 」オプションを使用すると、 qtree および LUN 用に管理するボリュームの最大サイズも制限されます。「 qtreesPerFlexvol 」オプションを使用すると、 FlexVol あたりの最大 qtree 数をカスタマイズできます。</block>
  <block id="92e660f52759e323dbc0ec71541a2e9e" category="paragraph">マウントオプションを指定するには 'nfsMountOptions' パラメータを使用しますKubernetes 永続ボリュームのマウントオプションは通常ストレージクラスで指定されますが、ストレージクラスでマウントオプションが指定されていない場合、 Astra Trident はストレージバックエンドの構成ファイルで指定されているマウントオプションを使用します。ストレージクラスまたは構成ファイルにマウントオプションが指定されていない場合、 Astra Trident は関連付けられた永続的ボリュームにマウントオプションを設定しません。</block>
  <block id="7587c806a60b3f88688668f32e0b766c" category="admonition">Astra Trident は 'ONTAP-NAS' および 'ONTAP-NAS-flexgroup を使用して作成されたすべてのボリュームの Comments フィールドにプロビジョニングラベルを設定します使用するドライバに基づいて ' コメントは FlexVol (`ONTAP-NAS') または FlexGroup (`ONTAP-NAS-flexgroup ') に設定されますTrident が、ストレージプール上にあるすべてのラベルを、プロビジョニング時にストレージボリュームにコピーします。ストレージ管理者は、ストレージプールごとにラベルを定義し、ストレージプール内に作成されたすべてのボリュームをグループ化できます。これにより、バックエンド構成で提供されるカスタマイズ可能な一連のラベルに基づいてボリュームを簡単に区別できます。</block>
  <block id="831924abd31e90baedabed887dbfc24c" category="cell">アダプティブ QoS ポリシーグループ：作成したボリュームに割り当てます。ストレージプール / バックエンドごとに QOSPolicy または adaptiveQosPolicy のいずれかを選択します。経済性に影響する ONTAP - NAS ではサポートされません。</block>
  <block id="3e9a232d025270ed6767c385b8291871" category="cell">新しいボリュームのモード</block>
  <block id="2ad2c2d9206a1be7e744bb13b2b126dd" category="cell">777</block>
  <block id="7ad68fdac2eac069eb8ed0fc45b0fb74" category="cell">Snapshot ディレクトリ</block>
  <block id="2907de5eba980e910513008165ea2c2b" category="cell">「 .snapshot 」ディレクトリの表示を制御します</block>
  <block id="c1a0e97f953c948568aed6c134fc9711" category="cell">使用するエクスポートポリシー</block>
  <block id="f7f695c763ad0e0ba03c2ff9cbcfcb3d" category="cell">securityStyle の追加</block>
  <block id="06602e99c8d46d601029e6dd0b37e3f8" category="paragraph">「 ONTAP-NAS' 」と「 ONTAP-NAS-flexgroups' では、 Astra Trident は新しい計算を使用して、 FlexVol がスナップショット予約の割合と PVC で正しくサイズ設定されるようにします。ユーザが PVC を要求すると、 Astra Trident は、新しい計算を使用して、より多くのスペースを持つ元の FlexVol を作成します。この計算により、ユーザは要求された PVC 内の書き込み可能なスペースを受信し、要求されたスペースよりも少ないスペースを確保できます。v21.07 より前のバージョンでは、ユーザが PVC を要求すると（ 5GiB など）、 snapshotReserve が 50% に設定されている場合、書き込み可能なスペースは 2.5GiB のみになります。これは、ユーザが要求したボリューム全体が「 SnapshotReserve 」であるためです。Trident 21.07 では、ユーザが要求するのは書き込み可能なスペースであり、 Astra Trident は「 napshotReserve 」の値をボリューム全体の割合で定義します。これは「 ONTAP-NAS-エコノミー 」には適用されません。この機能の仕組みについては、次の例を参照してください。</block>
  <block id="86ec808b80973d24eadfc617926f534e" category="paragraph">計算は次のとおりです。</block>
  <block id="28ad7be76b350116bde3ae04e5f94a60" category="paragraph">snapshotReserve = 50% 、 PVC 要求 = 5GiB の場合、ボリュームの合計サイズは 2/0.5 = 10GiB であり、使用可能なサイズは 5GiB であり、これが PVC 要求で要求されたサイズです。volume show コマンドは ' 次の例のような結果を表示する必要があります</block>
  <block id="daabb7db82ac9f3f074671a1185c462e" category="paragraph">以前のインストールからの既存のバックエンドは、 Astra Trident のアップグレード時に前述のようにボリュームをプロビジョニングします。アップグレード前に作成したボリュームについては、変更が反映されるようにボリュームのサイズを変更する必要があります。たとえば、「 napshotReserve 」が 50 であった 2GiB PVC の場合、ボリュームは書き込み可能なスペースが 1GiB であると考えられていました。たとえば、ボリュームのサイズを 3GiB に変更すると、アプリケーションの書き込み可能なスペースが 6GiB のボリュームで 3GiB になります。</block>
  <block id="f35c0fe4b6581c16866c964cef229bfa" category="admonition">ネットアップ ONTAP で Trident を使用している場合は、 IP アドレスではなく LIF の DNS 名を指定することを推奨します。</block>
  <block id="acf031eeb31936d30314a2d2a698e85b" category="section-title">証明書ベースの認証を使用する ONTAP - NAS ドライバ</block>
  <block id="89e5db56c8bbbfc3f8f2325201c46450" category="section-title">ONTAP - NAS ドライバと auto エクスポートポリシーが設定されています</block>
  <block id="8c35a9f7d631f51e05811b36617db641" category="paragraph">この例は、動的なエクスポートポリシーを使用してエクスポートポリシーを自動的に作成および管理するように Astra Trident に指示する方法を示しています。これは「 ONTAP-NAS-エコノミー 」と「 ONTAP-NAS-flexgroup 」ドライバで同様に機能します。</block>
  <block id="97cf2271125e9ece6c4bb85c7e38b6f6" category="section-title">ONTAP-NAS-flexgroup ドライバ</block>
  <block id="0178beee313066e023eef8c258ed5bfc" category="section-title">IPv6 を使用した ONTAP - NAS ドライバ</block>
  <block id="e3d163236efea4513c9df89a9c1be381" category="section-title">ONTAP - NAS - エコノミードライバ</block>
  <block id="412b252fa44d1a73e3e7bf22113f99a2" category="section-title">ONTAP - NAS ドライバ</block>
  <block id="141da5e3f576179cbf2f6506b07ef538" category="summary">Astra Trident の 20.01 リリースから、 Kubernetes レイヤで永続的ボリューム（ PVS ）の Snapshot を作成できるようになりました。この Snapshot を使用して、 Astra Trident で作成されたボリュームのポイントインタイムコピーを管理し、追加のボリューム（クローン）の作成をスケジュールできます。</block>
  <block id="332138092a1597c4d5e69679199e490c" category="inline-link">リリースのブログ</block>
  <block id="006b05a472974308122f7f05ef147e80" category="admonition">この機能は Kubernetes 1.17 （ベータ版）から提供され、 1.20 から GA になります。ベータ版から GA 版への移行に伴う変更点については、を参照してください<block ref="02a1c904d0035e03c61e261dbe622345" category="inline-link-rx"></block>。GA への卒業とともに 'v1' API バージョンが導入され 'v1beta` スナップショットと下位互換性があります</block>
  <block id="e197a057bfe0ae792bb2b9ce9a78761e" category="list-text">ボリューム Snapshot を作成するには、外部の Snapshot コントローラとカスタムリソース定義（ CRD ）を作成する必要があります。使用されている Kubernetes Orchestrator （例： Kubeadm 、 GKE 、 OpenShift ）の役割を担っています。</block>
  <block id="3923fe4170ab3f204b53d4caf958045f" category="paragraph">次のように、外部スナップショットコントローラとスナップショット作成 SSD を作成できます。</block>
  <block id="7737ff29322b0df9949b5d44ad3809a9" category="list-text">ボリューム Snapshot の作成：</block>
  <block id="7a993e4667899d0bca97d13e0bc37568" category="list-text">目的のネームスペースにスナップショットコントローラを作成します。以下の YAML マニフェストを編集して名前空間を変更します。</block>
  <block id="26c4fe55fc424c7b41b517701f54f074" category="inline-link">webhook を検証しています</block>
  <block id="46b189b23dfbd5f3f622a1c04590b05e" category="admonition">CSI Snapshotter は、を提供します<block ref="927ab0e919f8034deab1249bed53a289" category="inline-link-rx"></block> ユーザーが既存の v1beta1 スナップショットを検証し、有効なリソースオブジェクトであることを確認できるようにするため。検証中の webhook は、無効なスナップショットオブジェクトに自動的にラベルを付け、今後無効なオブジェクトが作成されないようにします。検証する webhook は Kubernetes Orchestrator によって導入されます。検証するウェブフックを手動で配備する手順を参照してください<block ref="07cb3cdda0599ec9f2e82062ecd12e82" category="inline-link-rx"></block>。無効なスナップショットマニフェストの例を探します<block ref="bceda34f0850fc68d82f08741abbc69e" category="inline-link-rx"></block>。</block>
  <block id="f535be08d3997f1a801b132862d99a5c" category="paragraph">以下に、スナップショットの操作に必要な構成要素と、スナップショットの作成方法および使用方法の例を示します。</block>
  <block id="551730f3a084f9dee63029647e815d3a" category="section-title">ステップ 1 ：ボリューム Snapshot クラスをセットアップする</block>
  <block id="d7ca7162c394dee752c35d07a92823da" category="inline-link-macro">'VolumeSnapshotClass'</block>
  <block id="b91e58d7d80a51e4fa86b9ab27dca505" category="paragraph">ボリューム Snapshot を作成する前に、をセットアップします <block ref="c740b46915208e935cb2017421ec0264" category="inline-link-macro-rx"></block>。</block>
  <block id="4744d2c82c1c470ab40280b2ebba0c08" category="paragraph">「川」はアストラトライデントの CSI ドライバを指しています。「保持ポリシー」には「削除」または「保持」を指定できます。「 Retain 」に設定すると、「 VolumeSnapshot 」オブジェクトが削除されても、ストレージ・クラスタ上の基盤となる物理スナップショットは保持されます。</block>
  <block id="0ab6380edce0d0e7b8538ebf3215ebbd" category="section-title">手順 2 ：既存の PVC のスナップショットを作成します</block>
  <block id="ef55488b02c4b0173eb6f7bb867db086" category="paragraph">スナップショットは 'PVC1' という名前の PVC 用に作成されており ' スナップショットの名前は PVC1-snap' に設定されています</block>
  <block id="501470eb266ff6637de993e3f193ba40" category="paragraph">これにより 'VolumeSnapshot' オブジェクトが作成されましたVolumeSnapshot は PVC に似ており、実際のスナップショットを表す「 VolumeSnapshotContent 」オブジェクトに関連付けられています。</block>
  <block id="320e7c242b569ab5bbdaa490b3df817e" category="paragraph">「 PVC1-SNAP 」ボリューム Snapshot の「 VolumeSnapshotContent 」オブジェクトを指定することができます。</block>
  <block id="b3841b02d7da01fde480332e3295a08e" category="paragraph">「スナップショットコンテンツ名」は、このスナップショットを提供する VolumeSnapshotContent オブジェクトを識別します。' 使用準備完了 ' パラメータは ' スナップショットを使用して新しい PVC を作成できることを示します</block>
  <block id="7957320b126678e9b713ef146b3ac009" category="section-title">手順 3 ：ボリューム Snapshot から PVC を作成します</block>
  <block id="4d780b57cad08f64bcd1ea7351a15588" category="paragraph">スナップショットを使用して PVC を作成する例は、次のとおりです。</block>
  <block id="2592284f87bba60e4c05337a134ef047" category="paragraph">「 dataSource 」は、「 PVC1-SNAP 」という名前のボリューム Snapshot をデータのソースとして使用して PVC を作成する必要があることを示します。このコマンドを実行すると、 Astra Trident が Snapshot から PVC を作成するように指示します。作成された PVC は、ポッドに接続して、他の PVC と同様に使用できます。</block>
  <block id="bda01e3aa44c411129a6fbf29445bfb4" category="admonition">スナップショットが関連付けられている永続ボリュームを削除すると、対応する Trident ボリュームが「削除状態」に更新されます。Astra Trident ボリュームを削除するには、ボリュームの Snapshot を削除する必要があります。</block>
  <block id="fab3fcd54585164dbc9d7adf57f8e3d9" category="list-text"><block ref="fab3fcd54585164dbc9d7adf57f8e3d9" category="inline-link-macro-rx"></block></block>
  <block id="c740b46915208e935cb2017421ec0264" category="list-text"><block ref="c740b46915208e935cb2017421ec0264" category="inline-link-macro-rx"></block></block>
  <block id="3d79668ab3683a20086b2953dd541cfc" category="summary">バックエンドは、 Astra Trident とストレージシステムの関係を定義します。Trident がストレージシステムとの通信方法を Trident から指示し、 Astra Trident がボリュームをプロビジョニングする方法も解説します。Astra Trident は、ストレージクラスが定義した要件に合わせて、バックエンドからストレージプールを自動的に提供します。お使いのストレージシステムのタイプに基づいたバックエンドの設定の詳細については、こちらを参照してください。</block>
  <block id="87dc0337d3ded2211d9b01c32e22d90d" category="doc">バックエンドを設定</block>
  <block id="2acbb5dd492d792d00383b0c76ade4ad" category="list-text"><block ref="2acbb5dd492d792d00383b0c76ade4ad" category="inline-link-macro-rx"></block></block>
  <block id="bf50e8af5395f90aa84ae77d9267a6d6" category="inline-link-macro">AWS バックエンド用に Cloud Volumes Service を設定します</block>
  <block id="cda28963ed4e2275760c1b26ef6c78e0" category="list-text"><block ref="cda28963ed4e2275760c1b26ef6c78e0" category="inline-link-macro-rx"></block></block>
  <block id="252e63ff646a0204671ca04a26b88e06" category="inline-link-macro">Cloud Volumes Service for Google Cloud Platform バックエンドを設定します</block>
  <block id="c00b6e370d4496e06d2135275a992af5" category="list-text"><block ref="c00b6e370d4496e06d2135275a992af5" category="inline-link-macro-rx"></block></block>
  <block id="b1064b6f7a5906eac23601dc24ba95a8" category="list-text"><block ref="b1064b6f7a5906eac23601dc24ba95a8" category="inline-link-macro-rx"></block></block>
  <block id="d7f015aa2f1d488e17e175dac6de3149" category="list-text"><block ref="d7f015aa2f1d488e17e175dac6de3149" category="inline-link-macro-rx"></block></block>
  <block id="24ca391029d6df294c5d5b8f1fe5b4eb" category="summary">ONTAP NAS ドライバを使用した ONTAP バックエンドの設定について説明します。</block>
  <block id="df3afb1ce4cf5592326d7f536313cbc9" category="list-text"><block ref="df3afb1ce4cf5592326d7f536313cbc9" category="inline-link-macro-rx"></block></block>
  <block id="6a60ddae29750feed1e12421a92ea824" category="list-text"><block ref="6a60ddae29750feed1e12421a92ea824" category="inline-link-macro-rx"></block></block>
  <block id="0f5dc79c8003190ab8f758b1748ba0d8" category="summary">ネットアップは、製品やサービスの改善と強化を継続的に行っています。最新バージョンの Astra Trident の機能、拡張機能、バグ修正の一部を以下に示します。</block>
  <block id="5dd03e8d039863e563e049be198c3fd3" category="doc">リリースノート</block>
  <block id="2e6ce374ac42de81aea6a3d682b92e33" category="paragraph">リリースノートでは、最新バージョンの Astra Trident の新機能、拡張機能、およびバグ修正に関する情報を提供しています。</block>
  <block id="e4c4d344a524d21b898e4d04b6539aa7" category="admonition">インストーラ zip ファイルに含まれている Linux の tridentctl バイナリは ' テスト済みでサポートされているバージョンですzip ファイルの「 /extras 」部分に含まれている「 macos 」バイナリはテストされておらず、サポートされていないことに注意してください。</block>
  <block id="41cf959adc98386b54829d71a6ed5d37" category="section-title">の修正</block>
  <block id="a6e7aa999ba654c6844672ae59f5137a" category="list-text">XFS ボリュームのクローンをソースボリュームと同じノードにマウントできない固定問題（ GitHub 問題 514 ）</block>
  <block id="4a921ae3eb8c2695dabd4044ff81141a" category="list-text">Astra Trident がシャットダウン時に致命的なエラーを記録した修正版問題（ GitHub 問題 597 ）。</block>
  <block id="852acc81ea6fa7363b73c5313002de83" category="list-text">Kubernetes 関連の修正：</block>
  <block id="f94cc5159119c43751041256941deb2c" category="list-text">スナップショットを作成するときに 'ONTAP-NAS' および 'ONTAP-NAS-flexgroup ドライバ（ GitHub 問題 645 ）を使用して ' ボリュームの使用済み領域を最小リストアサイズとして返します</block>
  <block id="742ce2e3c9c8496323bd1176af2838a4" category="list-text">ボリュームのサイズ変更後に 'Failed to expand filesystem エラーがログに記録された問題を修正しました (GitHub 問題 560)</block>
  <block id="9a445ecbad9af70a94bd7558ba95e059" category="list-text">POD が「 Terminating 」状態で停止する可能性がある固定問題（ GitHub 問題 572 ）。</block>
  <block id="4f81c320a621b8c9d81c7334f2cffc71" category="list-text">「 ONTAP-SAN-エコノミー 」問題がスナップショット FlexVol （ GitHub 533 ）でいっぱいになる場合があるという問題を修正しました。</block>
  <block id="169c3be63dd22b315ed7884e246338de" category="list-text">異なるイメージを持つ固定カスタム YAML インストーラ問題（ GitHub 問題 613 ）。</block>
  <block id="1077a1a91a96498c2f56bc630e632eee" category="list-text">Snapshot サイズの計算方法を固定（ GitHub 問題 611 ）。</block>
  <block id="fe705e5b02638736087c9fd97b2c4952" category="list-text">問題は修正され、 Astra Trident のすべてのインストーラが OpenShift としてプレーン Kubernetes を識別できるようになりました（ GitHub 問題 639 ）。</block>
  <block id="27b76ffa775f907a1fd51f21a669551b" category="list-text">Kubernetes API サーバにアクセスできない場合に、 Trident オペレータが更新を停止するよう修正しました（ GitHub 問題 599 ）。</block>
  <block id="c1748037d10cffabb8e95e4ccf77c613" category="section-title">拡張機能</block>
  <block id="1f9e922b6eff6cb06fca1ed9137eed38" category="list-text">GCP - CVS パフォーマンスボリュームに対する「 unixPermissions 」オプションのサポートが追加されました。</block>
  <block id="294b850a76a040c20913e76c2fe6589a" category="list-text">GCP でのスケール最適化 CVS ボリュームのサポートが 600GiB から 1TiB に追加されました。</block>
  <block id="0333eb54465646b87754facff75fdb5f" category="list-text">Kubernetes 関連の機能拡張：</block>
  <block id="c32aa411caa1ffd0e30a271f5be834d9" category="list-text">Kubernetes 1.22 のサポートが追加されました。</block>
  <block id="fa1fd8841173fa7ccde5059fb7c2f903" category="list-text">Trident の operator と Helm チャートを Kubernetes 1.22 （ GitHub 問題 628 ）と連携させるように設定</block>
  <block id="dbaa551f190105e514f7816811f4b397" category="list-text">tridentctl images コマンドに演算子イメージを追加 (GitHub 問題 570)</block>
  <block id="be575f1ff204f2800114965a5c0d8575" category="section-title">実験的な機能強化</block>
  <block id="29ddf941d9825cc9283521ee90468595" category="list-text">「 ONTAP SAN 」ドライバでのボリューム・レプリケーションのサポートを追加しました。</block>
  <block id="e2f2b85987da5e2397c1e342a6fd9e28" category="list-text">'ONTAP-NAS-flexgroup 'ONTAP-SAN' および 'ONTAP-NAS-エコノミー ' ドライバの 'tech preview* REST サポートを追加</block>
  <block id="95dc0391ce7b396d7dd5622284e8fc3e" category="section-title">既知の問題</block>
  <block id="64a8f71bee95a6635e88bce00f1a2d3c" category="paragraph">ここでは、本製品の正常な使用を妨げる可能性のある既知の問題について記載します。</block>
  <block id="572b1d7e33a1c667884a1ffdff7a2d25" category="list-text">Astra Trident は ' ストレージクラスに fsType が指定されていないボリュームに対して ' ブランクの fsType( `fsType="") を適用するようになりましたKubernetes 1.17 以降を使用する場合、 Trident は NFS ボリュームに空の「 fsType 」を提供できます。iSCSI ボリュームの場合 ' セキュリティコンテキストを使用して fsGroup を実行するときに 'fsType' を StorageClass 上に設定する必要があります</block>
  <block id="91186d69835ccf9911e356f74938c539" category="list-text">複数の Astra Trident インスタンス間でバックエンドを使用する場合、各バックエンド構成ファイルの ONTAP バックエンドに異なる「 toragePrefix 」値を指定するか、 SolidFire バックエンドに異なる「 tenantname 」を使用する必要があります。Astra Trident は、 Astra Trident の他のインスタンスが作成したボリュームを検出できません。ONTAP または SolidFire バックエンドに既存のボリュームを作成しようとすると成功します。 Astra Trident は、ボリューム作成をべき等の操作として扱います。「 toragePrefix 」または「 tenantname 」が異なる場合は、同じバックエンド上に作成されたボリュームに名前の衝突が発生する可能性があります。</block>
  <block id="9bf4c601179068ff3574d2cf87536564" category="list-text">Astra Trident をインストールするときに (tridentctl または Trident Operator を使用 ) 、 tridentctl を使用して Astra Trident を管理するときは、「 KUBECONFIG 」環境変数が設定されていることを確認する必要があります。これは 'tridentctl が機能するべき Kubernetes クラスタを示すために必要です複数の Kubernetes 環境で作業する場合は、「 KBECONFIG 」ファイルが正確にソースされていることを確認する必要があります。</block>
  <block id="6d791d3b45515fd8619e489b938f39e8" category="inline-link">マウントオプション</block>
  <block id="d4b9b9554fd820f43eae492d33e41167" category="inline-link">'torageClass'</block>
  <block id="a5c785ee36f0f2d14349653f744c8e3b" category="list-text">iSCSI PVS のオンラインスペース再生を実行するには、作業者ノード上の基盤となる OS がボリュームにマウントオプションを渡す必要があります。これは、「 discard 」を必要とする RHEL/RedHat CoreOS インスタンスに当てはまります<block ref="2ee633fb26bfccf07d490458d29f92a2" category="inline-link-rx"></block>; discard mountOption がに含まれていることを確認します<block ref="b44436f062a8f5a535d8cafcffeb70b2" category="inline-link-rx"></block> オンラインブロックの破棄をサポートするため。</block>
  <block id="c2ebda3702872aaa7ad44122f2343d7e" category="list-text">Kubernetes クラスタごとに複数の Astra Trident インスタンスがある場合、 Astra Trident は他のインスタンスと通信できず、作成した他のボリュームを検出できません。そのため、 1 つのクラスタ内で複数のインスタンスを実行している場合、予期しない動作が発生したり、誤ったりすることがあります。Kubernetes クラスタごとに Trident のインスタンスが 1 つだけ必要です。</block>
  <block id="294f8c33b7ccdbcbf422998b64c9c931" category="list-text">Trident がオフラインのときに Astra Trident ベースの「 torageClass 」オブジェクトが Kubernetes から削除された場合、 Astra Trident は、対応するストレージクラスをオンラインに戻ってもデータベースから削除しません。これらのストレージクラスは、「 tridentctl 」または REST API を使用して削除してください。</block>
  <block id="ddab3f1d971a7608afb4c30c688a32ac" category="list-text">対応する PVC を削除する前に Astra Trident によってプロビジョニングされた PV を削除しても、 Astra Trident は自動的に元のボリュームを削除しません。tridentctl または REST API を使用してボリュームを削除してください。</block>
  <block id="0821431aba133adbfa7fa0ca1781eedd" category="list-text">FlexGroup では、プロビジョニング要求ごとに一意のアグリゲートセットがないかぎり、同時に複数の ONTAP をプロビジョニングすることはできません。</block>
  <block id="38699c45ccc629a8b46bd780d7aef2f6" category="list-text">IPv6 経由で Astra Trident を使用する場合は、バックエンド定義内の角かっこ内に「 managementlif 」と「 datalif 」を指定する必要があります。例えば、「 [fd20 ： 8b1e ： b258 ： 2000 ： f816 ： 3eff ： feec ： 0]`` 」のようになります。</block>
  <block id="d83c67344719a209c50396895dd2fbe1" category="list-text">OpenShift 4.5 で「 olidfire-san 」ドライバを使用する場合は、基になるワーカーノードが CHAP 認証アルゴリズムとして MD5 を使用していることを確認します。</block>
  <block id="e9a7080bd6d1b50ff15cef6f14fa1d64" category="inline-link">Astra Trident GitHub</block>
  <block id="b94e036fb032554ca486dd8fc2e3fafe" category="list-text"><block ref="b94e036fb032554ca486dd8fc2e3fafe" category="inline-link-rx"></block></block>
  <block id="3334dfda9735f9b3ed55a34ef316b599" category="inline-link">Astra Trident のブログ</block>
  <block id="d090b5d97388b77aa02e5d1203c037a0" category="list-text"><block ref="d090b5d97388b77aa02e5d1203c037a0" category="inline-link-rx"></block></block>
  <block id="34c4dac14496e9c45d92f345d9392fc8" category="summary">最新バージョンを実行していない場合は、以前のリリースの Astra Trident のドキュメントを参照できます。</block>
  <block id="ba09ee47d11962c1ccd13d7e1f10e6c5" category="doc">以前のバージョンのドキュメント</block>
  <block id="0c141ec81d4107f4c63fb0deb2531c0d" category="inline-link">Astra Trident 21.04</block>
  <block id="193bfae1ebda99fb7289c66fa69395a0" category="list-text"><block ref="193bfae1ebda99fb7289c66fa69395a0" category="inline-link-rx"></block></block>
  <block id="cba2c660d905f83e39a0d1771286c9e7" category="inline-link">Astra Trident 21.01</block>
  <block id="97f32ab1a5165dc49105dca53b9f4de7" category="list-text"><block ref="97f32ab1a5165dc49105dca53b9f4de7" category="inline-link-rx"></block></block>
  <block id="727d2d1e15a5c7260e90c50b1c250a4c" category="inline-link">Astra Trident 20.10</block>
  <block id="8a0315074645cbbab67a7445dcdf42f2" category="list-text"><block ref="8a0315074645cbbab67a7445dcdf42f2" category="inline-link-rx"></block></block>
  <block id="bad2b8fa41c05085668e48d7c14968dc" category="inline-link">Astra Trident 20.07</block>
  <block id="449d7e957347de63ee3d9841c40b4e7f" category="list-text"><block ref="449d7e957347de63ee3d9841c40b4e7f" category="inline-link-rx"></block></block>
  <block id="7c0a09ca9ea4472728e4661755a43c6b" category="inline-link">Astra Trident 20.04</block>
  <block id="8a72b28486832ed8c725617460afbdcb" category="list-text"><block ref="8a72b28486832ed8c725617460afbdcb" category="inline-link-rx"></block></block>
  <block id="1dc5429c6c86712d7628beb5652a0e2e" category="inline-link">Astra Trident 20.01</block>
  <block id="23204facdc38bad335a6afce81db0827" category="list-text"><block ref="23204facdc38bad335a6afce81db0827" category="inline-link-rx"></block></block>
  <block id="5b2d210bf907d26b59abbaa0e22fbbe6" category="inline-link">Astra Trident 19.10</block>
  <block id="3377906a52734323c44c8f31b2d29e63" category="list-text"><block ref="3377906a52734323c44c8f31b2d29e63" category="inline-link-rx"></block></block>
  <block id="f1d7fe87216a18ff3ffcfa98d6065689" category="inline-link">Astra Trident 19.07</block>
  <block id="12e29d431cea2700aa9d89e0c89e67bc" category="list-text"><block ref="12e29d431cea2700aa9d89e0c89e67bc" category="inline-link-rx"></block></block>
  <block id="fe4bdabecc64b786523a3d86bb1f9cfd" category="inline-link">Astra Trident 19.04</block>
  <block id="e43783d5a51a10670edf444f0b58b6af" category="list-text"><block ref="e43783d5a51a10670edf444f0b58b6af" category="inline-link-rx"></block></block>
  <block id="5e152ff33f3262612abc4b942db27ad1" category="inline-link">Astra Trident 19.01</block>
  <block id="977636e26059252def0425dca74811ef" category="list-text"><block ref="977636e26059252def0425dca74811ef" category="inline-link-rx"></block></block>
  <block id="e84181a29f4e43a18b27e7d82797adef" category="summary">Astra Trident for Docker は、ネットアップのストレージプラットフォーム向けの Docker エコシステムと AWS の Cloud Volumes Service との直接統合を実現します。ストレージプラットフォームから Docker ホストまで、ストレージリソースのプロビジョニングと管理をサポートします。また、将来プラットフォームを追加するためのフレームワークもサポートします。</block>
  <block id="d2eb05d1990246a079aeb2f56e3a4237" category="paragraph">Astra Trident の複数のインスタンスを同じホストで同時に実行できます。これにより、複数のストレージシステムとストレージタイプへの同時接続が可能になり、 Docker ボリュームに使用するストレージをカスタマイズできます。</block>
  <block id="89bcbd8e4ba49b7310e9fa748e878c4b" category="inline-link-macro">導入の前提条件</block>
  <block id="d1e7215d070e62d3e82e915d703ceaa9" category="paragraph">を参照してください <block ref="a51fda4654690ac4414966ed4956599c" category="inline-link-macro-rx"></block>。前提条件を満たしていることを確認したら、 Astra Trident を導入する準備ができました。</block>
  <block id="88f0ab229fa9d759d74fcf6ab7cc17b1" category="section-title">Docker Managed Plugin メソッド（バージョン 1.13 / 17.03 以降）</block>
  <block id="135b308ed83c53f1516b7c754566d1c4" category="admonition-title">作業を開始する前に</block>
  <block id="070ecb002d71e4e7618a4b46a5ba690f" category="admonition">従来のデーモン方式で Astra Trident 以前の Docker 1.13 / 17.03 を使用していた場合は、マネージドプラグイン方式を使用する前に Astra Trident プロセスを停止し、 Docker デーモンを再起動してください。</block>
  <block id="7bf1ee8f4e093050c1cdf1842931af7d" category="list-text">実行中のインスタンスをすべて停止します。</block>
  <block id="47b9ec5c8c4439980c63f4188bad5324" category="list-text">Docker を再起動します。</block>
  <block id="5311ac4d72d5c91dcaa39b896d3b8027" category="list-text">Docker Engine 17.03 （新しい 1.13 ）以降がインストールされていることを確認します。</block>
  <block id="07d6db5e99a0aa19fe76f15efed30ecf" category="inline-link">インストール環境をインストールまたは更新します</block>
  <block id="2c3bc9d0632e0cccc05fdd3c42467df9" category="paragraph">バージョンが最新でない場合は、<block ref="ddebe10ca17c0276898872fa2632e8fb" category="inline-link-rx"></block>。</block>
  <block id="48afbcf494fc19ee409f5aff48ae32c3" category="list-text">構成ファイルを作成し、次のオプションを指定します。</block>
  <block id="9314e9bcd24c80b255fc3e9e697a2ada" category="list-text">`config`: デフォルトのファイル名は 'config.json ですが ' ファイル名に config オプションを指定することで ' 選択した任意の名前を使用できます構成ファイルは ' ホスト・システムの /etc/netappdvp ディレクトリに格納されている必要があります</block>
  <block id="8798dc2a3b5e61873054923c9f170ac7" category="list-text">「 log-level 」：ログレベルを指定します（「 debug` 」、「 info 」、「 warn 」、「 error 」、「 fatal 」）。デフォルトは「 info 」です。</block>
  <block id="45ed67026a1141006588fcc698646141" category="list-text">`ebug`: デバッグログを有効にするかどうかを指定します。デフォルトは false です。true の場合、ログレベルを上書きします。</block>
  <block id="3bed6f89999b483af7f55024d9e7c02a" category="list-text">構成ファイルの場所を作成します。</block>
  <block id="28156615c51d4bad2ee47d0a9f43f404" category="list-text">構成ファイルを作成します</block>
  <block id="4e2deef4eda7b7593f1e94279c96a31d" category="list-text">マネージドプラグインシステムを使用して Astra Trident を起動</block>
  <block id="a4574d19d34a14aa0accde782f35318b" category="list-text">Astra Trident を使用して、構成したシステムのストレージを使用しましょう。</block>
  <block id="a9c521f25a3bacb94ad1dd4705b3585f" category="list-text">「 firstVolume 」という名前のボリュームを作成します。</block>
  <block id="4fbca4f67cbe96bc7d7a16691d2912c2" category="list-text">コンテナの開始時にデフォルトのボリュームを作成します。</block>
  <block id="b8e88709dbc4f2f80a96f53f83862704" category="list-text">ボリューム「 firstVolume 」を削除します。</block>
  <block id="0e68ac1d84bfedf203365a9fb37db9ed" category="section-title">従来の方法（バージョン 1.12 以前）</block>
  <block id="2c1107bda4c1ae7904ab1835c35973b7" category="list-text">バージョン 1.10 以降の Docker がインストールされていることを確認します。</block>
  <block id="b6fdfa2eab3e357687eba5ddec2bea0c" category="paragraph">使用しているバージョンが最新でない場合は、インストールを更新します。</block>
  <block id="45c61654258cfd16ceec15df7df02138" category="inline-link">ご使用のディストリビューションの指示に従ってください</block>
  <block id="07dff22faeb910f375341cfcbd4899fd" category="paragraph">または<block ref="9ce989a7f7f995616a47f5dd291ed229" category="inline-link-rx"></block>。</block>
  <block id="588d2fe1c60271cde75dbeba32e0b25b" category="list-text">NFS または iSCSI がシステムに対して設定されていることを確認します。</block>
  <block id="03fe5b0d58270efa87041677cac72ad7" category="list-text">NetApp Docker Volume Plugin をインストールして設定します。</block>
  <block id="f45f5a64dae951d3e37c9bd382201b06" category="list-text">アプリケーションをダウンロードして開梱します。</block>
  <block id="b255d9e06a4ca8e9f5bc31c9198426ad" category="list-text">ビンパス内の場所に移動します。</block>
  <block id="ca8a5486f4257b2aef35a8e769fc51d9" category="list-text">バイナリを配置して構成ファイルを作成したら、必要な構成ファイルを使用して Trident デーモンを開始します。</block>
  <block id="d3fa61f14ead6cf1cf1d584cf0b6c4e1" category="admonition">指定しないかぎり、ボリュームドライバのデフォルト名は「 netapp 」です。</block>
  <block id="9ad37c975c341297c49c69353516a727" category="paragraph">デーモンが開始されたら、 Docker CLI インターフェイスを使用してボリュームを作成および管理できます</block>
  <block id="e3dec3f86b9a3b1be209ab63855ce432" category="list-text">ボリュームを作成します</block>
  <block id="5ff2e3e853922fdb84ef21b85ffdac2e" category="list-text">コンテナの開始時に Docker ボリュームをプロビジョニング：</block>
  <block id="8f6a91f5f21d0478e3fd89095fc28ab9" category="list-text">Docker ボリュームを削除します。</block>
  <block id="e63e2a2b9c9184e703ff8d93bb92508b" category="section-title">システム起動時に Astra Trident を起動</block>
  <block id="34f4e076aba0519cebd8bb63617b2f7e" category="paragraph">システムベースのシステム用のサンプルユニットファイルは、 Git repo の「 contrib / trident.service.example` 」にあります。このファイルを CentOS / RHEL で使用するには、次の手順を実行します。</block>
  <block id="5b51496da86e5a2073e0c618390c3d2a" category="list-text">ファイルを正しい場所にコピーします。</block>
  <block id="44103de0a164f687d305ad91e919d8ee" category="paragraph">複数のインスタンスを実行している場合は、ユニットファイルに一意の名前を使用してください。</block>
  <block id="3223aadc84a3ccb4a3473ba01c895184" category="list-text">ファイルを編集し、概要（ 2 行目）を変更してドライバ名と構成ファイルのパス（ 9 行目）を環境に合わせます。</block>
  <block id="1edae3931401a32d7dd7dd6e0a2ad563" category="list-text">変更を取り込むためにシステムをリロードします。</block>
  <block id="db38a93e27eba57d507611d002ad612f" category="list-text">サービスを有効にします。</block>
  <block id="c7e0a4deeebe264aa7d5f7f3ca3ef77f" category="paragraph">この名前は '/usr/lib/systemd/system' ディレクトリ内のファイルの名前によって異なります</block>
  <block id="baa04490a79e9e8de7fa4cd44e2c6fbb" category="list-text">サービスを開始します。</block>
  <block id="93c7574cf83c1f01b04891cf2d826cea" category="list-text">ステータスを確認します。</block>
  <block id="f4f15418284ae7a01b27fccc1af0463a" category="admonition">ユニット・ファイルを変更するときは ' 変更を認識するために 'systemctl daemon-reload コマンドを実行します</block>
  <block id="23c9c608b55b9071002aeddfd6c5563c" category="summary">Trident を導入するには、必要なプロトコルをホストにインストールして設定しておく必要があります。</block>
  <block id="782bd8949cb40c80fd3f3126eccab35a" category="doc">導入の前提条件</block>
  <block id="b4851e92b19af0c5c82447fc0937709d" category="inline-link-macro">要件</block>
  <block id="33446a91021b76dfabfca4afe312824a" category="list-text">の導入がすべてを満たしていることを確認します <block ref="bc54c30334f793aa90542f3d86da0da6" category="inline-link-macro-rx"></block>。</block>
  <block id="d46ecc35447a8c17ef014ff6daf07bba" category="inline-link">インストールまたは更新します</block>
  <block id="1035fa0ac2c3ed19f6ba56cafe7e121f" category="list-text">サポートされているバージョンの Docker がインストールされていることを確認します。Docker のバージョンが最新でない場合は、<block ref="0b011811ae105895ca4da9769d7e6f99" category="inline-link-rx"></block>。</block>
  <block id="7760c52227ccba10f5bc395571ca7a60" category="list-text">プロトコルの前提条件がホストにインストールされ、設定されていることを確認します。</block>
  <block id="7f50d5e5825124658e17cc8cfaa7f823" category="list-text">マルチパスデーモンを開始します。</block>
  <block id="43ce2a55c085b27f271203155d2745e1" category="list-text">「 iscsid 」と「 multipathd 」が有効で、実行中であることを確認します。</block>
  <block id="04c298ec3fc67bce1115cddcc2b3b829" category="paragraph">'sudo systemctl enable iscsid multipathd `sudo systemctl start iscsid multipathd</block>
  <block id="2cfaa468af4e9de7ba9933d9e0081572" category="list-text">iSCSI ターゲットを検出します。</block>
  <block id="f0c700b766cfcc86bc21496513c58391" category="paragraph">'UDO iscsiadm -m discoverydb -t st -p &lt;data_lif_ip&gt;--discover `</block>
  <block id="18124bf28831e04dabc4dc81d1d4e69f" category="list-text">検出された iSCSI ターゲットにログインします。</block>
  <block id="ba64ec4efdc69990967a75a918b83635" category="paragraph">'UDO iscsiadm -m node -p &lt;data_lif_ip&gt;-- login</block>
  <block id="8bd830b1ea0595874b57cfd34c877123" category="paragraph">'UDO systemctl enable iscsi `sudo systemctl start iSCSI</block>
  <block id="e6693412ed2252a87ece3f264fb334ed" category="paragraph">'sudo tee//etc/multipath.conf &lt;-'EOF' defaults ｛ user_friendy_names yes find _multipaths yes ｝ EOF sudo service multipath-tools restart`</block>
  <block id="0d29eaa34aa7badaae0d49b35a2a0d12" category="paragraph">'sudo service open-iscsi start sudo service multipath-tools start</block>
  <block id="0e9e734e557a02db30a20e5ac259cfb9" category="summary">ストレージドライバにはそれぞれ異なるオプションがあり、ボリュームの作成時に指定することで結果をカスタマイズできます。構成済みのストレージシステムに適用されるオプションについては、以下を参照してください。</block>
  <block id="11e1b165c1d718d825f4bb9aaf0b884e" category="doc">ドライバ固有のボリュームオプション</block>
  <block id="bca0712c590c8d3c228bf1044aed730b" category="paragraph">ボリューム作成処理では、これらのオプションを簡単に使用できます。CLI の操作中に '-o' 演算子を使用して ' オプションと値を指定しますこれらは、 JSON 構成ファイルの同等の値よりも優先されます。</block>
  <block id="6021d91bdededf94b8ae37c30e820118" category="section-title">ONTAP ボリュームのオプション</block>
  <block id="16dc9caa069072a49db7ea7c81a7cf66" category="paragraph">NFS と iSCSI のどちらの場合も、 volume create オプションには次のオプションがあります。</block>
  <block id="054b4f3ea543c990f6b125f41af6ebf7" category="cell">オプション</block>
  <block id="d3a07c97b6050b305c7dda0aea1657be" category="paragraph">ボリュームのサイズ。デフォルトは 1GiB です。</block>
  <block id="69e8c7b4f73d39cea9948875813f7ddd" category="paragraph">ボリュームをシンプロビジョニングまたはシックプロビジョニングします。デフォルトはシンです。有効な値は 'none( シン・プロビジョニング ) と 'volume( シック・プロビジョニング ) です</block>
  <block id="91853d7e2338a1395280185fc93d4650" category="paragraph">Snapshot ポリシーが目的の値に設定されます。デフォルトは「 none 」です。つまり、ボリュームに対してスナップショットが自動的に作成されることはありません。ストレージ管理者によって変更されていない限り、「 default 」という名前のポリシーがすべての ONTAP システムに存在し、 6 個の時間単位 Snapshot 、 2 個の日単位 Snapshot 、および 2 個の週単位 Snapshot を作成して保持します。スナップショットに保存されているデータは ' ボリューム内の任意のディレクトリ内の .snapshot ディレクトリに移動してリカバリできます</block>
  <block id="b8a0fde33bd7662b7b9cb4158f04ef52" category="paragraph">これにより、 Snapshot リザーブの割合が希望する値に設定されます。デフォルト値は no で、 Snapshot ポリシーを選択した場合は ONTAP によって snapshotReserve が選択されます（通常は 5% ）。 Snapshot ポリシーがない場合は 0% が選択されます。構成ファイルのすべての ONTAP バックエンドに対して snapshotReserve のデフォルト値を設定できます。また、この値は、 ONTAP-NAS-エコノミー を除くすべての ONTAP バックエンドでボリューム作成オプションとして使用できます。</block>
  <block id="0625856b9dc58db03a6e2c49b1f029e3" category="paragraph">ボリュームをクローニングすると、そのクローンが原因 ONTAP によって親から即座にスプリットされます。デフォルトは「 false 」です。クローンボリュームのクローニングは、作成直後に親からクローンをスプリットする方法を推奨します。これは、ストレージ効率化の効果がまったくないためです。たとえば、空のデータベースをクローニングすると、時間を大幅に節約できますが、ストレージの節約はほとんどできないため、クローンをすぐに分割することをお勧めします。</block>
  <block id="be94792f601f829d9b2be22553c6bf31" category="paragraph">これにより、新しいボリュームで NetApp Volume Encryption （ NVE ）がデフォルトで「 false 」に設定されます。このオプションを使用するには、クラスタで NVE のライセンスが設定され、有効になっている必要があります。</block>
  <block id="cdaf246fba737b75127faa65456baa30" category="paragraph">ボリュームに使用する階層化ポリシーを設定します。これにより、アクセス頻度の低いコールドデータをクラウド階層に移動するかどうかが決まります。</block>
  <block id="1c46d85ab16f6b373409ad15260b1b0a" category="paragraph">以下は、 NFS * のみ * 用の追加オプションです。</block>
  <block id="ce46e8f3fc6eaddbe03115e0d62090ac" category="cell">「 unixPermissions 」</block>
  <block id="b145a4acc7a577d843f538580013776b" category="paragraph">これにより、ボリューム自体の権限セットを制御できます。デフォルトでは ' アクセス権は '--rwxr-xr-x' または数値表記 0755 に設定され 'root' は所有者になりますテキスト形式または数値形式のどちらかを使用できます。</block>
  <block id="76a4004d727b54162f2e0542094a89a3" category="paragraph">これを「 true 」に設定すると、ボリュームにアクセスしているクライアントから「 .snapshot 」ディレクトリを参照できるようになります。デフォルト値は 'false' ですつまり '.snapshot ディレクトリの表示はデフォルトで無効になっています公式の MySQL イメージなどの一部のイメージは '.snapshot ディレクトリが表示されているときに ' 期待どおりに機能しません</block>
  <block id="e59001176f4360988f5d774a8405b4b9" category="cell">「 exportPolicy 」と入力します</block>
  <block id="700d608597316c75fc869190f51cff49" category="paragraph">ボリュームで使用するエクスポートポリシーを設定します。デフォルトは「デフォルト」です。</block>
  <block id="6b068a846d408b1d9ccd2c7220326b9d" category="paragraph">ボリュームへのアクセスに使用するセキュリティ形式を設定します。デフォルトは「 unix 」です。有効な値は「 unix 」と「 immimixed 」です。</block>
  <block id="842aac52866a44b40a5733ce352cf6df" category="paragraph">以下の追加オプションは、 iSCSI * のみ * 用です。</block>
  <block id="3184b1a9846944fabb00496c4b6b613a" category="cell">「 filesystemtype 」です</block>
  <block id="56efcdcb9168adcb146b4d86bf55e99d" category="cell">iSCSI ボリュームのフォーマットに使用するファイルシステムを設定します。デフォルトは「 ext4 」です。有効な値は「 ext3 」、「 ext4 」、「 xfs 」です。</block>
  <block id="79686ba706c992e7385f0c5b28be8294" category="cell">これを false に設定すると、 LUN のスペース割り当て機能がオフになります。デフォルト値は「 true 」です。つまり、ボリュームのスペースが不足し、ボリューム内の LUN に書き込みを受け付けられなくなったときに、 ONTAP はホストに通知します。また、このオプションで ONTAP 、ホストでデータが削除された時点での自動スペース再生も有効になります。</block>
  <block id="ff7c0fcd6a31e735a61c001f75426961" category="section-title">例</block>
  <block id="9e6d454a094b92b0132e48d2369debf5" category="paragraph">以下の例を参照してください。</block>
  <block id="be1e1c94a5fc3bb66c2ae9425eeefbdb" category="list-text">10GiB ボリュームを作成します。</block>
  <block id="a6490f19f59ecd8e4ed8634990ea366c" category="list-text">Snapshot を使用して 100GiB のボリュームを作成します。</block>
  <block id="297d0d2fcc555e5037c8d251daf5a620" category="list-text">setuid ビットが有効になっているボリュームを作成します。</block>
  <block id="6e31a0481f4f7e423abcde0bf31025c8" category="paragraph">最小ボリュームサイズは 20MiB です。</block>
  <block id="a65684b0a191599ad968126dd65f2e9d" category="paragraph">スナップショット予約が指定されておらず、スナップショットポリシーが「 none 」の場合、 Trident は 0% のスナップショット予約を使用します。</block>
  <block id="8c05fd71822bf85c290cef86db959f68" category="list-text">Snapshot ポリシーがなく、 Snapshot リザーブがないボリュームを作成します。</block>
  <block id="d15d662af6e4417b0b7c134a84ed577c" category="list-text">Snapshot ポリシーがなく、カスタムの Snapshot リザーブが 10% のボリュームを作成します。</block>
  <block id="52a56a468f11c3298931c8e32c938e15" category="list-text">Snapshot ポリシーを使用し、カスタムの Snapshot リザーブを 10% に設定してボリュームを作成します。</block>
  <block id="0a77fdb1c16069c98ebe6510137af9d2" category="list-text">Snapshot ポリシーを設定してボリュームを作成し、 ONTAP のデフォルトの Snapshot リザーブ（通常は 5% ）を受け入れます。</block>
  <block id="f6f813eaaff2b296a27b6bf051485d2b" category="section-title">Element ソフトウェアのボリュームオプション</block>
  <block id="a514753df071ac540af065b659d1c65c" category="paragraph">Element ソフトウェアのオプションでは、ボリュームに関連付けられているサービス品質（ QoS ）ポリシーのサイズと QoS を指定できます。ボリュームが作成されると '-o type=service_level' という命名法を使用して ' ボリュームに関連付けられた QoS ポリシーが指定されます</block>
  <block id="f201e088f13d93e3d12b3c0ef78dece3" category="paragraph">Element ドライバを使用して QoS サービスレベルを定義する最初の手順は、少なくとも 1 つのタイプを作成し、構成ファイル内の名前に関連付けられた最小 IOPS 、最大 IOPS 、バースト IOPS を指定することです。</block>
  <block id="5cb7e4a4b6a51af0b5b09cb230b83422" category="paragraph">Element ソフトウェアのその他のボリューム作成オプションは次のとおりです。</block>
  <block id="8730c4572b866ffc01a4aefebc896555" category="paragraph">ボリュームのサイズ。デフォルト値は 1GiB または設定エントリ ... 「 defaults 」： ｛ 「 size 」：「 5G 」 ｝ 。</block>
  <block id="d52146098b8ecd83b888289a86e26d19" category="cell">「ブロックサイズ」</block>
  <block id="348ef18ccca06aa29547bd9ad87beebe" category="paragraph">512 または 4096 のいずれかを使用します。デフォルトは 512 または config エントリ DefaultBlockSize です。</block>
  <block id="1daf1c12549d6d3ae75c4d8d5f59d532" category="paragraph">QoS 定義を含む次のサンプル構成ファイルを参照してください。</block>
  <block id="7afe0c73e341cee7c90b4d4dda4600d9" category="paragraph">上記の構成では、 Bronze 、 Silver 、 Gold の 3 つのポリシー定義を使用します。これらの名前は任意です。</block>
  <block id="cb5b68dacb07bd02a5152bf4ad1de8c6" category="list-text">10GiB の Gold ボリュームを作成します。</block>
  <block id="89014c611c13195dc852587ef9d2bb16" category="list-text">100GiB Bronze ボリュームを作成します。</block>
  <block id="7f65aa9497b5352a28e3eed539643ea7" category="section-title">CVS （ Cloud Volumes Service on AWS ）ボリュームのオプション</block>
  <block id="97f74fbb7a82eb99b7ea43017c0bfbe2" category="paragraph">CVS on AWS ドライバのボリューム作成オプションには次のものがあります。</block>
  <block id="742a301c15fea3569e5059520217090e" category="paragraph">ボリュームのサイズ。デフォルトは 100GB です。</block>
  <block id="326ea14a491277cac4032c7b6413a545" category="paragraph">ボリュームの CVS サービスレベル。デフォルトは「 Standard 」です。有効な値は、 standard 、 premium 、 extreme です。</block>
  <block id="a6b420fe5da257523d2105e9aae9fbc1" category="paragraph">これにより ' スナップショット予約が目的の割合に設定されますデフォルト値は no で、 CVS によって Snapshot リザーブが選択されます（通常は 0% ）。</block>
  <block id="fe0bb617c9579d2f1d51ca5a627839fb" category="list-text">200GiB ボリュームを作成します。</block>
  <block id="6f5c2d108fc1cf862350561160c4ecac" category="list-text">500GiB のプレミアムボリュームを作成します。</block>
  <block id="84e002f675928fb7347e346a6214eefc" category="paragraph">最小ボリュームサイズは 100GB です。</block>
  <block id="c3fa12e6fe179aa6330774fb658371a5" category="section-title">CVS on GCP ボリュームのオプション</block>
  <block id="c112845976cf3ccb7ec927bea467b805" category="paragraph">GCP 上の CVS ドライバのボリューム作成オプションには、次のものがあります。</block>
  <block id="3d9999cfb7d197cd40ffb0d665cf46a6" category="paragraph">ボリュームのサイズ。 CVS パフォーマンスボリュームの場合はデフォルトで 100GiB 、 CVS ボリュームの場合は 300GiB になります。</block>
  <block id="256a798c267200d8cfa583eecaa2cc31" category="paragraph">これにより、 Snapshot リザーブの割合が希望する値に設定されます。デフォルト値は no で、 CVS によって Snapshot リザーブが選択されます（通常は 0% ）。</block>
  <block id="4e984a8dd0f1e9f166c162b4c01da5d2" category="list-text">2TiB のボリュームを作成します。</block>
  <block id="39407360e3929c32bb19c04cf3549d2e" category="list-text">5TiB の Premium ボリュームを作成します。</block>
  <block id="077eacce80395f222c5785ca68ffe958" category="paragraph">CVS パフォーマンスボリュームの場合は最小ボリュームサイズが 100GiB 、 CVS ボリュームの場合は 300GiB です。</block>
  <block id="05891dbb3b7306197f5cd0da8f1768ef" category="section-title">Azure NetApp Files ボリュームのオプション</block>
  <block id="bda1cf59d924de8c8c73a8b619aace9c" category="paragraph">Azure NetApp Files ドライバの volume create オプションには、次のものがあります。</block>
  <block id="fc96768681dcf6770119445ffe2537cd" category="summary">ボリュームを作成するには、必要に応じて Astra Trident ドライバ名を指定した標準の「 Ocker volume 」コマンドを使用します。</block>
  <block id="feabbbf9b5afb31194daf0d8e3ff75dc" category="doc">ボリュームを操作します</block>
  <block id="00e5ed77f92b42f144be7dfb7106bf10" category="paragraph">必要に応じて Astra Trident ドライバ名を指定した標準の「 DOcker volume 」コマンドを使用すると、ボリュームの作成、クローニング、削除を簡単に行うことができます。</block>
  <block id="dc88dce8ec264777b2f90ec0af744f43" category="section-title">ボリュームを作成します</block>
  <block id="a32b09b1335e0afbb640a9412690680d" category="list-text">デフォルトの名前を使用して、ドライバでボリュームを作成します。</block>
  <block id="8b5708fe1297b9ca8b3be5b99bf29407" category="list-text">特定の Astra Trident インスタンスを使用してボリュームを作成します。</block>
  <block id="93da65a9fd0004d9477aeac024e08e15" category="inline-link-macro">オプション（ Options ）</block>
  <block id="593e5c95e1adc19e8d81719c16b57bc1" category="admonition">何も指定しない場合 <block ref="3a0a40f90bfa29e0eb23418c553e5ef5" category="inline-link-macro-rx"></block>、ドライバのデフォルトが使用されます。</block>
  <block id="1e1e2461d5dfd51f1ebd0eadcba142f4" category="list-text">デフォルトのボリュームサイズを上書きします。次の例を参照して、ドライバで 20GiB ボリュームを作成してください。</block>
  <block id="5149eec9d959a54cf392efaa710541d1" category="admonition">ボリュームサイズは、オプションの単位（ 10G 、 20GB 、 3TiB など）を含む整数値で指定します。単位を指定しない場合、デフォルトは g ですサイズの単位は、 2 の累乗（ B 、 KiB 、 MiB 、 GiB 、 TiB ）または 10 の累乗（ B 、 KB 、 MB 、 GB 、 TB ）のいずれかです。略記単位では、 2 の累乗が使用されます（ G=GiB 、 T=TiB 、…）。</block>
  <block id="9bc129eac7adf7ea5d8ed1c021fab2dc" category="section-title">ボリュームを削除します</block>
  <block id="281a0f40363a276c6ec125244c784112" category="list-text">他の Docker ボリュームと同様にボリュームを削除します。</block>
  <block id="7959e3701f7a7fba7713c7530d496324" category="admonition">「 olidfire -san 」ドライバを使用する場合、上記の例ではボリュームを削除してパージします。</block>
  <block id="5a1345d94751fc14bedf8f6f5e77a0ff" category="paragraph">Astra Trident for Docker をアップグレードするには、次の手順を実行します。</block>
  <block id="d50044469c0bf9ab38eff9cf7243fb25" category="section-title">ボリュームのクローンを作成します</block>
  <block id="d9bab73e26d2aaa2f602f32954ab9cd7" category="paragraph">「 ONTAP-NAS' 」、「 ONTAP-SAN' 」、「 olidfire-SAN' 」、「 aws -cvs storage drivers 」を使用する場合、 Astra Trident はボリュームのクローンを作成できます。「 ONTAP-NAS-flexgroup 」または「 ONTAP-NAS-エコノミー 」ドライバを使用する場合、クローニングはサポートされません。既存のボリュームから新しいボリュームを作成すると、新しい Snapshot が作成されます。</block>
  <block id="9374b766b9dd78063440afd69afabf38" category="list-text">ボリュームを調べて Snapshot を列挙します。</block>
  <block id="2747096689037792fa87de7a0e8440e2" category="list-text">既存のボリュームから新しいボリュームを作成します。その結果、新しい Snapshot が作成されます。</block>
  <block id="31d9b5ed201aa44dbeae6d17d38c0c6f" category="list-text">ボリューム上の既存の Snapshot から新しいボリュームを作成します。新しい Snapshot は作成されません。</block>
  <block id="516b30a46da41c6969cb7249d6567905" category="section-title">外部で作成されたボリュームにアクセス</block>
  <block id="d8c20bb137be94fec8295c3fc5175b54" category="paragraph">Trident * を使用して、外部で作成されたブロックデバイス（またはそれらのクローン）には、パーティションがなく、ファイルシステムが Astra Trident でサポートされている場合（例えば、 "ext4 ’でフォーマットされた "/dev/sdc1" は Astra Trident 経由でアクセスできません）のみ、コンテナからアクセスできます。</block>
  <block id="4cfa22b281cbd36e1a275d61ec23a9b4" category="summary">トラブルシューティングに役立つログを収集できます。ログの収集方法は、 Docker プラグインの実行方法によって異なります。</block>
  <block id="fe1786b49549e8e06a89b9c57d7fc514" category="doc">ログを収集します</block>
  <block id="83f4d02d2dd31f09291e098bf4ae502b" category="list-text">推奨されるマネージプラグインメソッド (`d Occker plugin` コマンドを使用 ) を使用して Astra Trident を実行している場合は、次のように表示します。</block>
  <block id="17c40798131b12188d43b1a90dabfc69" category="paragraph">標準的なロギングレベルでは、ほとんどの問題を診断できます。十分でない場合は、デバッグロギングをイネーブルにできます。</block>
  <block id="c28722abec5c1daefa02916119bbff91" category="list-text">デバッグロギングをイネーブルにするには、デバッグロギングをイネーブルにしてプラグインをインストールします。</block>
  <block id="b142025dd533fb27bf7df1a93c55e311" category="paragraph">または、プラグインがすでにインストールされている場合にデバッグログを有効にします。</block>
  <block id="98e6888e14bd8bcd734870a8331ca6ea" category="list-text">ホストでバイナリ自体を実行している場合、ログはホストの「 /var/log/netappdvp 」ディレクトリにあります。デバッグ・ロギングを有効にするには ' プラグインの実行時に -debug を指定します</block>
  <block id="2aa0797ce5da04d1c6f027c9b3276483" category="section-title">一般的なトラブルシューティングのヒント</block>
  <block id="94d799ff06bdb0aedb7b64151dac73d7" category="list-text">新しいユーザーが実行する最も一般的な問題は、プラグインの初期化を妨げる構成ミスです。この場合、プラグインをインストールまたは有効にしようとすると、次のようなメッセージが表示されることがあります。</block>
  <block id="fe6b4529e706ebc0f7e3668d3230d029" category="paragraph">「デーモンからのエラー応答 : ダイヤル UNIM/run/docx/plugins/&lt;id&gt;/NetApp/smock: connect: no such file or directory`</block>
  <block id="3d924bd43304301ed127cbbd303a4fa6" category="paragraph">これは、プラグインの起動に失敗したことを意味します。幸い、このプラグインには、発生する可能性の高い問題のほとんどを診断するのに役立つ包括的なログ機能が組み込まれています。</block>
  <block id="79c820c2d64495c47651e58e73f97294" category="list-text">コンテナへの PV のマウントに問題がある場合は 'rpcbind' がインストールされていて実行されていることを確認してくださいホスト OS に必要なパッケージ・マネージャを使用して 'rpcbind' が実行されているかどうかを確認しますrpcbind サービスのステータスは 'systemctl ステータス rpcbind またはそれに相当する処理を実行することで確認できます</block>
  <block id="2358ca3eef46b0e25466e80dbea7ea4b" category="summary">Astra Trident 構成で使用できる設定オプションを確認してください。</block>
  <block id="34e1f7eb303c0a150cd440611b3b5e24" category="doc">ストレージ構成オプション</block>
  <block id="51f834b47bcd78a0f4f40fd8ca40446f" category="section-title">グローバル構成オプション</block>
  <block id="b22d82aea9557ba6aa7b915d40309d9b" category="paragraph">以下の設定オプションは、使用するストレージプラットフォームに関係なく、すべての Astra Trident 構成に適用されます。</block>
  <block id="63b276a6c28274ed5e553d4ce3fe7eb1" category="paragraph">構成ファイルのバージョン番号</block>
  <block id="c4ca4238a0b923820dcc509a6f75849b" category="paragraph">1.</block>
  <block id="ac5eb8fcbd1ed9c85a98d91e10e26a38" category="paragraph">ストレージドライバの名前</block>
  <block id="86561da64fcea64abfe5587158ea1c15" category="paragraph">「 ontap -na`, `ontap -san`, `ontap -nas-エコノミー 」 , 「 ontap -nas-flexgroup 」 , 「 olidfire -san 」 , 「 azure-NetApp-files 」、「 aws -cvs 」、または「 gcp-cvs 」です</block>
  <block id="3f2b20ce3aa5e39b0dbfe20326747a7b" category="paragraph">ボリューム名のオプションのプレフィックス。デフォルト：「 netappdvp_」 。</block>
  <block id="46fa46eed970046d03e2dedc95cdc83b" category="paragraph">ステージング _</block>
  <block id="fcf783284187f1e80e772eacd9266ee1" category="paragraph">ボリュームサイズに関するオプションの制限。デフォルト：「」（適用されていない）</block>
  <block id="75da9d6de91e782eca4fa00341367135" category="paragraph">10G</block>
  <block id="3eed2a7dac1f2329f3a9574a68e5e1c4" category="admonition">Element バックエンドには 'toragePrefix' （デフォルトを含む）を使用しないでくださいデフォルトでは 'solidfire-san' ドライバはこの設定を無視し ' 接頭辞を使用しませんDocker ボリュームマッピングには特定の tenantID を使用するか、 Docker バージョン、ドライバ情報、名前の munging が使用されている可能性がある場合には Docker から取得した属性データを使用することを推奨します。</block>
  <block id="0863f9e97e159e3ea1ce46bdb49b1254" category="paragraph">作成するすべてのボリュームでデフォルトのオプションを指定しなくても済むようになっています。「 size 」オプションは、すべてのコントローラタイプで使用できます。デフォルトのボリュームサイズの設定方法の例については、 ONTAP の設定に関するセクションを参照してください。</block>
  <block id="41ad23e0468b5a035cae097ac8b28bb9" category="paragraph">新しいボリュームのオプションのデフォルトサイズ。デフォルト：「 1G 」</block>
  <block id="08aa1584c9a5791fb64b0f7f1453f9eb" category="paragraph">10G</block>
  <block id="0353522b39b87d54d40d3f09ec668851" category="section-title">ONTAP の設定</block>
  <block id="cd536bce1bed61366e8d17a85fe6678a" category="paragraph">ONTAP を使用する場合は、上記のグローバル構成値に加えて、次のトップレベルオプションを使用できます。</block>
  <block id="464779f3491153dd1e79ddbd8a81e3f0" category="paragraph">ONTAP 管理 LIF の IP アドレス。Fully Qualified Domain Name （ FQDN ；完全修飾ドメイン名）を指定できます。</block>
  <block id="190dafab69706a67221c1226360de7dc" category="paragraph">10.0.0.1</block>
  <block id="bfdeb0e1ca992a3dcb6853265e453e21" category="paragraph">プロトコル LIF の IP アドレス。指定しない場合に生成されます。「 ontap/na`drivers * only * 」では、 FQDN を指定できます。この場合、 FQDN が NFS マウント操作に使用されます。「 ONTAP -SAN 」ドライバの場合、デフォルトでは SVM のすべてのデータ LIF IP が使用され、 iSCSI マルチパスが使用されます。「 SAN-SAN 」ドライバの「 datalif 」に IP アドレスを指定すると、ドライバはマルチパスを無効にし、指定されたアドレスだけを使用するように強制されます。</block>
  <block id="98a2cd7efa1ba950d42e42af495c4248" category="paragraph">10.0.0.2</block>
  <block id="11053eb2b6ac6e8802c67c054cf55ad9" category="paragraph">使用する Storage Virtual Machine （管理 LIF がクラスタ LIF である場合は必須）</block>
  <block id="b26399fddd6473c150b4e7528fb04fdc" category="paragraph">SVM_NFS の場合</block>
  <block id="723a179bbb9fc3c4f12cf296a8841b27" category="paragraph">ストレージデバイスに接続するユーザ名</block>
  <block id="6173aa5206484b5224450952747c7148" category="paragraph">vsadmin</block>
  <block id="8cf10281cf3b9290d5988c57a7d19693" category="paragraph">ストレージ・デバイスに接続するためのパスワード</block>
  <block id="5ebe2294ecd0e0f08eab7690d2a6ee69" category="paragraph">秘密</block>
  <block id="7e6d207f2b120c6cc9caa98510aa51c6" category="cell">「集約」</block>
  <block id="ac53191a99c328660eafa4696375dbfb" category="paragraph">プロビジョニング用のアグリゲート（オプション。設定する場合は SVM に割り当てる必要があります）。「 ONTAP-NAS-flexgroup 」ドライバの場合、このオプションは無視されます。SVM に割り当てられたすべてのアグリゲートを使用して FlexGroup ボリュームがプロビジョニングされます。</block>
  <block id="70d2c7701d2837552c0a38c02a326592" category="paragraph">aggr1</block>
  <block id="925060a0c0a15f99ef1bee43f1660ea4" category="paragraph">オプション。使用率がこの割合を超えている場合は、プロビジョニングを失敗させます</block>
  <block id="f819de81247be4a5428dc0e169de28b8" category="paragraph">75%</block>
  <block id="876885770cf58d20ef5672cc5594e85d" category="inline-link">ここでは、 NFS ホストの設定情報を参照してください</block>
  <block id="0a19ca3d1db7e5bc24b58f73b91c3f49" category="paragraph">NFS マウントオプションのきめ細かな制御。デフォルトは「 -o nfsvers=3 」です。* 「 ONTAP-NAS' 」および「 ONTAP-NAS-エコノミー 」ドライバ専用です。<block ref="71f7a3f48cfd3876cffba401813b7db0" category="inline-link-rx"></block>。</block>
  <block id="301c869c551e12d862ab0291837102a0" category="paragraph">-o nfsvers=4</block>
  <block id="00d72747af4eb1f0bab120935efe88fe" category="paragraph">プラグインで使用される igroup 。デフォルトは「 netappdvp 」です。* 「 ONTAP-SAN'd river 」のみ利用可能です。</block>
  <block id="79e762988462f6f8da9becfbfd789755" category="paragraph">myigroup と入力します</block>
  <block id="5c5adadf8175fd69d4af9bfdb608c42c" category="paragraph">最大要求可能ボリュームサイズと qtree 親ボリュームサイズ。* 「 ONTAP-NAS-エコノミー 」ドライバの場合、このオプションにより、作成する FlexVol のサイズも制限されます。 *</block>
  <block id="f07e606cfe25ac6fb07d9c4af941d9a2" category="paragraph">300g</block>
  <block id="981ba910eb0ffc42f42059de056624b4" category="paragraph">FlexVol あたりの最大 qtree 数は [50 、 300] の範囲で指定する必要があります。デフォルトは 200 です。*「 ONTAP-NAS-エコノミー 」ドライバの場合、このオプションを使用すると、 FlexVol あたりの最大数をカスタマイズできます。</block>
  <block id="94f6d7e04a4d452035300f18b984988c" category="paragraph">300</block>
  <block id="3890063556e337d458019437f027030b" category="paragraph">作成するすべてのボリュームでデフォルトのオプションを指定しなくても済むようになっています。</block>
  <block id="887ba6a0090fff5ace8889efb3b766af" category="paragraph">スペースリザベーションモード：「 none 」（シンプロビジョニング）または「 volume 」（シック）</block>
  <block id="334c4a4c42fdb79d7ebc3e73b517e6f8" category="paragraph">なし</block>
  <block id="b614ecafc9c9bbcd0206b519e5481f8d" category="paragraph">使用する Snapshot ポリシー。デフォルトは「 none 」です。</block>
  <block id="e35ead0e9e7038a6c58695bfa4741686" category="paragraph">Snapshot リザーブの割合。 ONTAP のデフォルトを受け入れる場合は、デフォルトで「」になります</block>
  <block id="d3d9446802a44259755d38e6d163e820" category="paragraph">10.</block>
  <block id="eb28cb6308c229ba4561cf02d78b9a07" category="paragraph">作成時にクローンを親からスプリットします。デフォルトは「 false 」です。</block>
  <block id="988726bbf32c455be56acbfb0da3aad0" category="paragraph">NetApp Volume Encryption を有効にします。デフォルトは「 false 」です。</block>
  <block id="b326b5062b2f0e69046810717534cb09" category="paragraph">正しいです</block>
  <block id="a3b703e23c8d0caf2b2fb4f46057013b" category="paragraph">プロビジョニングされた NFS ボリューム用の NAS オプション。デフォルトは「 777 」</block>
  <block id="f1c1592588411002af340cbaedd6fc33" category="paragraph">777</block>
  <block id="525eba0ced0a1c122a9112c4d10fbdc2" category="paragraph">「 .snapshot 」ディレクトリにアクセスするための NAS オプション。デフォルトは「 false 」です。</block>
  <block id="b60dd25e9d373b87424c30a74da2703f" category="paragraph">NFS エクスポートポリシーで使用する NAS オプション。デフォルトは「 default 」</block>
  <block id="c21f969b5f03d33d43e04f8f136e7682" category="paragraph">デフォルト</block>
  <block id="af6bd5b29a0589f7c6a47f47fae230c7" category="paragraph">プロビジョニングされた NFS ボリュームにアクセスするための NAS オプション（デフォルトは「 UNIX 」）</block>
  <block id="1d770934d44de09b0d24f04fd01708ba" category="paragraph">混在</block>
  <block id="79c6531f572824f3178c8b1fb0f35d26" category="paragraph">SAN オプション：ファイルシステムタイプを選択します。デフォルトは「 ext4 」です。</block>
  <block id="310201b6353c5f38bc039e0e51b079d3" category="paragraph">XFS</block>
  <block id="3cec6d01b4f10a61939982ecfb47fc7f" category="paragraph">使用する階層化ポリシー。デフォルトは「 none 」です。 ONTAP 9.5 より前の SVM-DR 構成では「 snapshot-only 」です</block>
  <block id="90adf331b7868c7af46ad6e035e93844" category="section-title">スケーリングオプション</block>
  <block id="493a6606c4789fad3c7317b99cb563d0" category="paragraph">「 ONTAP-NAS' 」ドライバと「 ONTAP-SAN' 」ドライバは、各 Docker ボリューム用の ONTAP FlexVol を作成します。ONTAP では、クラスタノードあたり最大 1 、 000 個の FlexVol がサポートされます。クラスタの最大 FlexVol 数は 12 、 000 です。Docker ボリューム要件がこの制限に適合する場合、「 ONTAP - NAS 」ドライバは FlexVol が提供する Docker ボリューム単位のスナップショットやクローン作成などの追加機能により、 NAS 解決策の方が望ましいとされます。</block>
  <block id="b8f30e4086b754ccaf7bd5d01d8df137" category="paragraph">FlexVol の制限で対応できる容量よりも多くの Docker ボリュームが必要な場合は、「 ONTAP - NAS - エコノミー」または「 ONTAP - SAN - エコノミー」ドライバを選択します。</block>
  <block id="50710f3a4715e3f874848944b6b54e28" category="paragraph">「 ONTAP - NAS - エコノミー」ドライバは、自動的に管理される FlexVol プール内の ONTAP qtree として Docker ボリュームを作成します。qtree の拡張性は、クラスタノードあたり最大 10 、 000 、クラスタあたり最大 2 、 40 、 000 で、一部の機能を犠牲にすることで大幅に向上しています。「 ONTAP - NAS - エコノミー」ドライバは、 Docker ボリューム単位のスナップショットまたはクローン作成をサポートしていません。</block>
  <block id="0c8b91c6c2ba9c892f3eea2cd9c86cd1" category="admonition">Swarm は複数のノード間でのボリューム作成のオーケストレーションを行わないため 'ONTAP-NAS-エコノミー のドライバは現在 Docker Swarm ではサポートされていません</block>
  <block id="5849dbe631db5b1e1b365f9f2f84ff60" category="paragraph">「 ONTAP と SAN の経済性」のドライバは、自動的に管理される FlexVol の共有プール内で、 ONTAP LUN として Docker ボリュームを作成します。この方法により、各 FlexVol が 1 つの LUN に制限されることはなく、 SAN ワークロードのスケーラビリティが向上します。ストレージアレイに応じて、 ONTAP はクラスタあたり最大 16384 個の LUN をサポートします。このドライバは、ボリュームが下位の LUN であるため、 Docker ボリューム単位の Snapshot とクローニングをサポートします。</block>
  <block id="65e92c8f7fa9750b795cc1046328cf06" category="paragraph">「 ONTAP-NAS-flexgroup 」ドライバを選択して、数十億個のファイルを含むペタバイト規模に拡張可能な 1 つのボリュームに並列処理を増やすことができます。FlexGroup のユースケースとしては、 AI / ML / DL 、ビッグデータと分析、ソフトウェアのビルド、ストリーミング、ファイルリポジトリなどが考えられます。Trident は、 FlexGroup ボリュームのプロビジョニング時に SVM に割り当てられたすべてのアグリゲートを使用します。Trident での FlexGroup のサポートでは、次の点も考慮する必要があります。</block>
  <block id="9d83b6d2e2b099e63bf8e2fc8c870893" category="list-text">ONTAP バージョン 9.2 以降が必要です。</block>
  <block id="e7c74973b26ad51b9db42a9c347a8cd4" category="list-text">本ドキュメントの執筆時点では、 FlexGroup は NFS v3 のみをサポートしています。</block>
  <block id="02a100b04add3b90fddef64499e825a2" category="list-text">SVM で 64 ビットの NFSv3 ID を有効にすることを推奨します。</block>
  <block id="496f8625569b787269edab0f3de973da" category="list-text">推奨される最小 FlexGroup サイズは 100GB です。</block>
  <block id="db78b2a7acf43fa03cd95fb3a77c82f9" category="list-text">FlexGroup Volume ではクローニングはサポートされていません。</block>
  <block id="f5ac1e3c252855373c7f660dbd89699d" category="inline-link">『 NetApp FlexGroup Volume Best Practices and Implementation Guide 』にある、ボリュームへの移行に関するセクション</block>
  <block id="df1a7e79743809601db1d20d6a33ae52" category="paragraph">FlexGroup と FlexGroup に適したワークロードの詳細については、を参照してください<block ref="b8a99695d7979127a1cab07b42e22743" category="inline-link-rx"></block>。</block>
  <block id="b30b6b60171d85877ea91897bdd6faed" category="paragraph">同じ環境で高度な機能と大規模な拡張性を実現するために 'ONTAP-NAS' を使用して Docker Volume Plugin の複数のインスタンスを実行し ' もう 1 つは「 ONTAP-NAS-エコノミー 」を使用して実行できます</block>
  <block id="0c0f6724044ed44fb85d2ce3193cb7c3" category="section-title">ONTAP 構成ファイルの例</block>
  <block id="9420b5e8ed08a163eeafb1d5026f74be" category="paragraph">*NFS は 'ONTAP-NAS' ドライバの例です</block>
  <block id="c26e7b2e60e156979940cd72ed83d0b9" category="paragraph">*NFS は 'ONTAP-NAS-flexgroup ドライバの例です</block>
  <block id="3a57e82fd5f9855754a03019c433aff7" category="paragraph">*NFS は 'ONTAP-NAS-エコノミー 'driver* の例です</block>
  <block id="2bfad97b56e71c619e45f6d4c2e4c2e2" category="paragraph">*iSCSI は 'ONTAP-SAN' ドライバの例です</block>
  <block id="98f803effb81ad687bcd941b70439aaa" category="paragraph">*NFS は 'ONTAP-SAN-エコノミー ドライバーの例です</block>
  <block id="ffe54c343031d16e77db73e2d950e277" category="section-title">Element ソフトウェアの設定</block>
  <block id="3afcd136a7bffa20fc39ba6581412cd2" category="paragraph">Element ソフトウェア（ NetApp HCI / SolidFire ）を使用する場合は、グローバルな設定値のほかに、以下のオプションも使用できます。</block>
  <block id="6f8cfcd7221d73b0e27985966dfd6e1f" category="paragraph"><block ref="608956a9224818c204ba64e5dd4b5f0c" category="inline-link-rx"></block></block>
  <block id="501aa777bd36217575e7547e7fed62cb" category="paragraph"><block ref="501aa777bd36217575e7547e7fed62cb" category="inline-link-rx"></block></block>
  <block id="c61f15977fe4efa0866eea87fb740cda" category="paragraph">iSCSI の IP アドレスとポート</block>
  <block id="6a6b63874c664c103982f6d422c6384e" category="paragraph">10.0.0.7 ： 3260</block>
  <block id="72deb2676231ab8e068ef60dd89edd4c" category="paragraph">使用する SolidFire テナント（見つからない場合に作成）</block>
  <block id="5eda5112bf8affeb1d2cd8eea6302076" category="paragraph">Docker です</block>
  <block id="d2672389886b173aef703433f7e4b89b" category="paragraph">iSCSI トラフィックをデフォルト以外のインターフェイスに制限する場合は、インターフェイスを指定します</block>
  <block id="5935dcd024929bc7086bb230802bf576" category="paragraph">以下の例を参照してください</block>
  <block id="5e9bf55f849ccc5a31a50d1fa784d28c" category="cell">「 LegacyNamePrefix 」のように入力します</block>
  <block id="db7adc3775b0b56c59ce4263fbd79fbf" category="paragraph">アップグレードされた Trident インストールのプレフィックス。1.3.2 より前のバージョンの Trident を使用していて、既存のボリュームをアップグレードする場合は、この値を設定して、ボリューム名メソッドを使用してマッピングされた古いボリュームにアクセスする必要があります。</block>
  <block id="8d3aa50a0f9c3c059677927a3fbbfcda" category="paragraph">「 netappdvp - 」</block>
  <block id="36f9c7b615268efec7f4c56c387a55bb" category="paragraph">「 olidfire -san 」ドライバは Docker Swarm をサポートしていません。</block>
  <block id="1059bb8540c48e6b455e802384bad65d" category="section-title">Element ソフトウェア構成ファイルの例</block>
  <block id="8898f8d83fe6ae40ee889ae1b53dd2a1" category="section-title">Cloud Volumes Service （ CVS ）を使用した AWS 構成</block>
  <block id="51a61fe7c333c9b247fa4a36f100af60" category="paragraph">CVS on AWS を使用する場合は、グローバル設定の値に加えて、次のオプションを使用できます。必要な値はすべて CVS Web ユーザインターフェイスで確認できます。</block>
  <block id="87cb49c3ba3ad2b7881daec6cbe2c058" category="paragraph">CVS アカウントリージョン（必須）。CVS Web ポータルの「アカウント設定」 &gt; 「 API アクセス」で確認できます。</block>
  <block id="ab62ad1f18caedc5173216159619af30" category="paragraph">「 us-east-1 」</block>
  <block id="72bb1da9c467950d42f276dd60372f9d" category="paragraph">CVS アカウント API URL （必須）。CVS Web ポータルの「アカウント設定」 &gt; 「 API アクセス」で確認できます。</block>
  <block id="90ecc3761b44b9c5f99193048d67b991" category="paragraph">「 https://cds-aws-bundles.netapp.com:8080/v1”</block>
  <block id="14d4df12da21ca887a11026db7d26c5a" category="paragraph">CVS アカウントの API キー（必須）。CVS Web ポータルの「アカウント設定」 &gt; 「 API アクセス」で確認できます。</block>
  <block id="49df949d63ad2fe5a679bea21beb739f" category="paragraph">CVS アカウントのシークレットキー（必須）。CVS Web ポータルの「アカウント設定」 &gt; 「 API アクセス」で確認できます。</block>
  <block id="eccfbdf9565fdb1f0b53121d07c0ca4d" category="paragraph">CVS アカウントへの接続にプロキシサーバが必要な場合は、プロキシ URL を指定します。プロキシサーバには、 HTTP プロキシまたは HTTPS プロキシを使用できます。HTTPS プロキシの場合、証明書の検証は省略され、プロキシサーバで自己署名証明書が使用されるようになります。* 認証が有効になっているプロキシサーバーはサポートされていません * 。</block>
  <block id="58b40a255bdd79778c81b51b0189d3bc" category="paragraph">「 http://proxy-server-hostname/”</block>
  <block id="1fc4f89077ac8f740a8209cb13dad780" category="paragraph">NFS マウントオプション。デフォルトは「 -o nfsvers=3 」です。</block>
  <block id="c0c057b1fbdbb4b3fbff5af024800013" category="paragraph">「 nfsvers=3 、 proto=tcp 、 timeo=600 」</block>
  <block id="989640232ebd1cee1600241dcaf3092b" category="paragraph">パフォーマンスレベル（標準、プレミアム、エクストリーム）、デフォルトは「標準」</block>
  <block id="6dc6830d3f5eeef9925e20cb2872face" category="paragraph">Premium サービス</block>
  <block id="4c4783b692750885787114cffe439cc4" category="admonition">NetApp Cloud Volumes Service for AWS では、サイズが 100GB 未満のボリュームはサポートされていません。Trident では、アプリケーションの導入を容易にするために、より小さいボリュームが要求された場合に、 100GB のボリュームが自動的に作成されます。</block>
  <block id="2141207c4b192cfda3ca9862d3051c75" category="paragraph">AWS で CVS を使用している場合は、以下のデフォルトのボリュームオプション設定が使用できます。</block>
  <block id="0b4473f186b60c3a658cb10df719e6e7" category="paragraph">NFS アクセスリスト（アドレスおよび CIDR サブネット）。デフォルトは「 0.0.0.0/0 」です。</block>
  <block id="4fd06576654815d69b61384ef4f9e084" category="paragraph">「 10.0.1.0/24,10.0.2.100 」</block>
  <block id="6cac9fafaf62c70b75f827e614328121" category="paragraph">スナップショット予約の割合。デフォルトでは、 CVS のデフォルト値である 0 を使用します</block>
  <block id="c669350437225628cf4fcc3d0ec9d8f6" category="paragraph">10.</block>
  <block id="24e52229704d0addd6cb9915c2e78093" category="paragraph">ボリュームサイズ、デフォルトは「 100 GB 」</block>
  <block id="36a1049642c95770e66c6905f890a00a" category="paragraph">「 500G 」</block>
  <block id="f0fe7c79add8387e161dd776e6af2313" category="section-title">CVS on AWS 構成ファイルの例</block>
  <block id="4c4a4e3967b80166b1c89a42bb702c5c" category="section-title">GCP 上の Cloud Volumes Service （ CVS ）構成</block>
  <block id="c731f72e1d22a7c5e01a7cb789a8885e" category="inline-link">GCP</block>
  <block id="16aba044aae8d4a1f104875fadfa8b7a" category="paragraph">Trident に、デフォルトの CVS サービスタイプが on に設定された小規模なボリュームがサポートされるようになりました<block ref="ba449b67e05ccd893d094c64611dfdac" category="inline-link-rx"></block>。「 torageClass=software 」で作成されたバックエンドの場合、ボリュームのプロビジョニングサイズは最小 300GiB になります。* 非本番環境のワークロード用に 1TiB 未満のボリュームを使用することを推奨 * 。現在、 CVS ではこの機能が限定的な可用性で提供されており、テクニカルサポートは提供されていません。</block>
  <block id="6d43083e1ac79c6ae1d612b064c50415" category="admonition">1TiB 未満のボリュームにアクセスするには、サインアップします<block ref="daab940ca038632df7b3bcdb2ce67b4b" category="inline-link-rx"></block>。</block>
  <block id="13c75fbfea8d654533aa97741ee726eb" category="admonition">デフォルトの CVS サービスタイプ「 torageClass=software 」を使用してバックエンドを導入する場合は、該当するプロジェクト番号とプロジェクト ID の GCP の sub1TiB ボリューム機能へのアクセス権を取得する必要があります。これは Trident で sub-1TiB ボリュームのプロビジョニングに必要です。そうでない場合、ボリュームの作成に失敗します。 PVC が 600 GiB 未満の場合。を使用して 1TiB 未満のボリュームへのアクセスを取得します<block ref="d5347d47b24e3303f1c7b0ae61e08dc7" category="inline-link-rx"></block>。</block>
  <block id="8a5a1d824b8678ed57f0b091512af961" category="paragraph">デフォルトの CVS サービスレベル用に Trident で作成されたボリュームは次のようにプロビジョニングされます。</block>
  <block id="17e388f76e4ab809d67d7da3f508f16e" category="list-text">300GiB 未満の PVC があると、 Trident によって 300GiB の CVS ボリュームが作成されます。</block>
  <block id="c12c279867b9062aac25467988994298" category="list-text">300GiB から 600GiB の PVC があると、 Trident が要求されたサイズの CVS ボリュームを作成します。</block>
  <block id="4ff78214fe676a45289036b058361170" category="list-text">600GiB から 1TiB までの PVC の場合、 Trident によって 1TiB の CVS ボリュームが作成されます。</block>
  <block id="de59c7ff95f1d72edb04ee0b3b70de27" category="list-text">1TiB を超える PVC の場合、 Trident は要求サイズの CVS ボリュームを作成します。</block>
  <block id="49821db5dac692677dc0f49801db61dd" category="paragraph">GCP で CVS を使用する場合は、グローバル構成の値に加えて、次のオプションも使用できます。</block>
  <block id="2ecba853d55bf844defef38593bfeddd" category="paragraph">CVS アカウントリージョン（必須）。は、このバックエンドがボリュームをプロビジョニングする GCP リージョンです。</block>
  <block id="91730af327707bec713a5f18f6d8df6a" category="paragraph">「 us-west2 」</block>
  <block id="44242a2deef719f96982e82f0be8fc65" category="paragraph">GCP プロジェクト番号（必須）。GCP Web ポータルのホーム画面にあります。</block>
  <block id="d4445a55440abc4ee9235c02b46555b3" category="paragraph">“ 123456789012 ”</block>
  <block id="1a269fb3ec0496720ca75e984d8de40e" category="cell">「 hostProjectNumber 」</block>
  <block id="e34e53c32d906addf366532becb0dcd1" category="paragraph">GCP 共有 VPC ホストプロジェクト番号（共有 VPC を使用する場合は必須）</block>
  <block id="efd711f7b98e2f0003cbf70aa18a14c0" category="paragraph">「 098765432109 」</block>
  <block id="2c3fb314d5e72bbcae6b7a25d5b8edaa" category="paragraph">CVS admin ロールを持つ GCP サービスアカウントの API キー（必須）。は、 GCP サービスアカウントの秘密鍵ファイルの JSON 形式のコンテンツです（バックエンド構成ファイルにそのままコピーされます）。サービスアカウントには netappcloudvolumes .admin ロールが必要です。</block>
  <block id="6a17ea7b1fdab79ffd3eddf255aaf46d" category="paragraph">（秘密鍵ファイルの内容）</block>
  <block id="1631dca111b8c1a922c7f29d48eb7121" category="cell">「ネットワーク」</block>
  <block id="bbf068b3542ca7b12963602ea10acbfa" category="paragraph">CVS ボリュームに使用される GCP ネットワーク。デフォルトは「 default 」です。</block>
  <block id="69cd8c867e8af214f6e9c04138d56ff5" category="admonition">共有 VPC ネットワークを使用する場合は、「 ProjectNumber 」と「 hostProjectNumber 」の両方を指定する必要があります。その場合、「 ProjectNumber 」はサービスプロジェクト、「 hostProjectNumber 」はホストプロジェクトです。</block>
  <block id="ac4650c60f6238dc7461aa20cf40d081" category="admonition">NetApp Cloud Volumes Service for GCP では、サイズが 100GiB 未満の CVS パフォーマンスボリュームや 300GiB 未満の CVS ボリュームはサポートされていません。アプリケーションの導入を容易にするために、ボリュームサイズが小さすぎる場合は、 Trident によって最小サイズのボリュームが自動的に作成されます。</block>
  <block id="0075471554ab0900a2a82a3481e9d1a2" category="paragraph">GCP で CVS を使用している場合は、これらのデフォルトのボリュームオプション設定を使用できます。</block>
  <block id="7946d615645dcc579e9f7d0ea1ab5dce" category="paragraph">ボリュームサイズ、デフォルトは「 100GiB 」</block>
  <block id="6dd08dbe0437571ae84c751c0d9e7db2" category="paragraph">「 10T 」</block>
  <block id="14d7cea065a37d05840128a2193e5d0b" category="section-title">GCP 上の CVS 構成ファイルの例</block>
  <block id="e303017ec184887efb9bebcc178d78c5" category="section-title">Azure NetApp Files 構成</block>
  <block id="83e44b4ce45c0f8e6a65a21d4dd12587" category="paragraph">を設定して使用します<block ref="24a785881ff1cdf191a2239811dc9597" category="inline-link-rx"></block> バックエンドには、次のものが必要です。</block>
  <block id="3f72ed4087b557a1841662fa1eec0927" category="list-text">Azure NetApp Files が有効な Azure サブスクリプションのスクリプト ID</block>
  <block id="8f2cfe6996e4a915299313c85a777630" category="list-text">「 tenantID 」、「 clientID 」、「 clientSecret 」を「」から選択します<block ref="8cf7d0e47908a64c9538530ae13f3b17" category="inline-link-rx"></block> Azure Active Directory で、 Azure NetApp Files サービスに対する十分な権限がある</block>
  <block id="761f4d4786b8e1a6c65bf01f90ff17cd" category="list-text">Azure ロケーションに少なくとも 1 つ以上が含まれている<block ref="c5f14b2142014dc234282a513132bad4" category="inline-link-rx"></block></block>
  <block id="dc2194d6594556ab2ec2b961b22b55a9" category="admonition">初めて Azure NetApp Files を使用している場合や、新しい場所で を使用している場合は、そのような初期設定が必要になります<block ref="03c0e2c26eabaafc3ff886c9295f214c" category="inline-link-rx"></block> ご案内します。</block>
  <block id="9fc00ac6b0164174fe95b39347777acf" category="paragraph">「 azure-NetApp-files 」</block>
  <block id="150fed11d160cf3a20a84935a6da6b2f" category="paragraph">ストレージバックエンドのカスタム名</block>
  <block id="8c6cd78048829f0726a268945284d717" category="paragraph">ドライバ名 + "_" + ランダムな文字</block>
  <block id="2c07e9234f0df0d4c8887a04f7e641fe" category="paragraph">アプリケーション登録からのクライアント ID</block>
  <block id="f68b03078b004c148f3382adb3803512" category="paragraph">「 Standard 」、「 Premium 」、「 Ultra 」のいずれか</block>
  <block id="48483edc045345a516ed748c1964e3bf" category="paragraph">「」（ランダム）</block>
  <block id="544e534f1aa0d97c48ccedd92fe2ba3d" category="paragraph">新しいボリュームを作成する Azure の場所の名前をに指定します</block>
  <block id="64984096fbf22f0a2b49f000ac843834" category="paragraph">NFS マウントオプションのきめ細かな制御</block>
  <block id="c9266840071171609b858a86983e5cbc" category="paragraph">「 -o nfsvers=3 」</block>
  <block id="bb7d88b29e22a86389e711d24d78d8b0" category="admonition">Azure NetApp Files サービスでは、サイズが 100GB 未満のボリュームはサポートされません。Trident では、アプリケーションの導入を容易にするために、より小さいボリュームが要求された場合に、 100GB のボリュームが自動的に作成されます。</block>
  <block id="c73b8a061778625d86923a1ee3b2b65a" category="paragraph">これらのオプションを使用して、構成の特別なセクションで各ボリュームをデフォルトでプロビジョニングする方法を制御できます。</block>
  <block id="9aef9232b6d23ad9af140b946025a2e9" category="paragraph">新しいボリュームのエクスポートルール。CIDR 表記の IPv4 アドレスまたは IPv4 サブネットの任意の組み合わせをカンマで区切って指定する必要があります。</block>
  <block id="5b080068f6b7a62124d4bbe75e0ccebe" category="paragraph">「 0.0.0.0/0 」</block>
  <block id="cf4ad5c346075cb763a78a1eeb590f67" category="paragraph">「 100G 」</block>
  <block id="c26659d1a1cc7dd886f591fd462c9b91" category="section-title">Azure NetApp Files 構成の例</block>
  <block id="b735d2db48e665b21117295550615ff3" category="paragraph">* 例 1 ： azure-NetApp-files* のバックエンドの最小構成</block>
  <block id="c9ed1200ddf4fe7e1e4120cb35885310" category="paragraph">これは、バックエンドの絶対的な最小構成です。この構成では、 Trident がお客様のネットアップアカウント、容量プール、および ANF に委譲されたサブネットをすべて検出し、新しいボリュームをいずれかの場所にランダムに配置します。</block>
  <block id="c31e8cd6c5230f025186373673347b9c" category="paragraph">この構成は、 ANF の利用を開始して問題を解決するのに役立ちます。 しかし実際には、プロビジョニングするボリュームの範囲を追加して、必要な特性を確実に持ち、それを使用しているコンピューティングに近いネットワーク上で終了するようにします。詳細については、以降の例を参照してください。</block>
  <block id="189a6649956b03bce537a5eb6247fc83" category="paragraph">* 例 2 ： Azure NetApp Files の単一の場所と特定のサービスレベル *</block>
  <block id="0f10d4c5e31fffa777f19dd757816f93" category="paragraph">このバックエンド構成では、 Azure の「 eastus 」ロケーションにボリュームを「 Premium 」容量プールに配置します。Trident は、 ANF に委任されているすべてのサブネットを自動的に検出し、いずれかのサブネットに新しいボリュームをランダムに配置します。</block>
  <block id="418698e54dde6b45a123af5be774679e" category="paragraph">* 例 3 ： azure-NetApp-files* の高度な設定</block>
  <block id="75f9eb2b518c3ec9d39a7c1f8b4b94a9" category="paragraph">* 例 4 ： azure-NetApp-files* を使用する仮想ストレージプール</block>
  <block id="e0b432486549d4404054c64e947ef84e" category="inline-link-macro">ストレージのプール</block>
  <block id="b0e0c2dae5878f7a113284ddd0f3c6c2" category="paragraph">このバックエンド構成では、複数のが定義され <block ref="a2da53ffe8493aa084053197c8de9b91" category="inline-link-macro-rx"></block> 1 つのファイルに格納できます。これは、異なるサービスレベルをサポートする複数の容量プールがあり、それらを表すストレージクラスを Kubernetes で作成する場合に便利です。</block>
  <block id="8b4e612e7ec021b91bdf46a69c393a75" category="paragraph">仮想ストレージプールの機能の表面に、ラベルが貼られています。</block>
  <block id="27dce2b92c5c5b89e353888e6cb24dea" category="summary">使用中のボリュームに影響を与えることなく、 Astra Trident for Docker を安全にアップグレードできます。アップグレード処理中に、プラグインで指示された「 Occker volume 」コマンドが正常に実行されず、プラグインが再度実行されるまでアプリケーションはボリュームをマウントできません。ほとんどの場合、これは秒の問題です。</block>
  <block id="0350c5473efd300324aaaadeecc676d2" category="doc">Astra Trident をアップグレードまたはアンインストールする</block>
  <block id="f683581d3e75f05f9d9215f9b4696cef" category="section-title">アップグレード</block>
  <block id="ed279061e829314cb0dc7a1708ca5e5b" category="list-text">既存のボリュームを表示します。</block>
  <block id="7c256ad076320e18e087b238e9063f3f" category="list-text">プラグインを無効にします。</block>
  <block id="f4ea3e4191f5bda0b91e08059bf9842a" category="list-text">プラグインをアップグレードします。</block>
  <block id="b2449107a206e37587b47513f76a7b27" category="admonition">nDVP に代わる、 Astra Trident の 18.01 リリース。NetApp/ndvp-plugin イメージから NetApp/trident-plugin` イメージに直接アップグレードする必要があります。</block>
  <block id="824ba648551a27da6c43705bcd663830" category="list-text">プラグインを有効にします。</block>
  <block id="e4c48899ce42f4eb019f54a1a8e66560" category="list-text">プラグインが有効になっていることを確認します。</block>
  <block id="c4d884c606b57bb6cb43864e3499d5a2" category="list-text">ボリュームが表示されることを確認します。</block>
  <block id="103e515a078c6f2419abc4c84554d67c" category="admonition">古いバージョンの Astra Trident （ 20.10 より前）から Astra Trident 20.10 以降にアップグレードすると、エラーが発生する場合があります。詳細については、を参照してください <block ref="6d21ff1c2708107ac3f4ed1a6e27b449" category="inline-link-macro-rx"></block>。このエラーが発生した場合は、まずプラグインを無効にしてから、プラグインを削除し、必要な Astra Trident バージョンをインストールします。これには、「 d Occker plugin install NetApp/trident-plugin:20.10 --alias netapp --grant-all -permissions config=config.json 」という追加設定パラメータを渡します</block>
  <block id="a27dfe771799a09fd55fea73286eb6ab" category="section-title">をアンインストールします</block>
  <block id="7578be09dc225364649898a30619a336" category="paragraph">Astra Trident for Docker をアンインストールするには、次の手順を実行します。</block>
  <block id="867d93c3d1de0e8e75fa408cfadcbba5" category="list-text">プラグインで作成されたボリュームをすべて削除します。</block>
  <block id="4a28a108f39c07ac09218644ca6e9bb0" category="list-text">プラグインを削除します。</block>
  <block id="c412f3b9b270250331aa1ef4102ef8c1" category="summary">複数のストレージ構成を同時に使用する場合は、 Astra Trident の複数のインスタンスが必要です。複数のインスタンスにキーを渡すには、コンテナ化されたプラグインで --alias オプションを使用して、ホストで Trident をインスタンス化するときに --volume-driver オプションを使用して、さまざまな名前を指定します。</block>
  <block id="4f07a71d2e33da91dec1396b7a204a40" category="doc">複数の Astra Trident インスタンスを管理</block>
  <block id="8f327f2ceda84404290184a7454160ed" category="paragraph">複数のストレージ構成を同時に使用する必要がある場合は、 Trident の複数のインスタンスが必要です。複数のインスタンスの鍵は、コンテナ化されたプラグインでは「 --alias 」オプション、ホストで Trident をインスタンス化する場合は「 --volume-driver 」オプションを使用して、それぞれ異なる名前を指定することです。</block>
  <block id="52ef1c6ffefaba3249f208369424635d" category="section-title">Docker Managed Plugin （バージョン 1.13 / 17.03 以降）の手順</block>
  <block id="547c4a5f7c863aad85f5265c03ed72ea" category="list-text">エイリアスと構成ファイルを指定して、最初のインスタンスを起動します。</block>
  <block id="991ac134f22efa2bb955362d95827ae5" category="list-text">別のエイリアスと構成ファイルを指定して、 2 番目のインスタンスを起動します。</block>
  <block id="aa0dc0ac69e69c434317798e1aa9842b" category="list-text">ドライバ名としてエイリアスを指定するボリュームを作成します。</block>
  <block id="5ae25a45ab76de161f87fc41a84f746d" category="paragraph">たとえば、 gold ボリュームの場合：</block>
  <block id="6dab7c53f6e3de2eae52e928dfe5b861" category="paragraph">たとえば、 Silver ボリュームの場合：</block>
  <block id="67754cb209925946943e297b3a8be344" category="section-title">従来の（バージョン 1.12 以前）の場合の手順</block>
  <block id="cbd128765e82966ed5e454a99b22e688" category="list-text">カスタムドライバ ID を使用して NFS 設定でプラグインを起動します。</block>
  <block id="51c923daa4caf6aea6d24201b73871b6" category="list-text">カスタムドライバ ID を使用して、 iSCSI 構成でプラグインを起動します。</block>
  <block id="dd72ade865d731ba8f6a6fc4c8ccd86f" category="list-text">ドライバインスタンスごとに Docker ボリュームをプロビジョニングします。</block>
  <block id="8e2044cc9d4e8f515ad4809a68d75465" category="paragraph">たとえば、 NFS の場合：</block>
  <block id="d39eb6e4299503c5d451d19b9645be42" category="paragraph">たとえば、 iSCSI の場合：</block>
  <block id="c2bccf4258de19dd1e03e25f66d80f98" category="summary">Astra Trident と Docker を使用する際の既知の問題に関する情報を入手できます。</block>
  <block id="3a3b7ac2e39541ea05707ccd6eb054d4" category="doc">既知の問題および制限事項</block>
  <block id="ba6bb78ba304725781af9e773f1957e2" category="paragraph">Astra Trident と Docker を使用する際の既知の問題と制限事項について説明しています。</block>
  <block id="8bb35988eac5a841d2af092365f1aa42" category="section-title">Trident Docker Volume Plugin を旧バージョンから 20.10 以降にアップグレードすると、該当するファイルエラーまたはディレクトリエラーなしでアップグレードが失敗します。</block>
  <block id="7aebfa1e2291377e040de92d7f7f335f" category="list-title">回避策</block>
  <block id="f49f11bc5398ac13e500d16eac424e77" category="list-text">プラグインを無効にします。</block>
  <block id="cc3dae6dd6670606c41c62b10273605e" category="list-text">プラグインを削除します。</block>
  <block id="6010901b5c4bb6ad671e6f07fcc038d8" category="list-text">追加の 'config' パラメータを指定して ' プラグインを再インストールします</block>
  <block id="e527ab8c1c51767e38a3603d51d2d6e5" category="section-title">ボリューム名は 2 文字以上にする必要があります。</block>
  <block id="45c9df594d13c8a5e5472503d5f14b01" category="inline-link">バグ 25773 を参照</block>
  <block id="c167efd138e06a8ee59885983c5ddf69" category="admonition">これは Docker クライアントの制限事項です。クライアントは、 1 文字の名前を Windows パスと解釈します。<block ref="f082f49b923960d888c1d98a1e9f4fcb" category="inline-link-rx"></block>。</block>
  <block id="3c4f022a33d4aace82350c9966fa238b" category="section-title">Docker Swarm には、 Astra Trident がストレージやドライバのあらゆる組み合わせでサポートしないようにする一定の動作があります。</block>
  <block id="a7c3ff464b1ef4364de4df03d66bee5e" category="list-text">Docker Swarm は現在、ボリューム ID ではなくボリューム名を一意のボリューム識別子として使用します。</block>
  <block id="61ab6f5cff8de89cba95d9e3bbc4ff71" category="list-text">ボリューム要求は、 Swarm クラスタ内の各ノードに同時に送信されます。</block>
  <block id="521e51548c3f7c96e72d432edf4af42d" category="list-text">ボリュームプラグイン（ Astra Trident を含む）は、 Swarm クラスタ内の各ノードで個別に実行する必要があります。ONTAP の仕組みと 'ONTAP-NAS' および 'ONTAP-SAN' ドライバの機能の仕組みにより ' これらの制限の範囲内で動作できるのはこれらのドライバだけです</block>
  <block id="69418caf7b92279073f695612c68de99" category="paragraph">その他のドライバには、競合状態などの問題があります。このような問題が発生すると、ボリュームを同じ名前で異なる ID にする機能が Element に備わっているため、「勝者」を明確にせずに 1 回の要求で大量のボリュームを作成できるようになります。</block>
  <block id="48cbf13b390ff021b130d5f372147af5" category="paragraph">ネットアップは Docker チームにフィードバックを提供しましたが、今後の変更の兆候はありません。</block>
  <block id="29cff148f43bc689eb14447b333f6f83" category="section-title">FlexGroup をプロビジョニングする場合、プロビジョニングする FlexGroup と共通のアグリゲートが 2 つ目の FlexGroup に 1 つ以上あると、 ONTAP は 2 つ目の FlexGroup をプロビジョニングしません。</block>
  <block id="d327e8f24b63b83e091dccdc48dd7b1b" category="sidebar">Astra Trident のドキュメント</block>
  <block id="7d0ee6fed10d3d4e5c9ee496729ab519" category="sidebar">リリースノート</block>
  <block id="93168a8084b3e838d2932c4734bd234e" category="sidebar">以前のバージョン</block>
  <block id="0629fb104936d0fb60cc736b6cb01caa" category="sidebar">Astra Trident の要件</block>
  <block id="33871b6190a8d5adbe8b15282054766c" category="sidebar">新機能</block>
  <block id="1fe917b01f9a3f87fa2d7d3b7643fac1" category="sidebar">よく寄せられる質問</block>
  <block id="312b0dc38b01ff32c1b2f5f81ee1ab2d" category="sidebar">Trident オペレータとともに導入</block>
  <block id="e0e3d7f1aacdf4a8196132549709430c" category="sidebar">tridentctl を使用して導入します</block>
  <block id="6a693eb5cd23e4e5743663c7edc37aed" category="sidebar">Astra Trident for Docker を導入</block>
  <block id="386307d41b3f4169a1e6e046a727cdd2" category="sidebar">Trident のオペレータにアップグレード</block>
  <block id="2a21586f7990f8cb0f8951cd2ef7bc3b" category="sidebar">tridentctl を使用してアップグレードします</block>
  <block id="eb1f347fa6176ae2c9175df3bc414954" category="sidebar">Astra Trident を使用</block>
  <block id="a8e174c63ac21920b8405ffddc39214a" category="sidebar">kubectl を使用してバックエンドを作成します</block>
  <block id="81a123ccab93cd947289b672b0e50348" category="sidebar">デモチュートリアル</block>
  <block id="28348a71bed382b86fa6de4d3a307715" category="sidebar">Astra Trident のビデオ</block>
  <block id="813011e2103649bb71f124adedcc10ea" category="sidebar">ブログコミュニティ</block>
  <block id="6394eceb2639574114b02e6e817eb19a" category="sidebar">Astra ブログ</block>
  <block id="874d8a5301794a9ca2aba132ac2460f3" category="sidebar">Kubernetes ハブ</block>
  <block id="d59c00abbeaf33a9a094b3a69c563405" category="sidebar">netapp.io のコマンドです</block>
  <block id="63d5049791d9d79d86e9a108b0a999ca" category="sidebar">参照</block>
  <block id="324fb1352ffffb105d10013810c42896" category="sidebar">Kubernetes と Astra Trident オブジェクト</block>
  <block id="a20f982d79c3dd66d244ffe0f7d940ee" category="sidebar">ベストプラクティスと推奨事項</block>
  <block id="c91cf7abea9584bc1edbc8ff4948ada0" category="sidebar">Trident を統合</block>
  <block id="c949166d6970748c0094c800daa3324a" category="sidebar">Trident で Astra を管理</block>
  <block id="0460583622f03a52d7693094d6fa2452" category="sidebar">概念</block>
  <block id="bbe2bfefd5797bb567e3da92f68ce8d1" category="sidebar">tridentctl 展開をカスタマイズします</block>
  <block id="58eaebf972358f1cf03d386a4ade1a0f" category="sidebar">次の手順</block>
  <block id="cc4a0df2c635530d752308ab5a1c4b89" category="sidebar">ANF バックエンドを設定します</block>
  <block id="bffb766af67c15f14cae35f03dd6f4a9" category="sidebar">kubectl を使用してバックエンド管理を実行します</block>
  <block id="748a22b5f1312291ad55429ba4b809a0" category="sidebar">tridentctl を使用してバックエンド管理を実行します</block>
  <block id="f14894e4c400a400c02367258a93029a" category="sidebar">Trident for Docker が必要です</block>
  <block id="e08bfc79c5202517b3814efd6e82fb2c" category="sidebar">Trident をアップグレードまたはアンインストールする</block>
  <block id="1b6ea3b57d23007f55ba778700bc369c" category="inline-link">ドキュメントの ealier バージョン</block>
  <block id="f14a1d8e56a0cbd2826edd38778371f7" category="admonition">ステータスに「更新中」と表示される場合は、続行する前に解決してください。可能なステータス値のリストについては、を参照してください<block ref="6aefd1c9ce8e43313a8c7c92e2fac4f3" category="inline-link-rx"></block>。</block>
  <block id="ea3d51fb2b16acb7cb260f25bc8965b1" category="summary">Astra Trident は、ネットアップが管理しているオープンソースのストレージプロビジョニングおよびオーケストレーションツールです。このコンテナを使用すると、 Docker と Kubernetes で管理されるコンテナ化アプリケーション用のストレージボリュームを作成できます。</block>
  <block id="05d68d1b7214c73141ed12aaed0c2ab5" category="list-text">Trident ログに十分な情報がない場合は、インストールオプションに基づいてインストールパラメータに「 -d 」フラグを渡して、 Trident のデバッグモードを有効にしてみてください。</block>
  <block id="bc6de9cad530a57dba08ff711f4a6b5f" category="paragraph">次に './tridentctl logs -n trident` を使用して debug が設定され ' ログ内で 'level=debug msg' を検索していることを確認します</block>
  <block id="8e95ae46f32b05cf983c93e608530e36" category="list-text">オペレータとともにインストールされます</block>
  <block id="6a304a6cf7cd8c90bac892ab0fb9c134" category="paragraph">Astra Trident 20.07 と 20.10 では、「 Torc 」の代わりに「 tprov 」を使用します。</block>
  <block id="79b91d0489c081de6794796638793787" category="list-text">Helm とともにインストールされます</block>
  <block id="d356d628089d439d75e3f85564372658" category="list-text">tridentctl を使用してインストールされます</block>
  <block id="91bffb05ce7b35189932ad387d14e41b" category="paragraph">「 apiRegion 」は、 Astra Trident が CVS ボリュームを作成する GCP リージョンです。複数リージョンの Kubernetes クラスタを作成する場合、「 apiRegion 」で作成した CVS ボリュームは、複数の GCP リージョンのノードでスケジュールされたワークロードで使用できます。リージョン間トラフィックは追加コストがかかることに注意してください。</block>
  <block id="31842a4ad923dd3481336d7d93dc2068" category="list-text">クロスリージョンアクセスを有効にするには、「 allowedTopologies 」の StorageClass 定義にすべてのリージョンを含める必要があります。例：</block>
  <block id="433f174b6e54b889696b2efd4ef40dc6" category="admonition">Trident REST インターフェイスは、 127.0.0.1 （ IPv4 の場合）または [::1] （ IPv6 の場合）のみをリスンして処理するように設定できます。</block>
  <block id="1968a7e86875b6b6ca9d5222172f8d16" category="list-text">`--http-request-timeout`: Trident コントローラの REST API の HTTP 要求タイムアウトをオーバーライドします ( デフォルトは 1 分 30s) 。</block>
  <block id="705db3afa1c1d4451f7b0f7f8552f1b5" category="list-text">Kubernetes 1.17 以降を実行するサポート対象の Kubernetes クラスタに対するすべての権限が必要です。</block>
  <block id="3b4c548466953befff1962ac2426cb8e" category="paragraph">Kubernetes のバージョンが 1.17 よりも新しいかどうかを確認するには、次のコマンドを実行します。</block>
  <block id="cf282b9c05ab0f84b1690e644cd3f68e" category="list-text">「 ONTAP-NAS-flexgroup 」ドライバの場合、各永続ボリューム（ PV ）は FlexGroup にマッピングされます。その結果、ボリューム Snapshot は NetApp FlexGroup Snapshot として作成されます。NetApp のスナップショット・テクノロジーは ' 競合するスナップショット・テクノロジーよりも高い安定性 ' 拡張性 ' リカバリ性 ' パフォーマンスを提供しますSnapshot コピーは、作成時とストレージスペースの両方で非常に効率的です。</block>
  <block id="ba9e76e1be4705136fd15fd947717d07" category="paragraph">現在のところ ' オンデマンドスナップショットのサポートは 'ONTAP-NAS'`ONTAP-NAS-flexgroup 'ONTAP-SAN`'ONTAP-SANエコノミー ''solidfire-san-SAN'''solidfire-san-''''solidfire-san-'''solidfire-san-''''' で利用できます 「 aws -cvs 」、「 gcp-cvs 」、「 azure-NetApp-files 」バックエンドドライバ。</block>
  <block id="b89df534de66f446ec6482f9d7898bb2" category="cell">controller'PluginNodeSelector</block>
  <block id="15cfc4bea44cee69551eb577fb0dcd8a" category="cell">Trident Controller CSI プラグインを実行しているポッドの追加ノードセレクタ。pod.spec.nodeSelector と同じ形式を使用します。</block>
  <block id="8d414af35aeb82413205fa45551a5545" category="cell">デフォルトはありません。オプションです</block>
  <block id="df1f367efe879ec0030f43610e29c5af" category="cell">controllerPluginTolerations</block>
  <block id="2fba8e7843d1d343f2fe29feeca4b34d" category="cell">Trident Controller CSI プラグインを実行しているポッドに対する許容値を上書きします。POD .spec.Toleratations と同じ形式を使用します。</block>
  <block id="47a441037628a3c0f0edb0daccb33f99" category="cell">「 nodePluginNodeSelector 」</block>
  <block id="109ef057002ce8b5901039ee5b81df88" category="cell">Trident ノード CSI プラグインを実行しているポッドの追加ノードセレクタ。pod.spec.nodeSelector と同じ形式を使用します。</block>
  <block id="f297db5a937924105908a365d9d4c4ff" category="cell">「 nodePluginTolerations` 」</block>
  <block id="01fae47efea3407f5bc27a09eea8709c" category="cell">Trident Node CSI プラグインを実行しているポッドに対する許容値を上書きします。POD .spec.Toleratations と同じ形式を使用します。</block>
  <block id="4352a1b4e004cf57ac04661a18de43aa" category="inline-link-macro">ポッドをノードに割り当てます</block>
  <block id="b3b67fd79d24b4873c8164c750c21798" category="admonition">ポッドパラメータの書式設定の詳細については、を参照してください <block ref="7b3a69fdac08c769183925679da4c365" category="inline-link-macro-rx"></block>。</block>
  <block id="d6601a8eb863a49ea065281f70a5956b" category="summary">Astra Trident は、ネットアップが Astra 製品ファミリーの一部として管理している、完全にサポートされているオープンソースプロジェクトです。Container Storage Interface （ CSI ）などの業界標準のインターフェイスを使用して、コンテナ化されたアプリケーションの永続性に対する要求を満たすことができるように設計されています。</block>
  <block id="bb453665f57f6823950856f7a9bad0c3" category="inline-link-macro">Astra 製品ファミリー</block>
  <block id="9f469e7cb13566d8a664e8ab4d46f9e1" category="paragraph">Astra Trident は、ネットアップがの一部として管理している、完全にサポートされているオープンソースプロジェクトです <block ref="a1650a2308dbba03b9ca704756a5a37d" category="inline-link-macro-rx"></block>。Container Storage Interface （ CSI ）などの業界標準のインターフェイスを使用して、コンテナ化されたアプリケーションの永続性に対する要求を満たすことができるように設計されています。</block>
  <block id="fdc319eb193763016bf0bff75d0c0abc" category="paragraph">Kubernetes クラスタにポッドとして Trident を導入し、 Kubernetes ワークロードに動的なストレージオーケストレーションサービスを提供コンテナ化されたアプリケーションは、 ONTAP （ AFF / FAS / Select / Cloud / Amazon FSX for NetApp ONTAP ）、 Element ソフトウェア（ NetApp HCI / SolidFire ）、 Astra データストア、 Azure NetApp Files サービス、 Cloud Volumes Service on Google Cloud 、 Cloud Volumes Service on AWS など、ネットアップの幅広いポートフォリオの永続的ストレージをすばやく簡単に消費できます。</block>
  <block id="165fe4b78b5877cf8db8ac6361e5c85a" category="paragraph">Astra のページで無料トライアルに登録できます。</block>
  <block id="d13de4a83d7b44c2e65495def8ef1c7b" category="section-title">を参照してください。</block>
  <block id="fa80e31eb77798b8dd995ddd9553be6e" category="inline-link">ネットアップアストラ製品ファミリー</block>
  <block id="ed394f5572d8e7df474126557b3288f8" category="list-text"><block ref="ed394f5572d8e7df474126557b3288f8" category="inline-link-rx"></block></block>
  <block id="ef22ff17624b3faeed227ce5c717eb5f" category="inline-link">Astra Control Service のマニュアル</block>
  <block id="0ae0ea6967e9321db008cee4ad5f290c" category="list-text"><block ref="0ae0ea6967e9321db008cee4ad5f290c" category="inline-link-rx"></block></block>
  <block id="3a4b2c66d4bdac6ce0e3340c71a39eda" category="inline-link">Astra Control Center のドキュメント</block>
  <block id="ea643bf7aaf130341a17f697a7009368" category="list-text"><block ref="ea643bf7aaf130341a17f697a7009368" category="inline-link-rx"></block></block>
  <block id="9d6ffa6ef31bd0b92876314219f18ef5" category="inline-link">Astra API ドキュメント</block>
  <block id="9c2cf0e947812ecb3fc0bfccaa8b3c61" category="list-text"><block ref="9c2cf0e947812ecb3fc0bfccaa8b3c61" category="inline-link-rx"></block></block>
  <block id="4546bbd46f06879787b5670b13277b28" category="paragraph">このステップの一環として、 21.10.0 Trident オペレータが既存の Astra Trident インストールを特定し、オペレータと同じバージョンにアップグレードします。</block>
  <block id="9f687b4e8cbf2fbb623b26b30fd92717" category="admonition">21.07 より前のリリースでは、レガシードキュメントサイトにリダイレクトされます。</block>
  <block id="a93e9e44b7a375a4236260f5ff2b251e" category="inline-link">Astra Trident 21.07</block>
  <block id="3830d427e146a8a64454dc373d9b1502" category="list-text"><block ref="3830d427e146a8a64454dc373d9b1502" category="inline-link-rx"></block></block>
  <block id="e088e1f9fcd6d6a9509bd529db24c8f3" category="admonition">Trident の名前空間をまだ作成していない場合は '--create-namespace パラメータを helm install コマンドに追加できますHelm によってネームスペースが自動的に作成されます。</block>
  <block id="8035d5d39b2b48f6ec1a3133b688513c" category="list-text">Astra データストア</block>
  <block id="af7c8216a3289efe1a298a19c00b8b8c" category="section-title">テスト済みのホストオペレーティングシステム</block>
  <block id="57b3e1695eb7d16642702fbce3837b86" category="paragraph">デフォルトでは、 Astra Trident はコンテナで実行されるため、任意の Linux ワーカーで実行されます。ただし、その場合、使用するバックエンドに応じて、標準の NFS クライアントまたは iSCSI イニシエータを使用して Astra Trident が提供するボリュームをマウントできる必要があります。</block>
  <block id="814a65adc75608da31ab5685f9b1c1ce" category="paragraph">Astra Trident は、特定のオペレーティングシステムを正式にサポートしているわけではありませんが、次の Linux ディストリビューションが動作することはわかっています。</block>
  <block id="dc5ac69fee94d861f0bed64729b712cf" category="paragraph">Trident を使用するには、バックエンド構成でストレージシステムを使用する前に、一部の変更が必要になることがあります。を参照してください <block ref="49641f5ab61d7a6ce07b1b6ba31204f8" category="inline-link-macro-rx"></block> を参照してください。</block>
  <block id="b0b4b8e52878f03279584f43bc961472" category="list-text">k81.gcr.io/sig-storage/csi-Provisioner ： v2.2.2</block>
  <block id="3c8910d4db724229b566887801de96bb" category="list-text">k81.gcr.io/sig-storage/csi-resizer ： v1.3.0</block>
  <block id="681d715b456f6d29a501b8f132e941a1" category="cell">v1.22.0</block>
  <block id="80fa8f92dc0ebf122ed30a4a88fda343" category="doc">Astra Trident 22.01 のドキュメント</block>
  <block id="c0227cef6f07a8cd2ac72f2945b031aa" category="section-title">オープンソース</block>
  <block id="0172b29a9f5d94dc62ee592a98183f3b" category="paragraph">ネットアップの Astra Trident 向けソフトウェアで使用されているサードパーティの著作権とライセンスは、の各リリースの通知ファイルで確認できます<block ref="4a3c8c5a408c6db1c44c04391a8a0a2f" category="inline-link-rx"></block>。</block>
  <block id="29db8b676d0a02f8179869506102c8ce" category="doc">バックエンドに ONTAP または Cloud Volumes ONTAP SAN ドライバを設定します</block>
  <block id="133184f8c608809bdc057abf1397d10d" category="paragraph">ONTAP および Cloud Volumes ONTAP SAN ドライバを使用した ONTAP バックエンドの設定について説明します。</block>
  <block id="879d65b9b2cc663b2ff6a01cfe8d4c72" category="paragraph">Astra Trident の 20.01 リリースから、 Kubernetes レイヤで PVS のスナップショットを作成できるようになりました。この Snapshot を使用して、 Astra Trident で作成されたボリュームのポイントインタイムコピーを管理し、追加のボリューム（クローン）の作成をスケジュールできます。ボリューム・スナップショットは 'ONTAP-NAS'`ONTAP-SAN'ONTAP-SAN'ONTAP-エコノミー ''solidfire-SAN'AWS- cvs'' によってサポートされています 「 gcp-cvs 」、「 azure-NetApp-files 」ドライバ。</block>
  <block id="311847a44163ac40ccf470fcf81e74fb" category="admonition">GKE 環境でオンデマンドボリュームスナップショットを設定する場合は、スナップショットコントローラを作成しないでください。GKE では、内蔵の非表示のスナップショットコントローラを使用します。</block>
  <block id="75419edaab27be09afdb3415e83d93f6" category="paragraph">'UDO mpathconf--enable --with _multipathd y -- find _multipaths n</block>
  <block id="60c268e00db3206011b54b01705d7211" category="admonition">「 /etc/multipath.conf 」に「 find _ multipaths no 」が「 defVaults 」に含まれていることを確認します。</block>
  <block id="b85c80e2af7e3d7dd06b874ed048d430" category="paragraph">'sudo tee//etc/multipath.conf &lt;-' EOF ' defaults ｛ user_friendy_names yes find _multipaths no ｝ EOF sudo systemctl enable -- 今では multipath-tools.service sudo service multipath-tools restart'</block>
  <block id="a3610578ce54198653d7e0b2cc53c05d" category="inline-link-macro">バックエンドに ONTAP または Cloud Volumes ONTAP NAS ドライバを設定します</block>
  <block id="f4f833852bac4217eff92d53c1bd24dc" category="list-text"><block ref="f4f833852bac4217eff92d53c1bd24dc" category="inline-link-macro-rx"></block></block>
  <block id="df7d9b009cdb0a2623872cb3f905e161" category="list-text"><block ref="df7d9b009cdb0a2623872cb3f905e161" category="inline-link-macro-rx"></block></block>
  <block id="4d80e2460d711b841338dfbeea2ca8c1" category="paragraph">ONTAP および Cloud Volumes ONTAP の NAS ドライバを使用した ONTAP バックエンドの設定について説明します。</block>
  <block id="3381a309aeefac050f7f5319f6757afe" category="summary">Astra Trident のインストール用に Astra Data Store （ ADS ）バックエンドを設定する方法について、付属の構成例を参照してください。</block>
  <block id="83caf3e7a6bf2dcce3d7d6eab3c8905c" category="doc">Astra データストアバックエンドを構成する</block>
  <block id="0b1c01b976c493a4217d6f4b772849b0" category="paragraph">Astra Trident のインストールに Astra Data Store （ ADS ）バックエンドを設定する方法を、付属の設定例で説明しています。</block>
  <block id="efd5e8dbeec263f783a6cd6ac036c6a9" category="paragraph">を設定して使用します<block ref="a026c15058b831feb6de8c4c836387ae" category="inline-link-rx"></block> バックエンドには次のものが必要です。</block>
  <block id="0033a0be965b04e889c13f8699fa52ca" category="inline-link-macro">Astra データストアプレビュー版のドキュメント</block>
  <block id="44353297d28e56e03a6c2fa8ed4c436d" category="list-text">サポートされている ADS ストレージシステム。を参照してください <block ref="a495e7dcf960e6114a66e71691c841e9" category="inline-link-macro-rx"></block> を参照してください。</block>
  <block id="c7f6917a3ac9bd1d4133a82dc3260748" category="list-text">ADS をホストしている Kubernetes クラスタのクレデンシャル。ADS をホストしている Kubernetes クラスタには、この Astra Trident バックエンドが作成および管理するボリューム、 Snapshot 、およびエクスポートポリシーリソース専用のネームスペースが必要です。以下をサポートする広告をホストする Kubernetes クラスタには「 kubeconfig 」が必要です。</block>
  <block id="cebbe731acfa0b8c520f355bcbfa6dd1" category="list-text">'astrs-system' 名前空間内のすべてのオブジェクトを読み取ります</block>
  <block id="cb90bccb2cf5bc16b37e39d379d5a5ea" category="list-text">この Astra Trident バックエンドで使用するために作成されたネームスペース内のオブジェクトの読み取り / 書き込み</block>
  <block id="2f191460bd4d4750f88513ea54101bed" category="list-text">すべてのクラスタネームスペースをリストします</block>
  <block id="e269f9fe19f18e73c77815dddc019d7b" category="cell">「 astrads - NAS 」</block>
  <block id="5b4fc65310144922f0384b20a00bd6ae" category="cell">ADS クラスタ名</block>
  <block id="65e18a0bb1868a9c1e181302d4733dba" category="cell">「クラスタ」</block>
  <block id="d24ec3d66e6303208e4767ec5cccbc76" category="cell">AstraDSCluster リソースの名前</block>
  <block id="a4c39aafd14948aacfcc4f9c6374a875" category="cell">Astra Trident がすべての ADS カスタムリソースを作成するネームスペース</block>
  <block id="995c6425a4a00f961b0c8a2000c5497c" category="cell">「 kubeconfig 」</block>
  <block id="dc37fa78a7cf3d9ae1dbf70f4430a142" category="cell">ADS Kubernetes クラスタのクレデンシャル（ Base64 コンパクト JSON ）</block>
  <block id="e5f77e38f271802a5a75ecdffe577104" category="cell">" VERs=4.1 "</block>
  <block id="2949ef191693d444cc1f96962c1fd8ae" category="cell">「 autoExportPolicy 」が有効な場合に、 Kubernetes のノード IP をフィルタリングするための CIDR のリスト</block>
  <block id="1abbe16b7053d16fb89efaebd94484be" category="cell">[ 「 0.0.0.0/0 」、「：： /0 」 ]</block>
  <block id="857a0a2e6dd17cb6e0022d80855b338a" category="cell">トラブルシューティング時に使用するデバッグフラグ。例： ｛ "api" ： false 、 "method" ： true ｝</block>
  <block id="0ffdeb640d4a5fc9f33736feec8d274f" category="admonition">バックエンド構成に含める前に、「 kubeconfig 」の値を YAML から compact JSON 形式に変換し、 Base64 形式に変換する必要があります。</block>
  <block id="5ef844cc326d7b10c0f674ac9b2b3c74" category="paragraph">各バックエンドは、 ADS をホストする Kubernetes クラスタ上の単一のネームスペースにボリュームをプロビジョニングします。他のネームスペースにボリュームを作成する場合は、追加のバックエンドを定義できます。ADS ボリュームは、ホスティングクラスタ内の任意のネームスペース、他の Kubernetes クラスタ、または NFS 共有をマウントできるその他の任意の場所に接続できます。</block>
  <block id="f2319c1b13782c7170018cdd5fb7fd49" category="paragraph">これらのオプションを使用して構成ファイルの特別なセクションで、各ボリュームのデフォルトのプロビジョニングを制御できます。</block>
  <block id="77c62856cfaac230e7c2fd8139d7c2c8" category="paragraph">以下の設定例を参照してください。</block>
  <block id="ef616ce0e78a1254437e682f723bb5e6" category="cell">新しいボリュームのモード。 8 進数で「 0 」で始まる必要があります。</block>
  <block id="6474dd374337126fa99c86e653ebfd64" category="cell">"0777"</block>
  <block id="5964a48430cb8e8190dbd855a8514a0c" category="cell">"5"</block>
  <block id="115261f04e7f7d964bc608b63a82b482" category="cell">作成したボリュームに割り当てる QoS ポリシー</block>
  <block id="9d4568c009d203ab10e33ea9953a0264" category="cell">""</block>
  <block id="cf04ead37df0a76237b27de327c0cd03" category="admonition">ADS バックエンドで作成されたすべてのボリュームに対して、 Astra Trident はストレージプール上のすべてのラベルをプロビジョニング時にストレージボリュームにコピーします。ストレージ管理者は、ストレージプールごとにラベルを定義し、ストレージプールごとに作成されるすべてのボリュームをグループ化できます。これにより、バックエンド構成ファイルに含まれるカスタマイズ可能な一連のラベルに基づいてボリュームを簡単に区別できます。</block>
  <block id="b53453343f074fd64ef7129def93f57d" category="section-title">例 1 ：最小限のバックエンド構成</block>
  <block id="8f3db75549f212e0fdab2c542531a95e" category="paragraph">次の例は、 Astra Trident で作成されたすべてのストレージに同じ要素を適用するバックエンドファイルを示しています。</block>
  <block id="a2c81e41622f2e2616b33a689e229c72" category="paragraph">次の StorageClass 定義は、上記のストレージプールを参照してください。parameters.selector` フィールドを使用すると ' ボリュームのホストに使用される仮想プールを各 StorageClass に指定できますボリュームには、選択した仮想プール内で定義された要素があります。</block>
  <block id="f5037f01585529df5529040fa25eda7f" category="section-title">22.01.0 の新機能</block>
  <block id="bff57507323bddf3673af0ae7ab80e2b" category="paragraph">ネットアップは、製品やサービスの改善と強化を継続的に行っています。Astra Trident の最新機能をいくつかご紹介します。以前のリリースについては、を参照してください<block ref="a3e07c08f1bbcd23d8422302f837e06b" category="inline-link-rx"></block>。</block>
  <block id="7072ec708b0ea7e3243747d8b79c0d20" category="admonition">以前のリリースの Trident からアップグレードして Azure NetApp Files を使用する場合 ' 現在 'location`config パラメータは ' 必須のシングルトンフィールドになっています</block>
  <block id="b956e1f58f802db57dd9f871ac59ed6c" category="paragraph">リソース名が重複して 1 箇所に操作が制限されるように ANF ドライバを修正しました。</block>
  <block id="851679bec9b3e6c8e6284128fb750b1e" category="list-text">Kubernetes の機能拡張：</block>
  <block id="2767b461b2b49786f390c9e0509d2d12" category="list-text">Kubernetes 1.23 のサポートが追加されました。</block>
  <block id="7f10502f6f15537f180f07f0c89d2642" category="inline-link-macro">GitHub 問題 #651</block>
  <block id="2ff7a365e7c341f8f381cd7c2a4e15f6" category="list-text">Trident Operator または Helm 経由でインストールした場合、 Trident ポッドのスケジュールオプションを追加します。（<block ref="15fbe6dcd60762941b28bc5990803bde" category="inline-link-macro-rx"></block>)</block>
  <block id="90fdd892e78b26eb18a250c9c1bc19ff" category="inline-link-macro">GitHub 問題 #633</block>
  <block id="3ff8e54aa1f3735deb64771c4c65c420" category="list-text">GCP ドライバでリージョン間のボリュームを許可します。（<block ref="efd445659801b6abfdba2997e23e5f4f" category="inline-link-macro-rx"></block>)</block>
  <block id="fef8c75d6cd00955b0f1c84d40af01aa" category="inline-link-macro">GitHub 問題 #666</block>
  <block id="9f81aabbbba9f61bfecaf1340c407ed1" category="list-text">ANF ボリュームでの「 unixPermissions 」オプションのサポートが追加されました。（<block ref="b2ee1a79cce917ad1d60b3bec442914a" category="inline-link-macro-rx"></block>)</block>
  <block id="a4233200da50a08b295311036bb03ac1" category="section-title">非推奨</block>
  <block id="de6284c149d2e011da3909f1ef2af627" category="paragraph">Trident REST インターフェイスは、 127.0.0.1 または [::1] アドレスでのみリスンおよびサービスを提供できます</block>
  <block id="b4ffe37e7e4ec63b5a66f2d1ecdbf6c0" category="section-title">Astra Trident 21.10.1 の変更点</block>
  <block id="cdb544a92bee555749f43046d53ef34e" category="admonition">v21.10.0 リリースには、ノードが削除されてから Kubernetes クラスタに再度追加されたときに、 Trident コントローラを CrashLoopBackOff 状態にすることができる問題があります。この問題は、 v21.10.1 (GitHub 問題 669) で修正されています。</block>
  <block id="cd1bf2431d703fd3c62a278b9c812d56" category="list-text">GCP CVS バックエンドでボリュームをインポートする際の競合状態が修正され、インポートに失敗することがありました。</block>
  <block id="8e1e1dad95de3dc781f25f58483acdf3" category="list-text">ノードを削除してから Kubernetes クラスタ（ GitHub 問題 669 ）に再度追加するときに、 Trident コントローラを CrashLoopBackOff 状態にする問題を修正しました。</block>
  <block id="d7c32cb5ff2be4aaff3a8eaea9d18e0d" category="list-text">SVM 名を指定しなかった場合に問題が検出されないという問題を修正しました（ GitHub 問題 612 ）。</block>
  <block id="f306ba062619a23c0afe1a50a50799f6" category="section-title">21.10.0 の変更点（ Astra Trident 21.07 以降）</block>
  <block id="2f1ab5b99f1893144b69718c274415f4" category="paragraph">間 <block ref="a3b750e7ac33c9792c64627692f306aa" category="inline-link-macro-rx"></block> Trident の REST API を操作するには簡単です。 REST エンドポイントは必要に応じて直接使用できます。</block>
  <block id="a55b7ee69c26277a1088efc103e15297" category="paragraph">使用可能なコマンドとグローバルオプションは次のとおりです。</block>
  <block id="94912f7fb206038e8527957b44dfbf25" category="paragraph">すべての Trident ポッドが再起動されます。これには数秒かかることがあります。これを確認するには 'kubectl get pod -n trident' の出力の 'age' 列を確認します</block>
  <block id="498784627f42c14468b84a1a351bd462" category="sidebar">ADS バックエンドを設定します</block>
  <block id="fe3b4c5750a12d7254dee5e87c55bb40" category="list-text">Kubernetes 1.17 以降（最新： 1.23 ）</block>
  <block id="10ae2729ec6b89f9c276ab2da5409336" category="list-text">OpenShift 4.7 、 4.8 、 4.9</block>
  <block id="f2f0da9b50bd2001bc802c121fc76254" category="admonition">Red Hat OpenShift Container Platform のユーザは、 4.1.8 よりも前のバージョンを使用している場合、 initiatorname.iscsi ファイルが空白になる可能性があります。これは RedHat によって識別されているバグで、 OpenShift 4.1.8 で修正されています。を参照してください<block ref="ac064f2337a2fc6c16c562bc9e386352" category="inline-link-rx"></block>。ネットアップでは、 OpenShift 4.6.8 以降で Astra Trident を使用することを推奨しています。</block>
  <block id="0f6e0df69462b7a5d101ec1a3fa8a376" category="list-text">NetApp HCI / Element ソフトウェア 11 以降</block>
  <block id="597a56086e1f9d7ca5e8f55c40a0153a" category="list-text">OpenShift Container Platform でサポートされている Red Hat CoreOS （ RHCOS ）バージョン</block>
  <block id="83f21d8f3725c4e4a96d4e8da9c06403" category="list-text">NetApp / Trident ： 22.01.0</block>
  <block id="0e3db22955e0ef2a04155e743fdcd843" category="list-text">NetApp / Trident -autosupport ： 22.01.</block>
  <block id="52d5de12f37c2ff6a4de253d20947ca2" category="list-text">k83.GCR.IO/sig-storage/csi-attacher: v3.4.0</block>
  <block id="f86452b351d644230a6ab4c2d580e193" category="list-text">k8s 。 gcr.io/sig-storage/csi-node-driver-registrar: v2.4.0</block>
  <block id="9b73461bc19f14ce7a87a56f6890ca87" category="list-text">NetApp/trident-operator ： 22.01.0 （オプション）</block>
  <block id="ad9d572821da9bfff3397f2d3260509d" category="list-text">K83.GCR.IO/sig-storage/csi-Provisioner ： v3.1.0</block>
  <block id="73e93ad328287e5ce4c06228cfdba2bf" category="cell">v1.3.0</block>
  <block id="f2fe14f2f47e170d6135f34f6214adcb" category="list-text">オンプレミス（ VMware ）と Anthos はベアメタル 1.8 、 1.9 上にあります</block>
  <block id="08ee53e1d5cefb7967a295e98036598e" category="cell">.snapshot ディレクトリの表示を制御します</block>
  <block id="9837781971083d3fe119b0217014d301" category="list-text">少なくとも 1 つを含む Azure の「場所」<block ref="c5f14b2142014dc234282a513132bad4" category="inline-link-rx"></block>。Trident 22.01 では、「 location 」パラメータはバックエンド構成ファイルの最上位にある必須フィールドです。仮想プールで指定された場所の値は無視されます。</block>
  <block id="3d1c87b616fe621310b766603b6c175d" category="admonition">注： Astra Trident は、手動の QoS 容量プールをサポートしていません。</block>
  <block id="016a4b469916e37291cfe2f7fab49aaf" category="cell">「 resourceGroups 」</block>
  <block id="66d09fbe1165f3d10b368cbe0cc029f4" category="cell">検出されたリソースをフィルタリングするためのリソースグループのリスト</block>
  <block id="36cbcb8a57112362b05d06b9fe037a6e" category="cell">"[]" （フィルタなし）</block>
  <block id="d4b4343f054233d7d339bb1501425fd4" category="cell">「 netappAccounts 」のように入力します</block>
  <block id="61476ef20a8015760b9cb3c1bd0ea435" category="cell">検出されたリソースをフィルタリングするためのネットアップアカウントのリスト</block>
  <block id="722c7b4409fa4d1fe6aaa2902ae66473" category="cell">「 capacityPools</block>
  <block id="225abbb59bc0bbaa2a5852ada333b31b" category="cell">検出されたリソースをフィルタリングする容量プールのリスト</block>
  <block id="f2a5b99a63a463017b3e5f5848444d9a" category="cell">"[]" （フィルタなし、ランダム）</block>
  <block id="91b3c29beb3641dce2fcf3d2382fac4f" category="cell">トラブルシューティング時に使用するデバッグフラグ。例 : `\{"API":false," メソッド ":true," 検出 ":true}`トラブルシューティングを行って詳細なログダンプが必要な場合を除き、このオプションは使用しないでください。</block>
  <block id="b025cb91ea905e0ae1a879fe81e5ff18" category="admonition">NFS バージョン 4.1 を使用してボリュームをマウントする場合は、 NFS v4.1 を選択するために、カンマ区切りのマウントオプションリストに「 nfsvers=4` 」を含めることができます。ストレージクラスで設定されたマウントオプションは、バックエンド構成ファイルで設定されたマウントオプションよりも優先されます。</block>
  <block id="eaea97dbd365f00421eb397e8eabeebf" category="paragraph">resourceGroups'netappAccounts'capacityPools'virtualNetwork' および 'subnet' の値は ' 短い名前または完全修飾名を使用して指定できます省略形は同じ名前の複数のリソースに一致している可能性があるため、ほとんどの場合は完全修飾名を使用することを推奨します。resourceGroups'netappAccounts'capacityPools' の値は ' 検出されたリソースのセットをこのストレージバックエンドで使用可能なリソースに制限するフィルタであり ' 任意の組み合わせで指定できます完全修飾名の形式は次のとおりです。</block>
  <block id="520d0db389f362bf79ef56ca0af3dcab" category="cell">の形式で入力し</block>
  <block id="dde92bca1b59f0db813ef42a2688752e" category="cell">リソースグループ</block>
  <block id="671e72ca3ef632233f4c27dfef1ec109" category="cell">&lt; リソースグループ &gt;</block>
  <block id="ac252743de820aac9183d9f76d4bed67" category="cell">ネットアップアカウント</block>
  <block id="2bf2783c6d0d867a9fe629138b38bd84" category="cell">&lt; リソースグループ &gt;/&lt; ネットアップアカウント &gt;</block>
  <block id="9eea1c08013c37f1499f428378764a08" category="cell">容量プール</block>
  <block id="01c656d6b97f45a90022ee307283ae01" category="cell">&lt; リソースグループ &gt;/&lt; ネットアップアカウント &gt;/&lt; 容量プール &gt;</block>
  <block id="bf76cafc47141522dca89c4d6e25b822" category="cell">仮想ネットワーク</block>
  <block id="8c9309282517a29ad09b10443d825c7c" category="cell">&lt; リソースグループ &gt;/&lt; 仮想ネットワーク &gt;</block>
  <block id="9770c6469e9d27585d6c0c389ede7bc3" category="cell">サブネット</block>
  <block id="7addf9faaab78a084548d05b695cd2e2" category="cell">&lt;resource group&gt;/&lt; 仮想ネットワーク &gt;/&lt; サブネット &gt;</block>
  <block id="3e71a01ee522f366b6eeb2990e170fde" category="cell">新しいボリュームの UNIX 権限（ 8 進数の 4 桁）</block>
  <block id="976a6dc52dbcabb541efa0a91e922604" category="cell">"" （プレビュー機能、サブスクリプションでホワイトリスト登録が必要）</block>
  <block id="54042b89155d99a3568a196cb5ff1da8" category="paragraph">これは、バックエンドの絶対的な最小構成です。この構成では、 ANF に委譲されたネットアップアカウント、容量プール、サブネットがすべて検出され、それらのプールまたはサブネットの 1 つに新しいボリュームがランダムに配置されます。</block>
  <block id="a78703e6fcb2511d5a565496df5b2082" category="section-title">例 2 ：容量プールフィルタを使用した特定のサービスレベル設定</block>
  <block id="6da664b0342ea1be008211c33f1eb020" category="paragraph">このバックエンド構成では 'Ultra 容量プール内の Azure の eastus ロケーションにボリュームを配置しますAstra Trident は、 ANF に委譲されたすべてのサブネットをその場所で自動的に検出し、いずれかのサブネットに新しいボリュームをランダムに配置します。</block>
  <block id="b0f4f0ac7ea6be4c3047dd422c23539b" category="paragraph">Astra Trident 22.01 を実行していない場合は、以前のリリースのドキュメントを参照できます。</block>
  <block id="cce172403b73af5c2a4e93081affcc7f" category="inline-link">Astra Trident 21.10</block>
  <block id="606b9e83fb467a43b3065d4fd5037094" category="list-text"><block ref="606b9e83fb467a43b3065d4fd5037094" category="inline-link-rx"></block></block>
  <block id="ee50d481128d1543f9945b4a4f3fbe9d" category="paragraph">エアギャップのある環境では、 Astra Trident のインストールに必要なコンテナイメージを次の表に示します。tridentctl images コマンドを使用して ' 必要なコンテナイメージのリストを確認します</block>
  <block id="ec3f9af8f611100a0182ffb9ab2e5ef8" category="paragraph">ONTAP 内では、 Trident ドライバが使用できるより制限的な役割を作成することもできますが、推奨しません。Trident の新リリースでは、多くの場合、考慮すべき API が追加で必要になるため、アップグレードが難しく、エラーも起こりやすくなります。</block>
  <block id="ee50ce7340da5b018abe62c8e613cae0" category="summary">Astra Trident は、 Trident オーケストレーションツール用のコマンドラインオプションをいくつか提供し、特定のポートを介して通信を行います。</block>
  <block id="94efe0c9471991c69d2a3b0970a56744" category="paragraph">Trident は、 Trident オーケストレーションツールのコマンドラインオプションをいくつか公開しています。これらのオプションを使用して、導入環境を変更できます。</block>
  <block id="be1c3d3113c4023e29e8dd947523c711" category="inline-link">Astra データストアのドキュメント</block>
  <block id="c54241e3258a450b02a723d6d751a4f1" category="list-text"><block ref="c54241e3258a450b02a723d6d751a4f1" category="inline-link-rx"></block></block>
  <block id="55f3fc550e9a03a95334f3a19f0920cc" category="cell">solidfire-san-group 、 ontap/nas 、 ontap -nas-エコノミー 、 ontap -nas-flexgroup 、 ontap -san 、 ONTAP - SAN 経済、 eseries-iscsi</block>
  <block id="6add71a247c8f4513060920be14857bc" category="cell">allowVolumeExpansion の略</block>
  <block id="84e2c64f38f78ba3ea5c905ab5a2da27" category="cell">ブール値</block>
  <block id="675e3f37a9adfd7ab6433906c490fa06" category="cell">PVC サイズの拡張のサポートをイネーブルまたはディセーブルにします</block>
  <block id="c791531450eeeb073b30215d9c306a00" category="cell">1.11 以上</block>
  <block id="086b513e7d83c4cf32a8bd3550679276" category="cell">volumeBindingMode のようになりました</block>
  <block id="fd656a4f359aa12808a6d0ceb5792342" category="cell">即時、 WaitForFirstConsumer</block>
  <block id="5e7777e1f9cfa3a93159ee44cf3f1f5a" category="cell">ボリュームバインドと動的プロビジョニングを実行するタイミングを選択します</block>
  <block id="9c26b95cff78678b07389bb95544c7b6" category="cell">1.17 以上</block>
  <block id="8264769021597389583b0a7d1fa7e076" category="inline-link-macro">Kubernetes ：ポッドまたはコンテナのセキュリティコンテキストを設定します</block>
  <block id="dca8809f382a96564d64ae1525b39048" category="list-text">SAN LUN に必要なファイル・システム・タイプを制御するには 'fsType' パラメータを使用しますまた 'Kubernetes は ' ストレージ・クラスに fsType が存在することも使用して ' ファイル・システムが存在することを示しますボリューム所有権は 'fsType' が設定されている場合に限り 'pod の fsGroup' セキュリティコンテキストを使用して制御できますを参照してください <block ref="7940a62969e5aeae7f6e32b04e7a11e3" category="inline-link-macro-rx"></block> 「 fsGroup 」コンテキストを使用したボリューム所有権の設定の概要については、を参照してください。次の場合にのみ 'fsGroup' 値が適用されます</block>
  <block id="6dd29ca7439e52dcf2fbc569066b3d67" category="list-text">「 fsType 」はストレージクラスで設定されます。</block>
  <block id="45d2174daba36b76955e69d2eddf26ca" category="list-text">PVC アクセスモードは RWO です。</block>
  <block id="ba5b62efad4f90a8f4bb806cba4a3ea4" category="paragraph">NFS ストレージドライバの場合、 NFS エクスポートにはファイルシステムがすでに存在します。fsGroup を使用するには ' ストレージ・クラスで fsType を指定する必要がありますこの値は 'NFS' に設定することも ' ヌル以外の任意の値に設定することもできます</block>
  <block id="4811aaaf5eedea1ea9f703353903b5b5" category="list-text">を参照してください <block ref="c35b155baa39b6aa36cf9bc59eea88f3" category="inline-link-macro-rx"></block> ボリューム拡張の詳細については、を参照してください。</block>
  <block id="853119066470e5145f87024e7c6accdb" category="cell">ONTAPNAS 、 ONTAPNAS エコノミー、 ONTAP-NAS-flexgroup 、 ONTAPSAN 、 ONTAP-SAN-エコノミー 、 solidfire-san-san 、 aws -cvs 、 gcp-cvs 、 azure-netapp-files</block>
  <block id="23038d88eea805ac06a26959fc129ca5" category="admonition">NetApp Aggregate Encryption （ NAE ）は、現在 Trident ではサポートされていません。</block>
  <block id="18cf072964a583150dd247485ba75b92" category="admonition-title">ONTAP 対応の Amazon FSX</block>
  <block id="fa8bc73a8436dd2f79aafaa731d248e4" category="list-text">「 limitAggregateUsage 」パラメータは、「 vsadmin 」および「 fsxadmin 」ユーザアカウントでは機能しません。このパラメータを指定すると設定処理は失敗します。</block>
  <block id="c7e012baf676feb8d925d8f535c01c02" category="list-text">NetApp ONTAP ボリューム用の Amazon FSX には、 SnapMirror が事前に設定されています。Trident では変更や解除はできません。PVC を削除するには、 NetApp ONTAP ボリュームの PV と FSX を手動で削除する必要があります。</block>
  <block id="7b3ecf601e0eee1c9d097083281abafa" category="example-title">例を展開します</block>
</blocks>